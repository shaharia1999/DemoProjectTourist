{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getContrastRatio;\n\nvar _getLuminance = _interopRequireDefault(require(\"./getLuminance\"));\n\nfunction getContrastRatio(foreground, background) {\n  var lumA = (0, _getLuminance[\"default\"])(foreground);\n  var lumB = (0, _getLuminance[\"default\"])(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05).toFixed(3);\n}","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/node_modules/react-rainbow-components/styles/helpers/color/getContrastRatio.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getContrastRatio","_getLuminance","foreground","background","lumA","lumB","Math","max","min","toFixed"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,gBAArB;;AAEA,IAAIC,aAAa,GAAGP,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,SAASK,gBAAT,CAA0BE,UAA1B,EAAsCC,UAAtC,EAAkD;AAChD,MAAIC,IAAI,GAAG,CAAC,GAAGH,aAAa,CAAC,SAAD,CAAjB,EAA8BC,UAA9B,CAAX;AACA,MAAIG,IAAI,GAAG,CAAC,GAAGJ,aAAa,CAAC,SAAD,CAAjB,EAA8BE,UAA9B,CAAX;AACA,SAAO,CAACG,IAAI,CAACC,GAAL,CAASH,IAAT,EAAeC,IAAf,IAAuB,IAAxB,IAAgC,CAACC,IAAI,CAACE,GAAL,CAASJ,IAAT,EAAeC,IAAf,IAAuB,IAAxB,EAA8BI,OAA9B,CAAsC,CAAtC,CAAvC;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getContrastRatio;\n\nvar _getLuminance = _interopRequireDefault(require(\"./getLuminance\"));\n\nfunction getContrastRatio(foreground, background) {\n  var lumA = (0, _getLuminance[\"default\"])(foreground);\n  var lumB = (0, _getLuminance[\"default\"])(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05).toFixed(3);\n}"]},"metadata":{},"sourceType":"script"}