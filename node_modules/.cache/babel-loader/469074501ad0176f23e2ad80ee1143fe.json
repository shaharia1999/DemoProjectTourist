{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useDefaultTooltipConnector;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _hooks = require(\"@rainbow-modules/hooks\");\n\nfunction resolveElement(ref) {\n  if (typeof ref === 'function') {\n    var ret = ref();\n    return ret && ret.current;\n  }\n\n  return ref && ref.current;\n}\n\nfunction useDefaultTooltipConnector(_ref) {\n  var tooltipRef = _ref.tooltipRef,\n      triggerRef = _ref.triggerRef;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isVisible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var isFocused = (0, _react.useRef)(false);\n  (0, _hooks.useScrollingIntent)({\n    callback: function callback() {\n      return setVisible(false);\n    },\n    isListening: isVisible,\n    triggerElementRef: triggerRef\n  });\n  (0, _hooks.useOutsideClick)(tooltipRef, function (event) {\n    if (!resolveElement(triggerRef).contains(event.target)) {\n      setVisible(false);\n    }\n  }, isVisible);\n  var onFocus = (0, _react.useCallback)(function () {\n    isFocused.current = true;\n    setVisible(true);\n  }, []);\n  var onBlur = (0, _react.useCallback)(function () {\n    isFocused.current = false;\n    setVisible(false);\n  }, []);\n  var onMouseEnter = (0, _react.useCallback)(function () {\n    setVisible(true);\n  }, []);\n  var onMouseLeave = (0, _react.useCallback)(function () {\n    if (!isFocused.current) {\n      setVisible(false);\n    }\n  }, []);\n  return {\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    isVisible: isVisible\n  };\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/InternalTooltip/hooks/useDefaultTooltipConnector.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useDefaultTooltipConnector","_slicedToArray2","_react","_hooks","resolveElement","ref","ret","current","_ref","tooltipRef","triggerRef","_useState","useState","_useState2","isVisible","setVisible","isFocused","useRef","useScrollingIntent","callback","isListening","triggerElementRef","useOutsideClick","event","contains","target","onFocus","useCallback","onBlur","onMouseEnter","onMouseLeave"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useDefaultTooltipConnector;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _hooks = require(\"@rainbow-modules/hooks\");\n\nfunction resolveElement(ref) {\n  if (typeof ref === 'function') {\n    var ret = ref();\n    return ret && ret.current;\n  }\n\n  return ref && ref.current;\n}\n\nfunction useDefaultTooltipConnector(_ref) {\n  var tooltipRef = _ref.tooltipRef,\n      triggerRef = _ref.triggerRef;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isVisible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var isFocused = (0, _react.useRef)(false);\n  (0, _hooks.useScrollingIntent)({\n    callback: function callback() {\n      return setVisible(false);\n    },\n    isListening: isVisible,\n    triggerElementRef: triggerRef\n  });\n  (0, _hooks.useOutsideClick)(tooltipRef, function (event) {\n    if (!resolveElement(triggerRef).contains(event.target)) {\n      setVisible(false);\n    }\n  }, isVisible);\n  var onFocus = (0, _react.useCallback)(function () {\n    isFocused.current = true;\n    setVisible(true);\n  }, []);\n  var onBlur = (0, _react.useCallback)(function () {\n    isFocused.current = false;\n    setVisible(false);\n  }, []);\n  var onMouseEnter = (0, _react.useCallback)(function () {\n    setVisible(true);\n  }, []);\n  var onMouseLeave = (0, _react.useCallback)(function () {\n    if (!isFocused.current) {\n      setVisible(false);\n    }\n  }, []);\n  return {\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    isVisible: isVisible\n  };\n}"]},"metadata":{},"sourceType":"script"}