{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getUpdatedColumns;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _getTotalWidthsMetadata = _interopRequireDefault(require(\"./getTotalWidthsMetadata\"));\n\nvar _getExpectedTableWidth = _interopRequireDefault(require(\"./getExpectedTableWidth\"));\n\nvar _getExpectedFlexibleColumnWidth = _interopRequireDefault(require(\"./getExpectedFlexibleColumnWidth\"));\n\nvar _getColumnWidthFromDef = _interopRequireDefault(require(\"./getColumnWidthFromDef\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getUpdatedColumns(params) {\n  var columns = params.columns,\n      domTableWidth = params.domTableWidth,\n      minColumnWidth = params.minColumnWidth,\n      maxColumnWidth = params.maxColumnWidth;\n  var widthsMeta = (0, _getTotalWidthsMetadata[\"default\"])({\n    columns: columns,\n    minColumnWidth: Number(minColumnWidth),\n    maxColumnWidth: Number(maxColumnWidth)\n  });\n  var expectedTableWidth = (0, _getExpectedTableWidth[\"default\"])(domTableWidth, widthsMeta);\n  var expectedFlexibleColumnWidth = (0, _getExpectedFlexibleColumnWidth[\"default\"])(widthsMeta, expectedTableWidth);\n  return columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, column), {}, {\n      computedWidth: (0, _getColumnWidthFromDef[\"default\"])(column) || expectedFlexibleColumnWidth\n    });\n  });\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/Table/helpers/resizer/getUpdatedColumns.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getUpdatedColumns","_defineProperty2","_getTotalWidthsMetadata","_getExpectedTableWidth","_getExpectedFlexibleColumnWidth","_getColumnWidthFromDef","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","params","columns","domTableWidth","minColumnWidth","maxColumnWidth","widthsMeta","Number","expectedTableWidth","expectedFlexibleColumnWidth","map","column","computedWidth"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = getUpdatedColumns;\r\n\r\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\r\n\r\nvar _getTotalWidthsMetadata = _interopRequireDefault(require(\"./getTotalWidthsMetadata\"));\r\n\r\nvar _getExpectedTableWidth = _interopRequireDefault(require(\"./getExpectedTableWidth\"));\r\n\r\nvar _getExpectedFlexibleColumnWidth = _interopRequireDefault(require(\"./getExpectedFlexibleColumnWidth\"));\r\n\r\nvar _getColumnWidthFromDef = _interopRequireDefault(require(\"./getColumnWidthFromDef\"));\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\r\n\r\nfunction getUpdatedColumns(params) {\r\n  var columns = params.columns,\r\n      domTableWidth = params.domTableWidth,\r\n      minColumnWidth = params.minColumnWidth,\r\n      maxColumnWidth = params.maxColumnWidth;\r\n  var widthsMeta = (0, _getTotalWidthsMetadata[\"default\"])({\r\n    columns: columns,\r\n    minColumnWidth: Number(minColumnWidth),\r\n    maxColumnWidth: Number(maxColumnWidth)\r\n  });\r\n  var expectedTableWidth = (0, _getExpectedTableWidth[\"default\"])(domTableWidth, widthsMeta);\r\n  var expectedFlexibleColumnWidth = (0, _getExpectedFlexibleColumnWidth[\"default\"])(widthsMeta, expectedTableWidth);\r\n  return columns.map(function (column) {\r\n    return _objectSpread(_objectSpread({}, column), {}, {\r\n      computedWidth: (0, _getColumnWidthFromDef[\"default\"])(column) || expectedFlexibleColumnWidth\r\n    });\r\n  });\r\n}"]},"metadata":{},"sourceType":"script"}