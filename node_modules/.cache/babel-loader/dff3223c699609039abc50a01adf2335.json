{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hexToRgba;\n/* eslint-disable no-param-reassign */\n\nfunction hexToRgba(color) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  if (color.charAt(0) !== '#') {\n    return '';\n  }\n\n  color = color.substr(1);\n\n  if (color.length !== 3 && color.length !== 6) {\n    return '';\n  }\n\n  var regex = new RegExp(\".{1,\".concat(color.length / 3, \"}\"), 'g');\n  var colors = color.match(regex);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (value) {\n      return value + value;\n    });\n  }\n\n  return colors ? \"rgba(\".concat(colors.map(function (value) {\n    return parseInt(value, 16);\n  }).join(', '), \", \").concat(alpha, \")\") : '';\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/styles/helpers/color/hexToRgba.js"],"names":["Object","defineProperty","exports","value","hexToRgba","color","alpha","arguments","length","undefined","charAt","substr","regex","RegExp","concat","colors","match","map","parseInt","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,SAArB;AAEA;;AACA,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAhF;;AAEA,MAAIF,KAAK,CAACK,MAAN,CAAa,CAAb,MAAoB,GAAxB,EAA6B;AAC3B,WAAO,EAAP;AACD;;AAEDL,EAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAa,CAAb,CAAR;;AAEA,MAAIN,KAAK,CAACG,MAAN,KAAiB,CAAjB,IAAsBH,KAAK,CAACG,MAAN,KAAiB,CAA3C,EAA8C;AAC5C,WAAO,EAAP;AACD;;AAED,MAAII,KAAK,GAAG,IAAIC,MAAJ,CAAW,OAAOC,MAAP,CAAcT,KAAK,CAACG,MAAN,GAAe,CAA7B,EAAgC,GAAhC,CAAX,EAAiD,GAAjD,CAAZ;AACA,MAAIO,MAAM,GAAGV,KAAK,CAACW,KAAN,CAAYJ,KAAZ,CAAb;;AAEA,MAAIG,MAAM,IAAIA,MAAM,CAAC,CAAD,CAAN,CAAUP,MAAV,KAAqB,CAAnC,EAAsC;AACpCO,IAAAA,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAW,UAAUd,KAAV,EAAiB;AACnC,aAAOA,KAAK,GAAGA,KAAf;AACD,KAFQ,CAAT;AAGD;;AAED,SAAOY,MAAM,GAAG,QAAQD,MAAR,CAAeC,MAAM,CAACE,GAAP,CAAW,UAAUd,KAAV,EAAiB;AACzD,WAAOe,QAAQ,CAACf,KAAD,EAAQ,EAAR,CAAf;AACD,GAF8B,EAE5BgB,IAF4B,CAEvB,IAFuB,CAAf,EAED,IAFC,EAEKL,MAFL,CAEYR,KAFZ,EAEmB,GAFnB,CAAH,GAE6B,EAF1C;AAGD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hexToRgba;\n\n/* eslint-disable no-param-reassign */\nfunction hexToRgba(color) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  if (color.charAt(0) !== '#') {\n    return '';\n  }\n\n  color = color.substr(1);\n\n  if (color.length !== 3 && color.length !== 6) {\n    return '';\n  }\n\n  var regex = new RegExp(\".{1,\".concat(color.length / 3, \"}\"), 'g');\n  var colors = color.match(regex);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (value) {\n      return value + value;\n    });\n  }\n\n  return colors ? \"rgba(\".concat(colors.map(function (value) {\n    return parseInt(value, 16);\n  }).join(', '), \", \").concat(alpha, \")\") : '';\n}"]},"metadata":{},"sourceType":"script"}