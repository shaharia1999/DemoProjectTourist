{"ast":null,"code":"/*\r\nLanguage: Elm\r\nAuthor: Janis Voigtlaender <janis.voigtlaender@gmail.com>\r\nWebsite: https://elm-lang.org\r\nCategory: functional\r\n*/\n\n/** @type LanguageFn */\nfunction elm(hljs) {\n  const COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT(/\\{-/, /-\\}/, {\n      contains: ['self']\n    })]\n  };\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [{\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, COMMENT]\n  };\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n  const CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n  return {\n    name: 'Elm',\n    keywords: 'let in if then else case of where module import exposing ' + 'type alias as infix infixl infixr port effect command subscription',\n    contains: [// Top-level constructions.\n    {\n      beginKeywords: 'port effect module',\n      end: 'exposing',\n      keywords: 'port effect module where command subscription exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'import',\n      end: '$',\n      keywords: 'import as exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'type',\n      end: '$',\n      keywords: 'type alias',\n      contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: 'port',\n      end: '$',\n      keywords: 'port',\n      contains: [COMMENT]\n    }, // Literals and names.\n    CHARACTER, hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      begin: '->|<-'\n    } // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n}\n\nmodule.exports = elm;","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/highlight.js/lib/languages/elm.js"],"names":["elm","hljs","COMMENT","variants","contains","CONSTRUCTOR","className","begin","relevance","LIST","end","illegal","RECORD","CHARACTER","name","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","inherit","TITLE_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\r\nLanguage: Elm\r\nAuthor: Janis Voigtlaender <janis.voigtlaender@gmail.com>\r\nWebsite: https://elm-lang.org\r\nCategory: functional\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction elm(hljs) {\r\n  const COMMENT = {\r\n    variants: [\r\n      hljs.COMMENT('--', '$'),\r\n      hljs.COMMENT(\r\n        /\\{-/,\r\n        /-\\}/,\r\n        {\r\n          contains: ['self']\r\n        }\r\n      )\r\n    ]\r\n  };\r\n\r\n  const CONSTRUCTOR = {\r\n    className: 'type',\r\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\r\n    relevance: 0\r\n  };\r\n\r\n  const LIST = {\r\n    begin: '\\\\(',\r\n    end: '\\\\)',\r\n    illegal: '\"',\r\n    contains: [\r\n      {\r\n        className: 'type',\r\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\r\n      },\r\n      COMMENT\r\n    ]\r\n  };\r\n\r\n  const RECORD = {\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    contains: LIST.contains\r\n  };\r\n\r\n  const CHARACTER = {\r\n    className: 'string',\r\n    begin: '\\'\\\\\\\\?.',\r\n    end: '\\'',\r\n    illegal: '.'\r\n  };\r\n\r\n  return {\r\n    name: 'Elm',\r\n    keywords:\r\n      'let in if then else case of where module import exposing ' +\r\n      'type alias as infix infixl infixr port effect command subscription',\r\n    contains: [\r\n\r\n      // Top-level constructions.\r\n\r\n      {\r\n        beginKeywords: 'port effect module',\r\n        end: 'exposing',\r\n        keywords: 'port effect module where command subscription exposing',\r\n        contains: [\r\n          LIST,\r\n          COMMENT\r\n        ],\r\n        illegal: '\\\\W\\\\.|;'\r\n      },\r\n      {\r\n        begin: 'import',\r\n        end: '$',\r\n        keywords: 'import as exposing',\r\n        contains: [\r\n          LIST,\r\n          COMMENT\r\n        ],\r\n        illegal: '\\\\W\\\\.|;'\r\n      },\r\n      {\r\n        begin: 'type',\r\n        end: '$',\r\n        keywords: 'type alias',\r\n        contains: [\r\n          CONSTRUCTOR,\r\n          LIST,\r\n          RECORD,\r\n          COMMENT\r\n        ]\r\n      },\r\n      {\r\n        beginKeywords: 'infix infixl infixr',\r\n        end: '$',\r\n        contains: [\r\n          hljs.C_NUMBER_MODE,\r\n          COMMENT\r\n        ]\r\n      },\r\n      {\r\n        begin: 'port',\r\n        end: '$',\r\n        keywords: 'port',\r\n        contains: [COMMENT]\r\n      },\r\n\r\n      // Literals and names.\r\n\r\n      CHARACTER,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.C_NUMBER_MODE,\r\n      CONSTRUCTOR,\r\n      hljs.inherit(hljs.TITLE_MODE, {\r\n        begin: '^[_a-z][\\\\w\\']*'\r\n      }),\r\n      COMMENT,\r\n\r\n      {\r\n        begin: '->|<-'\r\n      } // No markup, relevance booster\r\n    ],\r\n    illegal: /;/\r\n  };\r\n}\r\n\r\nmodule.exports = elm;\r\n"]},"metadata":{},"sourceType":"script"}