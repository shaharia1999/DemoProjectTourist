{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.disableBodyScroll = disableBodyScroll;\nexports.clearAllBodyScrollLocks = clearAllBodyScrollLocks;\nexports.enableBodyScroll = enableBodyScroll;\nObject.defineProperty(exports, \"WindowScrolling\", {\n  enumerable: true,\n  get: function get() {\n    return _windowScrolling[\"default\"];\n  }\n});\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _windowScrolling = _interopRequireDefault(require(\"./windowScrolling\"));\n/* eslint-disable no-param-reassign */\n\n\nvar hasPassiveEvents = false;\n\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && /iP(ad|hone|od)/.test(window.navigator.platform);\nvar eventOptions = {\n  capture: true\n};\nvar passiveEventOptions = {\n  passive: false,\n  capture: true\n};\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting;\nvar previousBodyPaddingRight; // returns true if `element` should be allowed to receive touchmove events.\n\nfunction allowTouchMove(element) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(element)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction preventDefault(rawEvent) {\n  var event = rawEvent || window.event; // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n\n  if (allowTouchMove(event.target)) {\n    return true;\n  } // Do not prevent if the event has more than one touch (usually meaning this is a multi\n  // touch gesture like pinch to zoom).\n\n\n  if (event.touches.length > 1) return true;\n  if (event.preventDefault) event.preventDefault();\n  return false;\n}\n\nfunction setOverflowHidden(options) {\n  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n  // the responsiveness for some reason. Setting within a setTimeout fixes this.\n  setTimeout(function () {\n    // If previousBodyPaddingRight is already set, don't set it again.\n    if (previousBodyPaddingRight === undefined) {\n      var reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n      var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n      if (reserveScrollBarGap && scrollBarGap > 0) {\n        previousBodyPaddingRight = document.body.style.paddingRight;\n        document.body.style.paddingRight = \"\".concat(scrollBarGap, \"px\");\n      }\n    } // If previousBodyOverflowSetting is already set, don't set it again.\n\n\n    if (previousBodyOverflowSetting === undefined) {\n      previousBodyOverflowSetting = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n    }\n  });\n}\n\nfunction restoreOverflowSetting() {\n  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n  // the responsiveness for some reason. Setting within a setTimeout fixes this.\n  setTimeout(function () {\n    if (previousBodyPaddingRight !== undefined) {\n      document.body.style.paddingRight = previousBodyPaddingRight; // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n      // can be set again.\n\n      previousBodyPaddingRight = undefined;\n    }\n\n    if (previousBodyOverflowSetting !== undefined) {\n      document.body.style.overflow = previousBodyOverflowSetting; // Restore previousBodyOverflowSetting to undefined\n      // so setOverflowHidden knows it can be set again.\n\n      previousBodyOverflowSetting = undefined;\n    }\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\n\nfunction isTargetElementTotallyScrolled(targetElement) {\n  if (targetElement) {\n    return targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight;\n  }\n\n  return false;\n}\n\nfunction handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n}\n\nfunction disableBodyScroll(targetElement, options) {\n  if (isIosDevice) {\n    // targetElement must be provided, and disableBodyScroll must not have been\n    // called on this targetElement before.\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n      return;\n    }\n\n    if (targetElement && !locks.some(function (lock) {\n      return lock.targetElement === targetElement;\n    })) {\n      var lock = {\n        targetElement: targetElement,\n        options: options || {}\n      };\n      locks = [].concat((0, _toConsumableArray2[\"default\"])(locks), [lock]);\n\n      targetElement.ontouchstart = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          initialClientY = event.targetTouches[0].clientY;\n        }\n      };\n\n      targetElement.ontouchmove = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          handleScroll(event, targetElement);\n        }\n      };\n\n      if (!documentListenerAdded) {\n        document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? passiveEventOptions : eventOptions);\n        documentListenerAdded = true;\n      }\n    }\n  } else {\n    setOverflowHidden(options);\n    var _lock = {\n      targetElement: targetElement,\n      options: options || {}\n    };\n    locks = [].concat((0, _toConsumableArray2[\"default\"])(locks), [_lock]);\n  }\n}\n\nfunction clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? passiveEventOptions : eventOptions);\n      documentListenerAdded = false;\n    }\n\n    locks = []; // Reset initial clientY.\n\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n    locks = [];\n  }\n}\n\nfunction enableBodyScroll(targetElement) {\n  if (isIosDevice) {\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n      return;\n    }\n\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n    locks = locks.filter(function (lock) {\n      return lock.targetElement !== targetElement;\n    });\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? passiveEventOptions : eventOptions);\n      documentListenerAdded = false;\n    }\n  } else {\n    locks = locks.filter(function (lock) {\n      return lock.targetElement !== targetElement;\n    });\n\n    if (!locks.length) {\n      restoreOverflowSetting();\n    }\n  }\n}","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/node_modules/react-rainbow-components/libs/scrollController/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","disableBodyScroll","clearAllBodyScrollLocks","enableBodyScroll","enumerable","get","_windowScrolling","_toConsumableArray2","hasPassiveEvents","window","passiveTestOptions","passive","undefined","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","eventOptions","capture","passiveEventOptions","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPaddingRight","allowTouchMove","element","some","lock","options","preventDefault","rawEvent","event","target","touches","length","setOverflowHidden","setTimeout","reserveScrollBarGap","scrollBarGap","innerWidth","document","documentElement","clientWidth","body","style","paddingRight","concat","overflow","restoreOverflowSetting","isTargetElementTotallyScrolled","targetElement","scrollHeight","scrollTop","clientHeight","handleScroll","clientY","targetTouches","stopPropagation","console","error","ontouchstart","ontouchmove","_lock","forEach","filter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.disableBodyScroll = disableBodyScroll;\nexports.clearAllBodyScrollLocks = clearAllBodyScrollLocks;\nexports.enableBodyScroll = enableBodyScroll;\nObject.defineProperty(exports, \"WindowScrolling\", {\n  enumerable: true,\n  get: function get() {\n    return _windowScrolling[\"default\"];\n  }\n});\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _windowScrolling = _interopRequireDefault(require(\"./windowScrolling\"));\n\n/* eslint-disable no-param-reassign */\nvar hasPassiveEvents = false;\n\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && /iP(ad|hone|od)/.test(window.navigator.platform);\nvar eventOptions = {\n  capture: true\n};\nvar passiveEventOptions = {\n  passive: false,\n  capture: true\n};\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting;\nvar previousBodyPaddingRight; // returns true if `element` should be allowed to receive touchmove events.\n\nfunction allowTouchMove(element) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(element)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction preventDefault(rawEvent) {\n  var event = rawEvent || window.event; // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n\n  if (allowTouchMove(event.target)) {\n    return true;\n  } // Do not prevent if the event has more than one touch (usually meaning this is a multi\n  // touch gesture like pinch to zoom).\n\n\n  if (event.touches.length > 1) return true;\n  if (event.preventDefault) event.preventDefault();\n  return false;\n}\n\nfunction setOverflowHidden(options) {\n  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n  // the responsiveness for some reason. Setting within a setTimeout fixes this.\n  setTimeout(function () {\n    // If previousBodyPaddingRight is already set, don't set it again.\n    if (previousBodyPaddingRight === undefined) {\n      var reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n      var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n      if (reserveScrollBarGap && scrollBarGap > 0) {\n        previousBodyPaddingRight = document.body.style.paddingRight;\n        document.body.style.paddingRight = \"\".concat(scrollBarGap, \"px\");\n      }\n    } // If previousBodyOverflowSetting is already set, don't set it again.\n\n\n    if (previousBodyOverflowSetting === undefined) {\n      previousBodyOverflowSetting = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n    }\n  });\n}\n\nfunction restoreOverflowSetting() {\n  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n  // the responsiveness for some reason. Setting within a setTimeout fixes this.\n  setTimeout(function () {\n    if (previousBodyPaddingRight !== undefined) {\n      document.body.style.paddingRight = previousBodyPaddingRight; // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n      // can be set again.\n\n      previousBodyPaddingRight = undefined;\n    }\n\n    if (previousBodyOverflowSetting !== undefined) {\n      document.body.style.overflow = previousBodyOverflowSetting; // Restore previousBodyOverflowSetting to undefined\n      // so setOverflowHidden knows it can be set again.\n\n      previousBodyOverflowSetting = undefined;\n    }\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\n\nfunction isTargetElementTotallyScrolled(targetElement) {\n  if (targetElement) {\n    return targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight;\n  }\n\n  return false;\n}\n\nfunction handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n}\n\nfunction disableBodyScroll(targetElement, options) {\n  if (isIosDevice) {\n    // targetElement must be provided, and disableBodyScroll must not have been\n    // called on this targetElement before.\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n      return;\n    }\n\n    if (targetElement && !locks.some(function (lock) {\n      return lock.targetElement === targetElement;\n    })) {\n      var lock = {\n        targetElement: targetElement,\n        options: options || {}\n      };\n      locks = [].concat((0, _toConsumableArray2[\"default\"])(locks), [lock]);\n\n      targetElement.ontouchstart = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          initialClientY = event.targetTouches[0].clientY;\n        }\n      };\n\n      targetElement.ontouchmove = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          handleScroll(event, targetElement);\n        }\n      };\n\n      if (!documentListenerAdded) {\n        document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? passiveEventOptions : eventOptions);\n        documentListenerAdded = true;\n      }\n    }\n  } else {\n    setOverflowHidden(options);\n    var _lock = {\n      targetElement: targetElement,\n      options: options || {}\n    };\n    locks = [].concat((0, _toConsumableArray2[\"default\"])(locks), [_lock]);\n  }\n}\n\nfunction clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? passiveEventOptions : eventOptions);\n      documentListenerAdded = false;\n    }\n\n    locks = []; // Reset initial clientY.\n\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n    locks = [];\n  }\n}\n\nfunction enableBodyScroll(targetElement) {\n  if (isIosDevice) {\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n      return;\n    }\n\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n    locks = locks.filter(function (lock) {\n      return lock.targetElement !== targetElement;\n    });\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? passiveEventOptions : eventOptions);\n      documentListenerAdded = false;\n    }\n  } else {\n    locks = locks.filter(function (lock) {\n      return lock.targetElement !== targetElement;\n    });\n\n    if (!locks.length) {\n      restoreOverflowSetting();\n    }\n  }\n}"]},"metadata":{},"sourceType":"script"}