{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = AvatarMenu;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _PrimitiveMenu = _interopRequireDefault(require(\"../PrimitiveMenu\"));\n\nvar _avatarButton = _interopRequireDefault(require(\"./avatarButton\"));\n/**\r\n * A Avatar Menu offers a list of actions or functions that a user can access.\r\n */\n\n\nfunction AvatarMenu(props) {\n  var src = props.src,\n      initials = props.initials,\n      icon = props.icon,\n      avatarSize = props.avatarSize,\n      initialsVariant = props.initialsVariant,\n      title = props.title,\n      assistiveText = props.assistiveText,\n      disabled = props.disabled,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      children = props.children,\n      rest = (0, _objectWithoutProperties2[\"default\"])(props, [\"src\", \"initials\", \"icon\", \"avatarSize\", \"initialsVariant\", \"title\", \"assistiveText\", \"disabled\", \"tabIndex\", \"onClick\", \"onFocus\", \"onBlur\", \"children\"]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_PrimitiveMenu[\"default\"] // eslint-disable-next-line react/jsx-props-no-spreading\n  , (0, _extends2[\"default\"])({}, rest, {\n    src: src,\n    icon: icon,\n    initials: initials,\n    disabled: disabled,\n    tabIndex: tabIndex,\n    avatarSize: avatarSize,\n    initialsVariant: initialsVariant,\n    title: title,\n    assistiveText: assistiveText,\n    onClick: onClick,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    trigger: _avatarButton[\"default\"]\n  }), children);\n}\n\nAvatarMenu.propTypes = {\n  /** The URL for the image.\r\n   * It take precedence over the initials and icon. */\n  src: _propTypes[\"default\"].string,\n\n  /** If the record name contains two words, like first and last name,\r\n   * use the first capitalized letter of each. For records that only have a single word name,\r\n   * use the first two letters of that word using one capital and one lower case letter. */\n  initials: _propTypes[\"default\"].string,\n\n  /** The fallback icon to show when src and initials are not passed. */\n  icon: _propTypes[\"default\"].node,\n\n  /** The size of the avatar. Valid values are x-small, small, medium, and large.\r\n   * It take precedence over the icon.\r\n   * This value defaults to medium. */\n  avatarSize: _propTypes[\"default\"].oneOf(['x-small', 'small', 'medium', 'large']),\n\n  /** A valid background color to customize the avatar. */\n  avatarBackgroundColor: _propTypes[\"default\"].string,\n\n  /** The variant of the initials. Only make sense when initials is used. */\n  initialsVariant: _propTypes[\"default\"].oneOf(['default', 'inverse']),\n\n  /** The content of the AvatarMenu. Used to render the menuItem elements\r\n   * when the AvatarMenu is open. */\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\n\n  /** The size of the menu. Options include xx-small, x-small, medium, or large.\r\n   * This value defaults to small. */\n  menuSize: _propTypes[\"default\"].oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),\n\n  /** Determines the alignment of the menu relative to the AvatarMenu.\r\n   * Available options are: left, center, right, bottom, bottom-left, bottom-right.\r\n   * This value defaults to left. */\n  menuAlignment: _propTypes[\"default\"].oneOf(['left', 'right', 'bottom', 'center', 'bottom-right', 'bottom-left']),\n\n  /** If is set to true, then is showed a loading symbol. */\n  isLoading: _propTypes[\"default\"].bool,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes[\"default\"].string,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** If true, the menu is disabled. Disabling the menu prevents users from opening it.\r\n   * This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string\n};\nAvatarMenu.defaultProps = {\n  src: undefined,\n  initials: undefined,\n  icon: null,\n  avatarSize: 'medium',\n  avatarBackgroundColor: '',\n  initialsVariant: 'default',\n  title: undefined,\n  assistiveText: undefined,\n  className: undefined,\n  style: undefined,\n  children: null,\n  menuSize: 'xx-small',\n  menuAlignment: 'left',\n  isLoading: false,\n  id: undefined,\n  disabled: false,\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {}\n};","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/AvatarMenu/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","AvatarMenu","_extends2","_objectWithoutProperties2","_react","_propTypes","_PrimitiveMenu","_avatarButton","props","src","initials","icon","avatarSize","initialsVariant","title","assistiveText","disabled","tabIndex","onClick","onFocus","onBlur","children","rest","createElement","trigger","propTypes","string","node","oneOf","avatarBackgroundColor","oneOfType","arrayOf","object","menuSize","menuAlignment","isLoading","bool","number","func","className","style","id","defaultProps","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = AvatarMenu;\r\n\r\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\r\n\r\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\r\n\r\nvar _react = _interopRequireDefault(require(\"react\"));\r\n\r\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\r\n\r\nvar _PrimitiveMenu = _interopRequireDefault(require(\"../PrimitiveMenu\"));\r\n\r\nvar _avatarButton = _interopRequireDefault(require(\"./avatarButton\"));\r\n\r\n/**\r\n * A Avatar Menu offers a list of actions or functions that a user can access.\r\n */\r\nfunction AvatarMenu(props) {\r\n  var src = props.src,\r\n      initials = props.initials,\r\n      icon = props.icon,\r\n      avatarSize = props.avatarSize,\r\n      initialsVariant = props.initialsVariant,\r\n      title = props.title,\r\n      assistiveText = props.assistiveText,\r\n      disabled = props.disabled,\r\n      tabIndex = props.tabIndex,\r\n      onClick = props.onClick,\r\n      onFocus = props.onFocus,\r\n      onBlur = props.onBlur,\r\n      children = props.children,\r\n      rest = (0, _objectWithoutProperties2[\"default\"])(props, [\"src\", \"initials\", \"icon\", \"avatarSize\", \"initialsVariant\", \"title\", \"assistiveText\", \"disabled\", \"tabIndex\", \"onClick\", \"onFocus\", \"onBlur\", \"children\"]);\r\n  return /*#__PURE__*/_react[\"default\"].createElement(_PrimitiveMenu[\"default\"] // eslint-disable-next-line react/jsx-props-no-spreading\r\n  , (0, _extends2[\"default\"])({}, rest, {\r\n    src: src,\r\n    icon: icon,\r\n    initials: initials,\r\n    disabled: disabled,\r\n    tabIndex: tabIndex,\r\n    avatarSize: avatarSize,\r\n    initialsVariant: initialsVariant,\r\n    title: title,\r\n    assistiveText: assistiveText,\r\n    onClick: onClick,\r\n    onFocus: onFocus,\r\n    onBlur: onBlur,\r\n    trigger: _avatarButton[\"default\"]\r\n  }), children);\r\n}\r\n\r\nAvatarMenu.propTypes = {\r\n  /** The URL for the image.\r\n   * It take precedence over the initials and icon. */\r\n  src: _propTypes[\"default\"].string,\r\n\r\n  /** If the record name contains two words, like first and last name,\r\n   * use the first capitalized letter of each. For records that only have a single word name,\r\n   * use the first two letters of that word using one capital and one lower case letter. */\r\n  initials: _propTypes[\"default\"].string,\r\n\r\n  /** The fallback icon to show when src and initials are not passed. */\r\n  icon: _propTypes[\"default\"].node,\r\n\r\n  /** The size of the avatar. Valid values are x-small, small, medium, and large.\r\n   * It take precedence over the icon.\r\n   * This value defaults to medium. */\r\n  avatarSize: _propTypes[\"default\"].oneOf(['x-small', 'small', 'medium', 'large']),\r\n\r\n  /** A valid background color to customize the avatar. */\r\n  avatarBackgroundColor: _propTypes[\"default\"].string,\r\n\r\n  /** The variant of the initials. Only make sense when initials is used. */\r\n  initialsVariant: _propTypes[\"default\"].oneOf(['default', 'inverse']),\r\n\r\n  /** The content of the AvatarMenu. Used to render the menuItem elements\r\n   * when the AvatarMenu is open. */\r\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\r\n\r\n  /** The size of the menu. Options include xx-small, x-small, medium, or large.\r\n   * This value defaults to small. */\r\n  menuSize: _propTypes[\"default\"].oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),\r\n\r\n  /** Determines the alignment of the menu relative to the AvatarMenu.\r\n   * Available options are: left, center, right, bottom, bottom-left, bottom-right.\r\n   * This value defaults to left. */\r\n  menuAlignment: _propTypes[\"default\"].oneOf(['left', 'right', 'bottom', 'center', 'bottom-right', 'bottom-left']),\r\n\r\n  /** If is set to true, then is showed a loading symbol. */\r\n  isLoading: _propTypes[\"default\"].bool,\r\n\r\n  /** Displays tooltip text when the mouse moves over the element. */\r\n  title: _propTypes[\"default\"].string,\r\n\r\n  /** A description for assistive sreen readers. */\r\n  assistiveText: _propTypes[\"default\"].string,\r\n\r\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\r\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\r\n\r\n  /** If true, the menu is disabled. Disabling the menu prevents users from opening it.\r\n   * This value defaults to false. */\r\n  disabled: _propTypes[\"default\"].bool,\r\n\r\n  /** The action triggered when the element is clicked. */\r\n  onClick: _propTypes[\"default\"].func,\r\n\r\n  /** The action triggered when the element receives focus. */\r\n  onFocus: _propTypes[\"default\"].func,\r\n\r\n  /** The action triggered when the element releases focus. */\r\n  onBlur: _propTypes[\"default\"].func,\r\n\r\n  /** A CSS class for the outer element, in addition to the component's base classes. */\r\n  className: _propTypes[\"default\"].string,\r\n\r\n  /** An object with custom style applied to the outer element. */\r\n  style: _propTypes[\"default\"].object,\r\n\r\n  /** The id of the outer element. */\r\n  id: _propTypes[\"default\"].string\r\n};\r\nAvatarMenu.defaultProps = {\r\n  src: undefined,\r\n  initials: undefined,\r\n  icon: null,\r\n  avatarSize: 'medium',\r\n  avatarBackgroundColor: '',\r\n  initialsVariant: 'default',\r\n  title: undefined,\r\n  assistiveText: undefined,\r\n  className: undefined,\r\n  style: undefined,\r\n  children: null,\r\n  menuSize: 'xx-small',\r\n  menuAlignment: 'left',\r\n  isLoading: false,\r\n  id: undefined,\r\n  disabled: false,\r\n  tabIndex: undefined,\r\n  onClick: function onClick() {},\r\n  onFocus: function onFocus() {},\r\n  onBlur: function onBlur() {}\r\n};"]},"metadata":{},"sourceType":"script"}