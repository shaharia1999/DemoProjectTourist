{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getColumns;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ = require(\".\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth) {\n  var minColWidth = Number(minColumnWidth);\n  var maxColWidth = Number(maxColumnWidth);\n  var defaultWidtNumber = Number(defaultWidth);\n\n  if (minColWidth >= defaultWidtNumber) {\n    return minColWidth;\n  }\n\n  if (maxColWidth <= defaultWidtNumber) {\n    return maxColWidth;\n  }\n\n  return defaultWidtNumber || undefined;\n}\n\nfunction getColumns(params) {\n  var _params$children = params.children,\n      children = _params$children === void 0 ? [] : _params$children,\n      showCheckboxColumn = params.showCheckboxColumn,\n      showRowNumberColumn = params.showRowNumberColumn,\n      rowNumberOffset = params.rowNumberOffset,\n      minColumnWidth = params.minColumnWidth,\n      maxColumnWidth = params.maxColumnWidth,\n      variant = params.variant;\n  var configColumns = [];\n\n  if (showRowNumberColumn) {\n    configColumns.push({\n      type: _.WITH_ENUMERABLE,\n      rowNumberOffset: rowNumberOffset,\n      width: (0, _.getEnumerableWidth)(rowNumberOffset, variant)\n    });\n  }\n\n  if (showCheckboxColumn) {\n    if (variant === 'listview') {\n      configColumns.unshift({\n        type: _.SELECTABLE_CHECKBOX,\n        width: 42\n      });\n    } else {\n      configColumns.push({\n        type: _.SELECTABLE_CHECKBOX,\n        width: 52\n      });\n    }\n  }\n\n  var columnsData = _react[\"default\"].Children.map(children, function (column, index) {\n    if (column && column.props) {\n      var _column$props = column.props,\n          type = _column$props.type,\n          width = _column$props.width,\n          defaultWidth = _column$props.defaultWidth;\n      var widthNumber = Number(width);\n\n      if (type === 'action') {\n        return _objectSpread(_objectSpread({}, column.props), {}, {\n          width: widthNumber || 75\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, column.props), {}, {\n        width: widthNumber || undefined,\n        defaultWidth: getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth),\n        isFirstDataColumn: index === 0\n      });\n    }\n\n    return null;\n  }, null);\n\n  if (configColumns.length) {\n    return configColumns.concat(columnsData);\n  }\n\n  return columnsData;\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/Table/helpers/columns/getColumns.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getColumns","_defineProperty2","_react","_","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","getDefaultWidth","defaultWidth","minColumnWidth","maxColumnWidth","minColWidth","Number","maxColWidth","defaultWidtNumber","undefined","params","_params$children","children","showCheckboxColumn","showRowNumberColumn","rowNumberOffset","variant","configColumns","type","WITH_ENUMERABLE","width","getEnumerableWidth","unshift","SELECTABLE_CHECKBOX","columnsData","Children","map","column","index","props","_column$props","widthNumber","isFirstDataColumn","concat"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getColumns;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ = require(\".\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth) {\n  var minColWidth = Number(minColumnWidth);\n  var maxColWidth = Number(maxColumnWidth);\n  var defaultWidtNumber = Number(defaultWidth);\n\n  if (minColWidth >= defaultWidtNumber) {\n    return minColWidth;\n  }\n\n  if (maxColWidth <= defaultWidtNumber) {\n    return maxColWidth;\n  }\n\n  return defaultWidtNumber || undefined;\n}\n\nfunction getColumns(params) {\n  var _params$children = params.children,\n      children = _params$children === void 0 ? [] : _params$children,\n      showCheckboxColumn = params.showCheckboxColumn,\n      showRowNumberColumn = params.showRowNumberColumn,\n      rowNumberOffset = params.rowNumberOffset,\n      minColumnWidth = params.minColumnWidth,\n      maxColumnWidth = params.maxColumnWidth,\n      variant = params.variant;\n  var configColumns = [];\n\n  if (showRowNumberColumn) {\n    configColumns.push({\n      type: _.WITH_ENUMERABLE,\n      rowNumberOffset: rowNumberOffset,\n      width: (0, _.getEnumerableWidth)(rowNumberOffset, variant)\n    });\n  }\n\n  if (showCheckboxColumn) {\n    if (variant === 'listview') {\n      configColumns.unshift({\n        type: _.SELECTABLE_CHECKBOX,\n        width: 42\n      });\n    } else {\n      configColumns.push({\n        type: _.SELECTABLE_CHECKBOX,\n        width: 52\n      });\n    }\n  }\n\n  var columnsData = _react[\"default\"].Children.map(children, function (column, index) {\n    if (column && column.props) {\n      var _column$props = column.props,\n          type = _column$props.type,\n          width = _column$props.width,\n          defaultWidth = _column$props.defaultWidth;\n      var widthNumber = Number(width);\n\n      if (type === 'action') {\n        return _objectSpread(_objectSpread({}, column.props), {}, {\n          width: widthNumber || 75\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, column.props), {}, {\n        width: widthNumber || undefined,\n        defaultWidth: getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth),\n        isFirstDataColumn: index === 0\n      });\n    }\n\n    return null;\n  }, null);\n\n  if (configColumns.length) {\n    return configColumns.concat(columnsData);\n  }\n\n  return columnsData;\n}"]},"metadata":{},"sourceType":"script"}