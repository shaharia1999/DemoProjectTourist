{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = AvatarGroup;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _container = _interopRequireDefault(require(\"./styled/container\"));\n\nvar _avatars = _interopRequireDefault(require(\"./avatars\"));\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nvar _counter = _interopRequireDefault(require(\"./counter\"));\n/**\r\n * An AvatarGroup is an element that communicates to the user\r\n *  that there are many entities associated to an item.\r\n */\n\n\nfunction AvatarGroup(props) {\n  var size = props.size,\n      className = props.className,\n      style = props.style,\n      avatars = props.avatars,\n      maxAvatars = props.maxAvatars,\n      showCounter = props.showCounter;\n  return /*#__PURE__*/_react[\"default\"].createElement(_container[\"default\"], {\n    className: className,\n    style: style,\n    size: size\n  }, /*#__PURE__*/_react[\"default\"].createElement(_RenderIf[\"default\"], {\n    isTrue: showCounter\n  }, /*#__PURE__*/_react[\"default\"].createElement(_counter[\"default\"], {\n    size: size,\n    avatars: avatars,\n    maxAvatars: maxAvatars\n  })), /*#__PURE__*/_react[\"default\"].createElement(_avatars[\"default\"], {\n    size: size,\n    avatars: avatars,\n    showCounter: showCounter,\n    maxAvatars: maxAvatars\n  }));\n}\n\nAvatarGroup.propTypes = {\n  /** The size of the AvatarGroup. Valid values are x-small, small, medium, and large.\r\n   * This value defaults to medium. */\n  size: _propTypes[\"default\"].oneOf(['x-small', 'small', 'medium', 'large']),\n\n  /** A CSS class for the outer element, in addition to the component’s base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** An array with the Avatars data. */\n  avatars: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    src: _propTypes[\"default\"].string,\n    initials: _propTypes[\"default\"].string,\n    icon: _propTypes[\"default\"].node,\n    title: _propTypes[\"default\"].string,\n    assistiveText: _propTypes[\"default\"].string\n  })),\n\n  /** Specify how many Avatars will render. */\n  maxAvatars: _propTypes[\"default\"].number,\n\n  /** This shows a counter with the total value of the number of avatars.\r\n   * It is independent of the number of avatars displayed in the component. */\n  showCounter: _propTypes[\"default\"].bool\n};\nAvatarGroup.defaultProps = {\n  size: 'medium',\n  className: undefined,\n  style: undefined,\n  avatars: [],\n  maxAvatars: 3,\n  showCounter: false\n};","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/AvatarGroup/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","AvatarGroup","_react","_propTypes","_container","_avatars","_RenderIf","_counter","props","size","className","style","avatars","maxAvatars","showCounter","createElement","isTrue","propTypes","oneOf","string","object","arrayOf","shape","src","initials","icon","node","title","assistiveText","number","bool","defaultProps","undefined"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,WAArB;;AAEA,IAAIC,MAAM,GAAGP,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIO,UAAU,GAAGR,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIQ,UAAU,GAAGT,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAvC;;AAEA,IAAIS,QAAQ,GAAGV,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIU,SAAS,GAAGX,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAtC;;AAEA,IAAIW,QAAQ,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;AAEA;AACA;AACA;AACA;;;AACA,SAASK,WAAT,CAAqBO,KAArB,EAA4B;AAC1B,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,KAAK,GAAGH,KAAK,CAACG,KAFlB;AAAA,MAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAAA,MAIIC,UAAU,GAAGL,KAAK,CAACK,UAJvB;AAAA,MAKIC,WAAW,GAAGN,KAAK,CAACM,WALxB;AAMA,SAAO,aAAaZ,MAAM,CAAC,SAAD,CAAN,CAAkBa,aAAlB,CAAgCX,UAAU,CAAC,SAAD,CAA1C,EAAuD;AACzEM,IAAAA,SAAS,EAAEA,SAD8D;AAEzEC,IAAAA,KAAK,EAAEA,KAFkE;AAGzEF,IAAAA,IAAI,EAAEA;AAHmE,GAAvD,EAIjB,aAAaP,MAAM,CAAC,SAAD,CAAN,CAAkBa,aAAlB,CAAgCT,SAAS,CAAC,SAAD,CAAzC,EAAsD;AACpEU,IAAAA,MAAM,EAAEF;AAD4D,GAAtD,EAEb,aAAaZ,MAAM,CAAC,SAAD,CAAN,CAAkBa,aAAlB,CAAgCR,QAAQ,CAAC,SAAD,CAAxC,EAAqD;AACnEE,IAAAA,IAAI,EAAEA,IAD6D;AAEnEG,IAAAA,OAAO,EAAEA,OAF0D;AAGnEC,IAAAA,UAAU,EAAEA;AAHuD,GAArD,CAFA,CAJI,EAUf,aAAaX,MAAM,CAAC,SAAD,CAAN,CAAkBa,aAAlB,CAAgCV,QAAQ,CAAC,SAAD,CAAxC,EAAqD;AACrEI,IAAAA,IAAI,EAAEA,IAD+D;AAErEG,IAAAA,OAAO,EAAEA,OAF4D;AAGrEE,IAAAA,WAAW,EAAEA,WAHwD;AAIrED,IAAAA,UAAU,EAAEA;AAJyD,GAArD,CAVE,CAApB;AAgBD;;AAEDZ,WAAW,CAACgB,SAAZ,GAAwB;AACtB;AACF;AACER,EAAAA,IAAI,EAAEN,UAAU,CAAC,SAAD,CAAV,CAAsBe,KAAtB,CAA4B,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,CAA5B,CAHgB;;AAKtB;AACAR,EAAAA,SAAS,EAAEP,UAAU,CAAC,SAAD,CAAV,CAAsBgB,MANX;;AAQtB;AACAR,EAAAA,KAAK,EAAER,UAAU,CAAC,SAAD,CAAV,CAAsBiB,MATP;;AAWtB;AACAR,EAAAA,OAAO,EAAET,UAAU,CAAC,SAAD,CAAV,CAAsBkB,OAAtB,CAA8BlB,UAAU,CAAC,SAAD,CAAV,CAAsBmB,KAAtB,CAA4B;AACjEC,IAAAA,GAAG,EAAEpB,UAAU,CAAC,SAAD,CAAV,CAAsBgB,MADsC;AAEjEK,IAAAA,QAAQ,EAAErB,UAAU,CAAC,SAAD,CAAV,CAAsBgB,MAFiC;AAGjEM,IAAAA,IAAI,EAAEtB,UAAU,CAAC,SAAD,CAAV,CAAsBuB,IAHqC;AAIjEC,IAAAA,KAAK,EAAExB,UAAU,CAAC,SAAD,CAAV,CAAsBgB,MAJoC;AAKjES,IAAAA,aAAa,EAAEzB,UAAU,CAAC,SAAD,CAAV,CAAsBgB;AAL4B,GAA5B,CAA9B,CAZa;;AAoBtB;AACAN,EAAAA,UAAU,EAAEV,UAAU,CAAC,SAAD,CAAV,CAAsB0B,MArBZ;;AAuBtB;AACF;AACEf,EAAAA,WAAW,EAAEX,UAAU,CAAC,SAAD,CAAV,CAAsB2B;AAzBb,CAAxB;AA2BA7B,WAAW,CAAC8B,YAAZ,GAA2B;AACzBtB,EAAAA,IAAI,EAAE,QADmB;AAEzBC,EAAAA,SAAS,EAAEsB,SAFc;AAGzBrB,EAAAA,KAAK,EAAEqB,SAHkB;AAIzBpB,EAAAA,OAAO,EAAE,EAJgB;AAKzBC,EAAAA,UAAU,EAAE,CALa;AAMzBC,EAAAA,WAAW,EAAE;AANY,CAA3B","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = AvatarGroup;\r\n\r\nvar _react = _interopRequireDefault(require(\"react\"));\r\n\r\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\r\n\r\nvar _container = _interopRequireDefault(require(\"./styled/container\"));\r\n\r\nvar _avatars = _interopRequireDefault(require(\"./avatars\"));\r\n\r\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\r\n\r\nvar _counter = _interopRequireDefault(require(\"./counter\"));\r\n\r\n/**\r\n * An AvatarGroup is an element that communicates to the user\r\n *  that there are many entities associated to an item.\r\n */\r\nfunction AvatarGroup(props) {\r\n  var size = props.size,\r\n      className = props.className,\r\n      style = props.style,\r\n      avatars = props.avatars,\r\n      maxAvatars = props.maxAvatars,\r\n      showCounter = props.showCounter;\r\n  return /*#__PURE__*/_react[\"default\"].createElement(_container[\"default\"], {\r\n    className: className,\r\n    style: style,\r\n    size: size\r\n  }, /*#__PURE__*/_react[\"default\"].createElement(_RenderIf[\"default\"], {\r\n    isTrue: showCounter\r\n  }, /*#__PURE__*/_react[\"default\"].createElement(_counter[\"default\"], {\r\n    size: size,\r\n    avatars: avatars,\r\n    maxAvatars: maxAvatars\r\n  })), /*#__PURE__*/_react[\"default\"].createElement(_avatars[\"default\"], {\r\n    size: size,\r\n    avatars: avatars,\r\n    showCounter: showCounter,\r\n    maxAvatars: maxAvatars\r\n  }));\r\n}\r\n\r\nAvatarGroup.propTypes = {\r\n  /** The size of the AvatarGroup. Valid values are x-small, small, medium, and large.\r\n   * This value defaults to medium. */\r\n  size: _propTypes[\"default\"].oneOf(['x-small', 'small', 'medium', 'large']),\r\n\r\n  /** A CSS class for the outer element, in addition to the component’s base classes. */\r\n  className: _propTypes[\"default\"].string,\r\n\r\n  /** An object with custom style applied to the outer element. */\r\n  style: _propTypes[\"default\"].object,\r\n\r\n  /** An array with the Avatars data. */\r\n  avatars: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\r\n    src: _propTypes[\"default\"].string,\r\n    initials: _propTypes[\"default\"].string,\r\n    icon: _propTypes[\"default\"].node,\r\n    title: _propTypes[\"default\"].string,\r\n    assistiveText: _propTypes[\"default\"].string\r\n  })),\r\n\r\n  /** Specify how many Avatars will render. */\r\n  maxAvatars: _propTypes[\"default\"].number,\r\n\r\n  /** This shows a counter with the total value of the number of avatars.\r\n   * It is independent of the number of avatars displayed in the component. */\r\n  showCounter: _propTypes[\"default\"].bool\r\n};\r\nAvatarGroup.defaultProps = {\r\n  size: 'medium',\r\n  className: undefined,\r\n  style: undefined,\r\n  avatars: [],\r\n  maxAvatars: 3,\r\n  showCounter: false\r\n};"]},"metadata":{},"sourceType":"script"}