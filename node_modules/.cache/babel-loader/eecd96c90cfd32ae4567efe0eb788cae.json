{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getChildTabNodes = getChildTabNodes;\nexports.insertChildOrderly = insertChildOrderly;\nexports.getTabIndexFromName = getTabIndexFromName;\nexports.getChildrenTotalWidth = getChildrenTotalWidth;\nexports.getChildrenTotalWidthUpToClickedTab = getChildrenTotalWidthUpToClickedTab;\nexports.isNotSameChildren = isNotSameChildren;\nexports.getUpdatedTabsetChildren = getUpdatedTabsetChildren;\nexports.getLeftButtonDisabledState = getLeftButtonDisabledState;\nexports.getRightButtonDisabledState = getRightButtonDisabledState;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nfunction getChildTabNodes(ref) {\n  if (ref) {\n    return ref.querySelectorAll('[role=\"tab\"]');\n  }\n\n  return [];\n}\n\nfunction getRefIndex(nodes, ref) {\n  return nodes.indexOf(ref);\n}\n\nfunction sortChildren(childrenRefs, nodes) {\n  var _childrenRefs = (0, _toArray2[\"default\"])(childrenRefs),\n      newChildrenRefs = _childrenRefs.slice(0);\n\n  newChildrenRefs.sort(function (refA, refB) {\n    return getRefIndex(nodes, refA.ref) - getRefIndex(nodes, refB.ref);\n  });\n  return newChildrenRefs;\n}\n\nfunction insertChildOrderly(childrenRefs, childRef, nodes) {\n  var newChildrenRefs = childrenRefs.concat([childRef]);\n  return sortChildren(newChildrenRefs, nodes);\n}\n\nfunction getTabIndexFromName(tabChildren, name) {\n  return tabChildren.findIndex(function (tab) {\n    return tab.name === name;\n  });\n}\n\nfunction getTotalWidth(children) {\n  var totalWidth = 0;\n  children.forEach(function (child) {\n    totalWidth += child.ref.offsetWidth;\n  });\n  return totalWidth;\n}\n\nfunction getChildrenTotalWidth(children) {\n  return getTotalWidth(children);\n}\n\nfunction getChildrenTotalWidthUpToClickedTab(children, index) {\n  var childrenUpToClickedTab = children.slice(0, index);\n  return getTotalWidth(childrenUpToClickedTab);\n}\n\nfunction isNotSameChildren(children, prevChildren) {\n  if (Array.isArray(children)) {\n    return children.some(function (child, index) {\n      if (child && prevChildren[index]) {\n        return child.props.name !== prevChildren[index].props.name;\n      }\n\n      return false;\n    });\n  }\n\n  return children.props.name !== prevChildren.props.name;\n}\n\nfunction getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate) {\n  return tabsetChildren.map(function (child) {\n    if (child.name === nameToUpdate) {\n      return tab;\n    }\n\n    return child;\n  });\n}\n\nfunction getLeftButtonDisabledState(params) {\n  var activeTabName = params.activeTabName,\n      tabsetChildren = params.tabsetChildren,\n      screenWidth = params.screenWidth,\n      scrollLeft = params.scrollLeft;\n  var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\n  var isFirstTabActive = activeTabIndex === 0;\n  var isFirstTabVisible = scrollLeft === 0;\n\n  if (screenWidth < 600 && isFirstTabActive) {\n    return true;\n  }\n\n  if (screenWidth > 600 && isFirstTabVisible) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getRightButtonDisabledState(params) {\n  var activeTabName = params.activeTabName,\n      tabsetChildren = params.tabsetChildren,\n      screenWidth = params.screenWidth,\n      scrollLeft = params.scrollLeft,\n      maxScroll = params.maxScroll;\n  var lastTabIndex = tabsetChildren.length - 1;\n  var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\n  var isLastTabActive = lastTabIndex === activeTabIndex;\n  var isLastTabVisible = scrollLeft === maxScroll;\n\n  if (screenWidth < 600 && isLastTabActive) {\n    return true;\n  }\n\n  if (screenWidth > 600 && isLastTabVisible) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/Tabset/utils.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getChildTabNodes","insertChildOrderly","getTabIndexFromName","getChildrenTotalWidth","getChildrenTotalWidthUpToClickedTab","isNotSameChildren","getUpdatedTabsetChildren","getLeftButtonDisabledState","getRightButtonDisabledState","_toArray2","ref","querySelectorAll","getRefIndex","nodes","indexOf","sortChildren","childrenRefs","_childrenRefs","newChildrenRefs","slice","sort","refA","refB","childRef","concat","tabChildren","name","findIndex","tab","getTotalWidth","children","totalWidth","forEach","child","offsetWidth","index","childrenUpToClickedTab","prevChildren","Array","isArray","some","props","tabsetChildren","nameToUpdate","map","params","activeTabName","screenWidth","scrollLeft","activeTabIndex","isFirstTabActive","isFirstTabVisible","maxScroll","lastTabIndex","length","isLastTabActive","isLastTabVisible"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.getChildTabNodes = getChildTabNodes;\r\nexports.insertChildOrderly = insertChildOrderly;\r\nexports.getTabIndexFromName = getTabIndexFromName;\r\nexports.getChildrenTotalWidth = getChildrenTotalWidth;\r\nexports.getChildrenTotalWidthUpToClickedTab = getChildrenTotalWidthUpToClickedTab;\r\nexports.isNotSameChildren = isNotSameChildren;\r\nexports.getUpdatedTabsetChildren = getUpdatedTabsetChildren;\r\nexports.getLeftButtonDisabledState = getLeftButtonDisabledState;\r\nexports.getRightButtonDisabledState = getRightButtonDisabledState;\r\n\r\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\r\n\r\nfunction getChildTabNodes(ref) {\r\n  if (ref) {\r\n    return ref.querySelectorAll('[role=\"tab\"]');\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nfunction getRefIndex(nodes, ref) {\r\n  return nodes.indexOf(ref);\r\n}\r\n\r\nfunction sortChildren(childrenRefs, nodes) {\r\n  var _childrenRefs = (0, _toArray2[\"default\"])(childrenRefs),\r\n      newChildrenRefs = _childrenRefs.slice(0);\r\n\r\n  newChildrenRefs.sort(function (refA, refB) {\r\n    return getRefIndex(nodes, refA.ref) - getRefIndex(nodes, refB.ref);\r\n  });\r\n  return newChildrenRefs;\r\n}\r\n\r\nfunction insertChildOrderly(childrenRefs, childRef, nodes) {\r\n  var newChildrenRefs = childrenRefs.concat([childRef]);\r\n  return sortChildren(newChildrenRefs, nodes);\r\n}\r\n\r\nfunction getTabIndexFromName(tabChildren, name) {\r\n  return tabChildren.findIndex(function (tab) {\r\n    return tab.name === name;\r\n  });\r\n}\r\n\r\nfunction getTotalWidth(children) {\r\n  var totalWidth = 0;\r\n  children.forEach(function (child) {\r\n    totalWidth += child.ref.offsetWidth;\r\n  });\r\n  return totalWidth;\r\n}\r\n\r\nfunction getChildrenTotalWidth(children) {\r\n  return getTotalWidth(children);\r\n}\r\n\r\nfunction getChildrenTotalWidthUpToClickedTab(children, index) {\r\n  var childrenUpToClickedTab = children.slice(0, index);\r\n  return getTotalWidth(childrenUpToClickedTab);\r\n}\r\n\r\nfunction isNotSameChildren(children, prevChildren) {\r\n  if (Array.isArray(children)) {\r\n    return children.some(function (child, index) {\r\n      if (child && prevChildren[index]) {\r\n        return child.props.name !== prevChildren[index].props.name;\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }\r\n\r\n  return children.props.name !== prevChildren.props.name;\r\n}\r\n\r\nfunction getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate) {\r\n  return tabsetChildren.map(function (child) {\r\n    if (child.name === nameToUpdate) {\r\n      return tab;\r\n    }\r\n\r\n    return child;\r\n  });\r\n}\r\n\r\nfunction getLeftButtonDisabledState(params) {\r\n  var activeTabName = params.activeTabName,\r\n      tabsetChildren = params.tabsetChildren,\r\n      screenWidth = params.screenWidth,\r\n      scrollLeft = params.scrollLeft;\r\n  var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\r\n  var isFirstTabActive = activeTabIndex === 0;\r\n  var isFirstTabVisible = scrollLeft === 0;\r\n\r\n  if (screenWidth < 600 && isFirstTabActive) {\r\n    return true;\r\n  }\r\n\r\n  if (screenWidth > 600 && isFirstTabVisible) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getRightButtonDisabledState(params) {\r\n  var activeTabName = params.activeTabName,\r\n      tabsetChildren = params.tabsetChildren,\r\n      screenWidth = params.screenWidth,\r\n      scrollLeft = params.scrollLeft,\r\n      maxScroll = params.maxScroll;\r\n  var lastTabIndex = tabsetChildren.length - 1;\r\n  var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\r\n  var isLastTabActive = lastTabIndex === activeTabIndex;\r\n  var isLastTabVisible = scrollLeft === maxScroll;\r\n\r\n  if (screenWidth < 600 && isLastTabActive) {\r\n    return true;\r\n  }\r\n\r\n  if (screenWidth > 600 && isLastTabVisible) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}"]},"metadata":{},"sourceType":"script"}