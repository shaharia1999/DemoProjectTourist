{"ast":null,"code":"'use strict';\n\nvar alphabetical = require('is-alphabetical');\n\nvar locate = require('../locate/tag');\n\nvar tag = require('../util/html').tag;\n\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\nvar lessThan = '<';\nvar questionMark = '?';\nvar exclamationMark = '!';\nvar slash = '/';\nvar htmlLinkOpenExpression = /^<a /i;\nvar htmlLinkCloseExpression = /^<\\/a>/i;\n\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n\n  if (value.charAt(0) !== lessThan || length < 3) {\n    return;\n  }\n\n  character = value.charAt(1);\n\n  if (!alphabetical(character) && character !== questionMark && character !== exclamationMark && character !== slash) {\n    return;\n  }\n\n  subvalue = value.match(tag);\n\n  if (!subvalue) {\n    return;\n  }\n  /* istanbul ignore if - not used yet. */\n\n\n  if (silent) {\n    return true;\n  }\n\n  subvalue = subvalue[0];\n\n  if (!self.inLink && htmlLinkOpenExpression.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && htmlLinkCloseExpression.test(subvalue)) {\n    self.inLink = false;\n  }\n\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/remark-parse/lib/tokenize/html-inline.js"],"names":["alphabetical","require","locate","tag","module","exports","inlineHTML","locator","lessThan","questionMark","exclamationMark","slash","htmlLinkOpenExpression","htmlLinkCloseExpression","eat","value","silent","self","length","character","subvalue","charAt","match","inLink","test","type"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAP,CAAwBE,GAAlC;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AACAA,UAAU,CAACC,OAAX,GAAqBL,MAArB;AAEA,IAAIM,QAAQ,GAAG,GAAf;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,eAAe,GAAG,GAAtB;AACA,IAAIC,KAAK,GAAG,GAAZ;AAEA,IAAIC,sBAAsB,GAAG,OAA7B;AACA,IAAIC,uBAAuB,GAAG,SAA9B;;AAEA,SAASP,UAAT,CAAoBQ,GAApB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AACtC,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;AACA,MAAIC,SAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAIL,KAAK,CAACM,MAAN,CAAa,CAAb,MAAoBb,QAApB,IAAgCU,MAAM,GAAG,CAA7C,EAAgD;AAC9C;AACD;;AAEDC,EAAAA,SAAS,GAAGJ,KAAK,CAACM,MAAN,CAAa,CAAb,CAAZ;;AAEA,MACE,CAACrB,YAAY,CAACmB,SAAD,CAAb,IACAA,SAAS,KAAKV,YADd,IAEAU,SAAS,KAAKT,eAFd,IAGAS,SAAS,KAAKR,KAJhB,EAKE;AACA;AACD;;AAEDS,EAAAA,QAAQ,GAAGL,KAAK,CAACO,KAAN,CAAYnB,GAAZ,CAAX;;AAEA,MAAI,CAACiB,QAAL,EAAe;AACb;AACD;AAED;;;AACA,MAAIJ,MAAJ,EAAY;AACV,WAAO,IAAP;AACD;;AAEDI,EAAAA,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAnB;;AAEA,MAAI,CAACH,IAAI,CAACM,MAAN,IAAgBX,sBAAsB,CAACY,IAAvB,CAA4BJ,QAA5B,CAApB,EAA2D;AACzDH,IAAAA,IAAI,CAACM,MAAL,GAAc,IAAd;AACD,GAFD,MAEO,IAAIN,IAAI,CAACM,MAAL,IAAeV,uBAAuB,CAACW,IAAxB,CAA6BJ,QAA7B,CAAnB,EAA2D;AAChEH,IAAAA,IAAI,CAACM,MAAL,GAAc,KAAd;AACD;;AAED,SAAOT,GAAG,CAACM,QAAD,CAAH,CAAc;AAACK,IAAAA,IAAI,EAAE,MAAP;AAAeV,IAAAA,KAAK,EAAEK;AAAtB,GAAd,CAAP;AACD","sourcesContent":["'use strict'\r\n\r\nvar alphabetical = require('is-alphabetical')\r\nvar locate = require('../locate/tag')\r\nvar tag = require('../util/html').tag\r\n\r\nmodule.exports = inlineHTML\r\ninlineHTML.locator = locate\r\n\r\nvar lessThan = '<'\r\nvar questionMark = '?'\r\nvar exclamationMark = '!'\r\nvar slash = '/'\r\n\r\nvar htmlLinkOpenExpression = /^<a /i\r\nvar htmlLinkCloseExpression = /^<\\/a>/i\r\n\r\nfunction inlineHTML(eat, value, silent) {\r\n  var self = this\r\n  var length = value.length\r\n  var character\r\n  var subvalue\r\n\r\n  if (value.charAt(0) !== lessThan || length < 3) {\r\n    return\r\n  }\r\n\r\n  character = value.charAt(1)\r\n\r\n  if (\r\n    !alphabetical(character) &&\r\n    character !== questionMark &&\r\n    character !== exclamationMark &&\r\n    character !== slash\r\n  ) {\r\n    return\r\n  }\r\n\r\n  subvalue = value.match(tag)\r\n\r\n  if (!subvalue) {\r\n    return\r\n  }\r\n\r\n  /* istanbul ignore if - not used yet. */\r\n  if (silent) {\r\n    return true\r\n  }\r\n\r\n  subvalue = subvalue[0]\r\n\r\n  if (!self.inLink && htmlLinkOpenExpression.test(subvalue)) {\r\n    self.inLink = true\r\n  } else if (self.inLink && htmlLinkCloseExpression.test(subvalue)) {\r\n    self.inLink = false\r\n  }\r\n\r\n  return eat(subvalue)({type: 'html', value: subvalue})\r\n}\r\n"]},"metadata":{},"sourceType":"script"}