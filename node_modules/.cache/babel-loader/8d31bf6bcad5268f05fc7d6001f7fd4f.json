{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = SelectableCell;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Input = _interopRequireDefault(require(\"../../Input\"));\n\nvar _constants = require(\"../../../libs/constants\");\n\nvar _cellContainer = _interopRequireDefault(require(\"./styled/cellContainer\"));\n\nvar _checkboxContainer = _interopRequireDefault(require(\"./styled/checkboxContainer\"));\n\nfunction SelectableCell(props) {\n  var isSelected = props.isSelected,\n      isDisabled = props.isDisabled,\n      tableId = props.tableId,\n      onSelectRow = props.onSelectRow,\n      onDeselectRow = props.onDeselectRow,\n      inputType = props.inputType;\n  var name = \"\".concat(tableId, \"-options\");\n  var isRadio = inputType === 'radio';\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey) {\n      event.preventDefault();\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    var isMultipleSelection = !isRadio && event.shiftKey;\n\n    if (isRadio && isSelected) {\n      return;\n    }\n\n    if (isSelected) {\n      onDeselectRow(event, isMultipleSelection);\n    } else {\n      onSelectRow(event, isMultipleSelection);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var keyCode = event.keyCode;\n\n    if (isRadio && (keyCode === _constants.LEFT_KEY || keyCode === _constants.RIGHT_KEY)) {\n      event.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_cellContainer[\"default\"], {\n    role: \"gridcell\",\n    tabIndex: -1,\n    hideBorderRight: true\n  }, /*#__PURE__*/_react[\"default\"].createElement(_checkboxContainer[\"default\"], {\n    role: \"presentation\",\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Input[\"default\"], {\n    className: \"rainbow-table_cell-checkbox\",\n    name: name,\n    label: \"select row\",\n    hideLabel: true,\n    type: inputType,\n    tabIndex: \"-1\",\n    checked: isSelected,\n    disabled: isDisabled,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  })));\n}\n\nSelectableCell.propTypes = {\n  isSelected: _propTypes[\"default\"].bool,\n  isDisabled: _propTypes[\"default\"].bool,\n  tableId: _propTypes[\"default\"].string.isRequired,\n  onSelectRow: _propTypes[\"default\"].func,\n  onDeselectRow: _propTypes[\"default\"].func,\n  inputType: _propTypes[\"default\"].string\n};\nSelectableCell.defaultProps = {\n  isSelected: false,\n  isDisabled: false,\n  onSelectRow: function onSelectRow() {},\n  onDeselectRow: function onDeselectRow() {},\n  inputType: 'checkbox'\n};","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/Table/body/selectableCell.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","SelectableCell","_react","_propTypes","_Input","_constants","_cellContainer","_checkboxContainer","props","isSelected","isDisabled","tableId","onSelectRow","onDeselectRow","inputType","name","concat","isRadio","handleMouseDown","event","shiftKey","preventDefault","handleClick","isMultipleSelection","handleKeyDown","keyCode","LEFT_KEY","RIGHT_KEY","createElement","role","tabIndex","hideBorderRight","onMouseDown","className","label","hideLabel","type","checked","disabled","onClick","onKeyDown","propTypes","bool","string","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = SelectableCell;\r\n\r\nvar _react = _interopRequireDefault(require(\"react\"));\r\n\r\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\r\n\r\nvar _Input = _interopRequireDefault(require(\"../../Input\"));\r\n\r\nvar _constants = require(\"../../../libs/constants\");\r\n\r\nvar _cellContainer = _interopRequireDefault(require(\"./styled/cellContainer\"));\r\n\r\nvar _checkboxContainer = _interopRequireDefault(require(\"./styled/checkboxContainer\"));\r\n\r\nfunction SelectableCell(props) {\r\n  var isSelected = props.isSelected,\r\n      isDisabled = props.isDisabled,\r\n      tableId = props.tableId,\r\n      onSelectRow = props.onSelectRow,\r\n      onDeselectRow = props.onDeselectRow,\r\n      inputType = props.inputType;\r\n  var name = \"\".concat(tableId, \"-options\");\r\n  var isRadio = inputType === 'radio';\r\n\r\n  var handleMouseDown = function handleMouseDown(event) {\r\n    if (event.shiftKey) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  var handleClick = function handleClick(event) {\r\n    var isMultipleSelection = !isRadio && event.shiftKey;\r\n\r\n    if (isRadio && isSelected) {\r\n      return;\r\n    }\r\n\r\n    if (isSelected) {\r\n      onDeselectRow(event, isMultipleSelection);\r\n    } else {\r\n      onSelectRow(event, isMultipleSelection);\r\n    }\r\n  };\r\n\r\n  var handleKeyDown = function handleKeyDown(event) {\r\n    var keyCode = event.keyCode;\r\n\r\n    if (isRadio && (keyCode === _constants.LEFT_KEY || keyCode === _constants.RIGHT_KEY)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return /*#__PURE__*/_react[\"default\"].createElement(_cellContainer[\"default\"], {\r\n    role: \"gridcell\",\r\n    tabIndex: -1,\r\n    hideBorderRight: true\r\n  }, /*#__PURE__*/_react[\"default\"].createElement(_checkboxContainer[\"default\"], {\r\n    role: \"presentation\",\r\n    onMouseDown: handleMouseDown\r\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Input[\"default\"], {\r\n    className: \"rainbow-table_cell-checkbox\",\r\n    name: name,\r\n    label: \"select row\",\r\n    hideLabel: true,\r\n    type: inputType,\r\n    tabIndex: \"-1\",\r\n    checked: isSelected,\r\n    disabled: isDisabled,\r\n    onClick: handleClick,\r\n    onKeyDown: handleKeyDown\r\n  })));\r\n}\r\n\r\nSelectableCell.propTypes = {\r\n  isSelected: _propTypes[\"default\"].bool,\r\n  isDisabled: _propTypes[\"default\"].bool,\r\n  tableId: _propTypes[\"default\"].string.isRequired,\r\n  onSelectRow: _propTypes[\"default\"].func,\r\n  onDeselectRow: _propTypes[\"default\"].func,\r\n  inputType: _propTypes[\"default\"].string\r\n};\r\nSelectableCell.defaultProps = {\r\n  isSelected: false,\r\n  isDisabled: false,\r\n  onSelectRow: function onSelectRow() {},\r\n  onDeselectRow: function onDeselectRow() {},\r\n  inputType: 'checkbox'\r\n};"]},"metadata":{},"sourceType":"script"}