{"ast":null,"code":"'use strict';\n\nvar toText = require('hast-util-to-text');\n\nvar visit = require('unist-util-visit');\n\nmodule.exports = createPlugin;\n\nfunction createPlugin(lowlight) {\n  return function (options) {\n    var settings = options || {};\n    var name = 'hljs';\n    var pos;\n\n    if (settings.aliases) {\n      lowlight.registerAlias(settings.aliases);\n    }\n\n    if (settings.languages) {\n      // eslint-disable-next-line guard-for-in\n      for (var _name in settings.languages) {\n        lowlight.registerLanguage(_name, settings.languages[_name]);\n      }\n    }\n\n    if (settings.prefix) {\n      pos = settings.prefix.indexOf('-');\n      name = pos > -1 ? settings.prefix.slice(0, pos) : settings.prefix;\n    }\n\n    return transformer;\n\n    function transformer(tree) {\n      visit(tree, 'element', visitor);\n    }\n\n    function visitor(node, index, parent) {\n      var props;\n      var result;\n      var lang;\n\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return;\n      }\n\n      lang = language(node);\n\n      if (lang === false || !lang && settings.subset === false || settings.plainText && settings.plainText.indexOf(lang) > -1) {\n        return;\n      }\n\n      props = node.properties;\n\n      if (!props.className) {\n        props.className = [];\n      }\n\n      if (props.className.indexOf(name) < 0) {\n        props.className.unshift(name);\n      }\n\n      try {\n        result = lang ? lowlight.highlight(lang, toText(parent), options) : lowlight.highlightAuto(toText(parent), options);\n      } catch (error) {\n        if (!settings.ignoreMissing || !/Unknown language/.test(error.message)) {\n          throw error;\n        }\n\n        result = {};\n      }\n\n      if (!lang && result.language) {\n        props.className.push('language-' + result.language);\n      }\n\n      if (result.value) {\n        node.children = result.value;\n      }\n    }\n  };\n} // Get the programming language of `node`.\n\n\nfunction language(node) {\n  var className = node.properties.className || [];\n  var index = -1;\n  var value;\n\n  while (++index < className.length) {\n    value = className[index];\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false;\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5);\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9);\n    }\n  }\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/rehype-highlight/core.js"],"names":["toText","require","visit","module","exports","createPlugin","lowlight","options","settings","name","pos","aliases","registerAlias","languages","registerLanguage","prefix","indexOf","slice","transformer","tree","visitor","node","index","parent","props","result","lang","tagName","language","subset","plainText","properties","className","unshift","highlight","highlightAuto","error","ignoreMissing","test","message","push","value","children","length"],"mappings":"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","sourcesContent":["'use strict'\n\nvar toText = require('hast-util-to-text')\nvar visit = require('unist-util-visit')\n\nmodule.exports = createPlugin\n\nfunction createPlugin(lowlight) {\n  return function (options) {\n    var settings = options || {}\n    var name = 'hljs'\n    var pos\n\n    if (settings.aliases) {\n      lowlight.registerAlias(settings.aliases)\n    }\n\n    if (settings.languages) {\n      // eslint-disable-next-line guard-for-in\n      for (let name in settings.languages) {\n        lowlight.registerLanguage(name, settings.languages[name])\n      }\n    }\n\n    if (settings.prefix) {\n      pos = settings.prefix.indexOf('-')\n      name = pos > -1 ? settings.prefix.slice(0, pos) : settings.prefix\n    }\n\n    return transformer\n\n    function transformer(tree) {\n      visit(tree, 'element', visitor)\n    }\n\n    function visitor(node, index, parent) {\n      var props\n      var result\n      var lang\n\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      lang = language(node)\n\n      if (\n        lang === false ||\n        (!lang && settings.subset === false) ||\n        (settings.plainText && settings.plainText.indexOf(lang) > -1)\n      ) {\n        return\n      }\n\n      props = node.properties\n\n      if (!props.className) {\n        props.className = []\n      }\n\n      if (props.className.indexOf(name) < 0) {\n        props.className.unshift(name)\n      }\n\n      try {\n        result = lang\n          ? lowlight.highlight(lang, toText(parent), options)\n          : lowlight.highlightAuto(toText(parent), options)\n      } catch (error) {\n        if (\n          !settings.ignoreMissing ||\n          !/Unknown language/.test(error.message)\n        ) {\n          throw error\n        }\n\n        result = {}\n      }\n\n      if (!lang && result.language) {\n        props.className.push('language-' + result.language)\n      }\n\n      if (result.value) {\n        node.children = result.value\n      }\n    }\n  }\n}\n\n// Get the programming language of `node`.\nfunction language(node) {\n  var className = node.properties.className || []\n  var index = -1\n  var value\n\n  while (++index < className.length) {\n    value = className[index]\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5)\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}