{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getFormattedEventTime;\n\nfunction getFormattedEventTime(parts) {\n  return parts.filter(function (_ref, index, arr) {\n    var type = _ref.type,\n        value = _ref.value;\n\n    if (type === 'minute' && value === '00') {\n      return false;\n    }\n\n    var next = arr[index + 1];\n\n    if (next && next.type === 'minute' && next.value === '00') {\n      return false;\n    }\n\n    return true;\n  }).map(function (_ref2) {\n    var value = _ref2.value;\n    return value;\n  }).reduce(function (string, part) {\n    return string + part;\n  });\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/WeeklyCalendar/week/helpers/getFormattedEventTime.js"],"names":["Object","defineProperty","exports","value","getFormattedEventTime","parts","filter","_ref","index","arr","type","next","map","_ref2","reduce","string","part"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,qBAArB;;AAEA,SAASA,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,SAAOA,KAAK,CAACC,MAAN,CAAa,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AAC9C,QAAIC,IAAI,GAAGH,IAAI,CAACG,IAAhB;AAAA,QACIP,KAAK,GAAGI,IAAI,CAACJ,KADjB;;AAGA,QAAIO,IAAI,KAAK,QAAT,IAAqBP,KAAK,KAAK,IAAnC,EAAyC;AACvC,aAAO,KAAP;AACD;;AAED,QAAIQ,IAAI,GAAGF,GAAG,CAACD,KAAK,GAAG,CAAT,CAAd;;AAEA,QAAIG,IAAI,IAAIA,IAAI,CAACD,IAAL,KAAc,QAAtB,IAAkCC,IAAI,CAACR,KAAL,KAAe,IAArD,EAA2D;AACzD,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GAfM,EAeJS,GAfI,CAeA,UAAUC,KAAV,EAAiB;AACtB,QAAIV,KAAK,GAAGU,KAAK,CAACV,KAAlB;AACA,WAAOA,KAAP;AACD,GAlBM,EAkBJW,MAlBI,CAkBG,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAChC,WAAOD,MAAM,GAAGC,IAAhB;AACD,GApBM,CAAP;AAqBD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getFormattedEventTime;\n\nfunction getFormattedEventTime(parts) {\n  return parts.filter(function (_ref, index, arr) {\n    var type = _ref.type,\n        value = _ref.value;\n\n    if (type === 'minute' && value === '00') {\n      return false;\n    }\n\n    var next = arr[index + 1];\n\n    if (next && next.type === 'minute' && next.value === '00') {\n      return false;\n    }\n\n    return true;\n  }).map(function (_ref2) {\n    var value = _ref2.value;\n    return value;\n  }).reduce(function (string, part) {\n    return string + part;\n  });\n}"]},"metadata":{},"sourceType":"script"}