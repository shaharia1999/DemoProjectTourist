{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getFirstDayOfWeek;\n\nfunction getFirstDayOfWeek(date) {\n  if (date === Infinity || date === -Infinity) {\n    return date;\n  }\n\n  var clone = new Date(date); // eslint-disable-next-line no-restricted-globals\n\n  var isValidDate = !isNaN(clone.getTime());\n\n  if (isValidDate) {\n    clone.setDate(clone.getDate() - clone.getDay());\n    clone.setHours(0, 0, 0, 0);\n    return clone;\n  }\n\n  var today = new Date();\n  today.setDate(today.getDate() - today.getDay());\n  today.setHours(0, 0, 0, 0);\n  return today;\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/WeeklyCalendar/helpers/getFirstDayOfWeek.js"],"names":["Object","defineProperty","exports","value","getFirstDayOfWeek","date","Infinity","clone","Date","isValidDate","isNaN","getTime","setDate","getDate","getDay","setHours","today"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,iBAArB;;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MAAIA,IAAI,KAAKC,QAAT,IAAqBD,IAAI,KAAK,CAACC,QAAnC,EAA6C;AAC3C,WAAOD,IAAP;AACD;;AAED,MAAIE,KAAK,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAZ,CAL+B,CAKH;;AAE5B,MAAII,WAAW,GAAG,CAACC,KAAK,CAACH,KAAK,CAACI,OAAN,EAAD,CAAxB;;AAEA,MAAIF,WAAJ,EAAiB;AACfF,IAAAA,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACM,OAAN,KAAkBN,KAAK,CAACO,MAAN,EAAhC;AACAP,IAAAA,KAAK,CAACQ,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,WAAOR,KAAP;AACD;;AAED,MAAIS,KAAK,GAAG,IAAIR,IAAJ,EAAZ;AACAQ,EAAAA,KAAK,CAACJ,OAAN,CAAcI,KAAK,CAACH,OAAN,KAAkBG,KAAK,CAACF,MAAN,EAAhC;AACAE,EAAAA,KAAK,CAACD,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,SAAOC,KAAP;AACD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = getFirstDayOfWeek;\r\n\r\nfunction getFirstDayOfWeek(date) {\r\n  if (date === Infinity || date === -Infinity) {\r\n    return date;\r\n  }\r\n\r\n  var clone = new Date(date); // eslint-disable-next-line no-restricted-globals\r\n\r\n  var isValidDate = !isNaN(clone.getTime());\r\n\r\n  if (isValidDate) {\r\n    clone.setDate(clone.getDate() - clone.getDay());\r\n    clone.setHours(0, 0, 0, 0);\r\n    return clone;\r\n  }\r\n\r\n  var today = new Date();\r\n  today.setDate(today.getDate() - today.getDay());\r\n  today.setHours(0, 0, 0, 0);\r\n  return today;\r\n}"]},"metadata":{},"sourceType":"script"}