{"ast":null,"code":"/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\n\n\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\r\nLanguage: Erlang REPL\r\nAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\r\nWebsite: https://www.erlang.org\r\nCategory: functional\r\n*/\n\n/** @type LanguageFn */\n\n\nfunction erlangRepl(hljs) {\n  return {\n    name: 'Erlang REPL',\n    keywords: {\n      built_in: 'spawn spawn_link self',\n      keyword: 'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' + 'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [{\n      className: 'meta',\n      begin: '^[0-9]+> ',\n      relevance: 10\n    }, hljs.COMMENT('%', '$'), {\n      className: 'number',\n      begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n      relevance: 0\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n      begin: concat(/\\?(::)?/, /([A-Z]\\w*)/, // at least one identifier\n      /((::)[A-Z]\\w*)*/ // perhaps more\n      )\n    }, {\n      begin: '->'\n    }, {\n      begin: 'ok'\n    }, {\n      begin: '!'\n    }, {\n      begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n      relevance: 0\n    }, {\n      begin: '[A-Z][a-zA-Z0-9_\\']*',\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = erlangRepl;","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/highlight.js/lib/languages/erlang-repl.js"],"names":["source","re","concat","args","joined","map","x","join","erlangRepl","hljs","name","keywords","built_in","keyword","contains","className","begin","relevance","COMMENT","APOS_STRING_MODE","QUOTE_STRING_MODE","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASA,MAAT,CAAgBC,EAAhB,EAAoB;AAClB,MAAI,CAACA,EAAL,EAAS,OAAO,IAAP;AACT,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B,OAAOA,EAAP;AAE5B,SAAOA,EAAE,CAACD,MAAV;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgB,GAAGC,IAAnB,EAAyB;AACvB,QAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAAUC,CAAD,IAAON,MAAM,CAACM,CAAD,CAAtB,EAA2BC,IAA3B,CAAgC,EAAhC,CAAf;AACA,SAAOH,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,SAASI,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EACN,uBAFM;AAGRC,MAAAA,OAAO,EACL,0FACA;AALM,KAFL;AASLC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADQ,EAMRR,IAAI,CAACS,OAAL,CAAa,GAAb,EAAkB,GAAlB,CANQ,EAOR;AACEH,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,+FAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KAPQ,EAYRR,IAAI,CAACU,gBAZG,EAaRV,IAAI,CAACW,iBAbG,EAcR;AACEJ,MAAAA,KAAK,EAAEd,MAAM,CACX,SADW,EAEX,YAFW,EAEG;AACd,uBAHW,CAGO;AAHP;AADf,KAdQ,EAqBR;AACEc,MAAAA,KAAK,EAAE;AADT,KArBQ,EAwBR;AACEA,MAAAA,KAAK,EAAE;AADT,KAxBQ,EA2BR;AACEA,MAAAA,KAAK,EAAE;AADT,KA3BQ,EA8BR;AACEA,MAAAA,KAAK,EAAE,gFADT;AAEEC,MAAAA,SAAS,EAAE;AAFb,KA9BQ,EAkCR;AACED,MAAAA,KAAK,EAAE,sBADT;AAEEC,MAAAA,SAAS,EAAE;AAFb,KAlCQ;AATL,GAAP;AAiDD;;AAEDI,MAAM,CAACC,OAAP,GAAiBd,UAAjB","sourcesContent":["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: Erlang REPL\r\nAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\r\nWebsite: https://www.erlang.org\r\nCategory: functional\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction erlangRepl(hljs) {\r\n  return {\r\n    name: 'Erlang REPL',\r\n    keywords: {\r\n      built_in:\r\n        'spawn spawn_link self',\r\n      keyword:\r\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\r\n        'let not of or orelse|10 query receive rem try when xor'\r\n    },\r\n    contains: [\r\n      {\r\n        className: 'meta',\r\n        begin: '^[0-9]+> ',\r\n        relevance: 10\r\n      },\r\n      hljs.COMMENT('%', '$'),\r\n      {\r\n        className: 'number',\r\n        begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\r\n        relevance: 0\r\n      },\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        begin: concat(\r\n          /\\?(::)?/,\r\n          /([A-Z]\\w*)/, // at least one identifier\r\n          /((::)[A-Z]\\w*)*/ // perhaps more\r\n        )\r\n      },\r\n      {\r\n        begin: '->'\r\n      },\r\n      {\r\n        begin: 'ok'\r\n      },\r\n      {\r\n        begin: '!'\r\n      },\r\n      {\r\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = erlangRepl;\r\n"]},"metadata":{},"sourceType":"script"}