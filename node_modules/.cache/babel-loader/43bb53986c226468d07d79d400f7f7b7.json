{"ast":null,"code":"'use strict';\n\nvar decimal = require('is-decimal');\n\nvar alphabetical = require('is-alphabetical');\n\nvar plusSign = 43; // '+'\n\nvar dash = 45; // '-'\n\nvar dot = 46; // '.'\n\nvar underscore = 95; // '_'\n\nmodule.exports = locate; // See: <https://github.github.com/gfm/#extended-email-autolink>\n\nfunction locate(value, fromIndex) {\n  var self = this;\n  var at;\n  var position;\n\n  if (!this.options.gfm) {\n    return -1;\n  }\n\n  at = value.indexOf('@', fromIndex);\n\n  if (at === -1) {\n    return -1;\n  }\n\n  position = at;\n\n  if (position === fromIndex || !isGfmAtext(value.charCodeAt(position - 1))) {\n    return locate.call(self, value, at + 1);\n  }\n\n  while (position > fromIndex && isGfmAtext(value.charCodeAt(position - 1))) {\n    position--;\n  }\n\n  return position;\n}\n\nfunction isGfmAtext(code) {\n  return decimal(code) || alphabetical(code) || code === plusSign || code === dash || code === dot || code === underscore;\n}","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/node_modules/remark-parse/lib/locate/email.js"],"names":["decimal","require","alphabetical","plusSign","dash","dot","underscore","module","exports","locate","value","fromIndex","self","at","position","options","gfm","indexOf","isGfmAtext","charCodeAt","call","code"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIE,QAAQ,GAAG,EAAf,C,CAAkB;;AAClB,IAAIC,IAAI,GAAG,EAAX,C,CAAc;;AACd,IAAIC,GAAG,GAAG,EAAV,C,CAAa;;AACb,IAAIC,UAAU,GAAG,EAAjB,C,CAAoB;;AAEpBC,MAAM,CAACC,OAAP,GAAiBC,MAAjB,C,CAEA;;AACA,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC;AAChC,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,EAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAI,CAAC,KAAKC,OAAL,CAAaC,GAAlB,EAAuB;AACrB,WAAO,CAAC,CAAR;AACD;;AAEDH,EAAAA,EAAE,GAAGH,KAAK,CAACO,OAAN,CAAc,GAAd,EAAmBN,SAAnB,CAAL;;AAEA,MAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;AACb,WAAO,CAAC,CAAR;AACD;;AAEDC,EAAAA,QAAQ,GAAGD,EAAX;;AAEA,MAAIC,QAAQ,KAAKH,SAAb,IAA0B,CAACO,UAAU,CAACR,KAAK,CAACS,UAAN,CAAiBL,QAAQ,GAAG,CAA5B,CAAD,CAAzC,EAA2E;AACzE,WAAOL,MAAM,CAACW,IAAP,CAAYR,IAAZ,EAAkBF,KAAlB,EAAyBG,EAAE,GAAG,CAA9B,CAAP;AACD;;AAED,SAAOC,QAAQ,GAAGH,SAAX,IAAwBO,UAAU,CAACR,KAAK,CAACS,UAAN,CAAiBL,QAAQ,GAAG,CAA5B,CAAD,CAAzC,EAA2E;AACzEA,IAAAA,QAAQ;AACT;;AAED,SAAOA,QAAP;AACD;;AAED,SAASI,UAAT,CAAoBG,IAApB,EAA0B;AACxB,SACErB,OAAO,CAACqB,IAAD,CAAP,IACAnB,YAAY,CAACmB,IAAD,CADZ,IAEAA,IAAI,KAAKlB,QAFT,IAGAkB,IAAI,KAAKjB,IAHT,IAIAiB,IAAI,KAAKhB,GAJT,IAKAgB,IAAI,KAAKf,UANX;AAQD","sourcesContent":["'use strict'\n\nvar decimal = require('is-decimal')\nvar alphabetical = require('is-alphabetical')\n\nvar plusSign = 43 // '+'\nvar dash = 45 // '-'\nvar dot = 46 // '.'\nvar underscore = 95 // '_'\n\nmodule.exports = locate\n\n// See: <https://github.github.com/gfm/#extended-email-autolink>\nfunction locate(value, fromIndex) {\n  var self = this\n  var at\n  var position\n\n  if (!this.options.gfm) {\n    return -1\n  }\n\n  at = value.indexOf('@', fromIndex)\n\n  if (at === -1) {\n    return -1\n  }\n\n  position = at\n\n  if (position === fromIndex || !isGfmAtext(value.charCodeAt(position - 1))) {\n    return locate.call(self, value, at + 1)\n  }\n\n  while (position > fromIndex && isGfmAtext(value.charCodeAt(position - 1))) {\n    position--\n  }\n\n  return position\n}\n\nfunction isGfmAtext(code) {\n  return (\n    decimal(code) ||\n    alphabetical(code) ||\n    code === plusSign ||\n    code === dash ||\n    code === dot ||\n    code === underscore\n  )\n}\n"]},"metadata":{},"sourceType":"script"}