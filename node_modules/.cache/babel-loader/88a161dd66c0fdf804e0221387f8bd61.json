{"ast":null,"code":"/*\r\nLanguage: Device Tree\r\nDescription: *.dts files used in the Linux kernel\r\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\r\nWebsite: https://elinux.org/Device_Tree_Reference\r\nCategory: config\r\n*/\n\n/** @type LanguageFn */\nfunction dts(hljs) {\n  const STRINGS = {\n    className: 'string',\n    variants: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      begin: '((u8?|U)|L)?\"'\n    }), {\n      begin: '(u8?|U)?R\"',\n      end: '\"',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\\'\\\\\\\\?.',\n      end: '\\'',\n      illegal: '.'\n    }]\n  };\n  const NUMBERS = {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\n    }, {\n      begin: hljs.C_NUMBER_RE\n    }],\n    relevance: 0\n  };\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '#',\n    end: '$',\n    keywords: {\n      'meta-keyword': 'if else elif endif define undef ifdef ifndef'\n    },\n    contains: [{\n      begin: /\\\\\\n/,\n      relevance: 0\n    }, {\n      beginKeywords: 'include',\n      end: '$',\n      keywords: {\n        'meta-keyword': 'include'\n      },\n      contains: [hljs.inherit(STRINGS, {\n        className: 'meta-string'\n      }), {\n        className: 'meta-string',\n        begin: '<',\n        end: '>',\n        illegal: '\\\\n'\n      }]\n    }, STRINGS, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n  };\n  const DTS_REFERENCE = {\n    className: 'variable',\n    begin: /&[a-z\\d_]*\\b/\n  };\n  const DTS_KEYWORD = {\n    className: 'meta-keyword',\n    begin: '/[a-z][a-z\\\\d-]*/'\n  };\n  const DTS_LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\n  };\n  const DTS_CELL_PROPERTY = {\n    className: 'params',\n    begin: '<',\n    end: '>',\n    contains: [NUMBERS, DTS_REFERENCE]\n  };\n  const DTS_NODE = {\n    className: 'class',\n    begin: /[a-zA-Z_][a-zA-Z\\d_@]*\\s\\{/,\n    end: /[{;=]/,\n    returnBegin: true,\n    excludeEnd: true\n  };\n  const DTS_ROOT_NODE = {\n    className: 'class',\n    begin: '/\\\\s*\\\\{',\n    end: /\\};/,\n    relevance: 10,\n    contains: [DTS_REFERENCE, DTS_KEYWORD, DTS_LABEL, DTS_NODE, DTS_CELL_PROPERTY, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBERS, STRINGS]\n  };\n  return {\n    name: 'Device Tree',\n    keywords: \"\",\n    contains: [DTS_ROOT_NODE, DTS_REFERENCE, DTS_KEYWORD, DTS_LABEL, DTS_NODE, DTS_CELL_PROPERTY, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBERS, STRINGS, PREPROCESSOR, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: \"\"\n    }]\n  };\n}\n\nmodule.exports = dts;","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/highlight.js/lib/languages/dts.js"],"names":["dts","hljs","STRINGS","className","variants","inherit","QUOTE_STRING_MODE","begin","end","contains","BACKSLASH_ESCAPE","illegal","NUMBERS","C_NUMBER_RE","relevance","PREPROCESSOR","keywords","beginKeywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","DTS_REFERENCE","DTS_KEYWORD","DTS_LABEL","DTS_CELL_PROPERTY","DTS_NODE","returnBegin","excludeEnd","DTS_ROOT_NODE","name","IDENT_RE","module","exports"],"mappings":"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","sourcesContent":["/*\r\nLanguage: Device Tree\r\nDescription: *.dts files used in the Linux kernel\r\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\r\nWebsite: https://elinux.org/Device_Tree_Reference\r\nCategory: config\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction dts(hljs) {\r\n  const STRINGS = {\r\n    className: 'string',\r\n    variants: [\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        begin: '((u8?|U)|L)?\"'\r\n      }),\r\n      {\r\n        begin: '(u8?|U)?R\"',\r\n        end: '\"',\r\n        contains: [hljs.BACKSLASH_ESCAPE]\r\n      },\r\n      {\r\n        begin: '\\'\\\\\\\\?.',\r\n        end: '\\'',\r\n        illegal: '.'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    variants: [\r\n      {\r\n        begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\r\n      },\r\n      {\r\n        begin: hljs.C_NUMBER_RE\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const PREPROCESSOR = {\r\n    className: 'meta',\r\n    begin: '#',\r\n    end: '$',\r\n    keywords: {\r\n      'meta-keyword': 'if else elif endif define undef ifdef ifndef'\r\n    },\r\n    contains: [\r\n      {\r\n        begin: /\\\\\\n/,\r\n        relevance: 0\r\n      },\r\n      {\r\n        beginKeywords: 'include',\r\n        end: '$',\r\n        keywords: {\r\n          'meta-keyword': 'include'\r\n        },\r\n        contains: [\r\n          hljs.inherit(STRINGS, {\r\n            className: 'meta-string'\r\n          }),\r\n          {\r\n            className: 'meta-string',\r\n            begin: '<',\r\n            end: '>',\r\n            illegal: '\\\\n'\r\n          }\r\n        ]\r\n      },\r\n      STRINGS,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE\r\n    ]\r\n  };\r\n\r\n  const DTS_REFERENCE = {\r\n    className: 'variable',\r\n    begin: /&[a-z\\d_]*\\b/\r\n  };\r\n\r\n  const DTS_KEYWORD = {\r\n    className: 'meta-keyword',\r\n    begin: '/[a-z][a-z\\\\d-]*/'\r\n  };\r\n\r\n  const DTS_LABEL = {\r\n    className: 'symbol',\r\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\r\n  };\r\n\r\n  const DTS_CELL_PROPERTY = {\r\n    className: 'params',\r\n    begin: '<',\r\n    end: '>',\r\n    contains: [\r\n      NUMBERS,\r\n      DTS_REFERENCE\r\n    ]\r\n  };\r\n\r\n  const DTS_NODE = {\r\n    className: 'class',\r\n    begin: /[a-zA-Z_][a-zA-Z\\d_@]*\\s\\{/,\r\n    end: /[{;=]/,\r\n    returnBegin: true,\r\n    excludeEnd: true\r\n  };\r\n\r\n  const DTS_ROOT_NODE = {\r\n    className: 'class',\r\n    begin: '/\\\\s*\\\\{',\r\n    end: /\\};/,\r\n    relevance: 10,\r\n    contains: [\r\n      DTS_REFERENCE,\r\n      DTS_KEYWORD,\r\n      DTS_LABEL,\r\n      DTS_NODE,\r\n      DTS_CELL_PROPERTY,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      NUMBERS,\r\n      STRINGS\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'Device Tree',\r\n    keywords: \"\",\r\n    contains: [\r\n      DTS_ROOT_NODE,\r\n      DTS_REFERENCE,\r\n      DTS_KEYWORD,\r\n      DTS_LABEL,\r\n      DTS_NODE,\r\n      DTS_CELL_PROPERTY,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      NUMBERS,\r\n      STRINGS,\r\n      PREPROCESSOR,\r\n      {\r\n        begin: hljs.IDENT_RE + '::',\r\n        keywords: \"\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = dts;\r\n"]},"metadata":{},"sourceType":"script"}