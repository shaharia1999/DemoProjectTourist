{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useWindowResize;\n\nvar _react = require(\"react\");\n\nfunction useWindowResize(handler) {\n  var isListening = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var listener = (0, _react.useCallback)(function (event) {\n    handler(event);\n  }, [handler]);\n  (0, _react.useEffect)(function () {\n    if (isListening) {\n      window.addEventListener('resize', listener);\n    }\n\n    return function () {\n      window.removeEventListener('resize', listener);\n    };\n  }, [isListening, listener]);\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/libs/hooks/useWindowResize.js"],"names":["Object","defineProperty","exports","value","useWindowResize","_react","require","handler","isListening","arguments","length","undefined","listener","useCallback","event","useEffect","window","addEventListener","removeEventListener"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,eAArB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASF,eAAT,CAAyBG,OAAzB,EAAkC;AAChC,MAAIC,WAAW,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAtF;AACA,MAAIG,QAAQ,GAAG,CAAC,GAAGP,MAAM,CAACQ,WAAX,EAAwB,UAAUC,KAAV,EAAiB;AACtDP,IAAAA,OAAO,CAACO,KAAD,CAAP;AACD,GAFc,EAEZ,CAACP,OAAD,CAFY,CAAf;AAGA,GAAC,GAAGF,MAAM,CAACU,SAAX,EAAsB,YAAY;AAChC,QAAIP,WAAJ,EAAiB;AACfQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC;AACD;;AAED,WAAO,YAAY;AACjBI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCN,QAArC;AACD,KAFD;AAGD,GARD,EAQG,CAACJ,WAAD,EAAcI,QAAd,CARH;AASD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useWindowResize;\n\nvar _react = require(\"react\");\n\nfunction useWindowResize(handler) {\n  var isListening = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var listener = (0, _react.useCallback)(function (event) {\n    handler(event);\n  }, [handler]);\n  (0, _react.useEffect)(function () {\n    if (isListening) {\n      window.addEventListener('resize', listener);\n    }\n\n    return function () {\n      window.removeEventListener('resize', listener);\n    };\n  }, [isListening, listener]);\n}"]},"metadata":{},"sourceType":"script"}