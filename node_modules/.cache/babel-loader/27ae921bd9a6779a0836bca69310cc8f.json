{"ast":null,"code":"'use strict';\n\nvar locate = require('../locate/break');\n\nmodule.exports = hardBreak;\nhardBreak.locator = locate;\nvar space = ' ';\nvar lineFeed = '\\n';\nvar minBreakLength = 2;\n\nfunction hardBreak(eat, value, silent) {\n  var length = value.length;\n  var index = -1;\n  var queue = '';\n  var character;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === lineFeed) {\n      if (index < minBreakLength) {\n        return;\n      }\n      /* istanbul ignore if - never used (yet) */\n\n\n      if (silent) {\n        return true;\n      }\n\n      queue += character;\n      return eat(queue)({\n        type: 'break'\n      });\n    }\n\n    if (character !== space) {\n      return;\n    }\n\n    queue += character;\n  }\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/remark-parse/lib/tokenize/break.js"],"names":["locate","require","module","exports","hardBreak","locator","space","lineFeed","minBreakLength","eat","value","silent","length","index","queue","character","charAt","type"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,OAAV,GAAoBL,MAApB;AAEA,IAAIM,KAAK,GAAG,GAAZ;AACA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,cAAc,GAAG,CAArB;;AAEA,SAASJ,SAAT,CAAmBK,GAAnB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAJ;;AAEA,SAAO,EAAEF,KAAF,GAAUD,MAAjB,EAAyB;AACvBG,IAAAA,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaH,KAAb,CAAZ;;AAEA,QAAIE,SAAS,KAAKR,QAAlB,EAA4B;AAC1B,UAAIM,KAAK,GAAGL,cAAZ,EAA4B;AAC1B;AACD;AAED;;;AACA,UAAIG,MAAJ,EAAY;AACV,eAAO,IAAP;AACD;;AAEDG,MAAAA,KAAK,IAAIC,SAAT;AAEA,aAAON,GAAG,CAACK,KAAD,CAAH,CAAW;AAACG,QAAAA,IAAI,EAAE;AAAP,OAAX,CAAP;AACD;;AAED,QAAIF,SAAS,KAAKT,KAAlB,EAAyB;AACvB;AACD;;AAEDQ,IAAAA,KAAK,IAAIC,SAAT;AACD;AACF","sourcesContent":["'use strict'\r\n\r\nvar locate = require('../locate/break')\r\n\r\nmodule.exports = hardBreak\r\nhardBreak.locator = locate\r\n\r\nvar space = ' '\r\nvar lineFeed = '\\n'\r\nvar minBreakLength = 2\r\n\r\nfunction hardBreak(eat, value, silent) {\r\n  var length = value.length\r\n  var index = -1\r\n  var queue = ''\r\n  var character\r\n\r\n  while (++index < length) {\r\n    character = value.charAt(index)\r\n\r\n    if (character === lineFeed) {\r\n      if (index < minBreakLength) {\r\n        return\r\n      }\r\n\r\n      /* istanbul ignore if - never used (yet) */\r\n      if (silent) {\r\n        return true\r\n      }\r\n\r\n      queue += character\r\n\r\n      return eat(queue)({type: 'break'})\r\n    }\r\n\r\n    if (character !== space) {\r\n      return\r\n    }\r\n\r\n    queue += character\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}