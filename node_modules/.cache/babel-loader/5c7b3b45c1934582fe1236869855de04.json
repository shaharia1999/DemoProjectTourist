{"ast":null,"code":"var _jsxFileName = \"E:\\\\Monirul AWS\\\\PorzotokFrontend\\\\src\\\\component\\\\login\\\\ChangePassword.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\nimport Porzotok from \"../../asset/images/Porzotok.png\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport axios from \"axios\";\nimport ApiUrl from \"../../api/ApiURL\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChangePassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.currentPasswordOnChange = event => {\n      let current_pass = event.target.value;\n      this.setState({\n        current_pass: current_pass\n      });\n    };\n\n    this.newPasswordOnChange = event => {\n      let new_pass = event.target.value;\n      this.setState({\n        new_pass: new_pass\n      });\n    };\n\n    this.Confirm_passwordOnChange = event => {\n      let confirm_pass = event.target.value;\n      this.setState({\n        confirm_pass: confirm_pass\n      });\n    };\n\n    this.onChangePasswordSubmit = event => {\n      let UserID = this.state.UserID;\n      let current_pass = this.state.current_pass;\n      let new_pass = this.state.new_pass;\n      let confirm_pass = this.state.confirm_pass;\n      let changePassBtn = document.getElementById('changePassBtn');\n      let ChangePasswordForm = document.getElementById('ChangePasswordForm');\n\n      if (current_pass.length === 0) {\n        toast.error('Current Password is Required!', {\n          position: \"top-center\",\n          theme: \"colored\",\n          autoClose: 2000\n        });\n      } else if (new_pass.length === 0) {\n        toast.error('New Password is Required!', {\n          position: \"top-center\",\n          theme: \"colored\",\n          autoClose: 3000\n        });\n      } else if (confirm_pass.length === 0) {\n        toast.error('Confirm Password is Required!', {\n          position: \"top-center\",\n          theme: \"colored\",\n          autoClose: 3000\n        });\n      } else if (new_pass !== confirm_pass) {\n        toast.error('Confirm Password does not match!', {\n          position: \"top-center\",\n          theme: \"colored\",\n          autoClose: 3000\n        });\n      } else {\n        ChangePasswordForm.innerHTML = \"Sending...\";\n        let MyFormData = new FormData();\n        MyFormData.append(\"user_id\", UserID);\n        MyFormData.append(\"mobile\", current_pass);\n        MyFormData.append(\"password\", new_pass);\n        axios.put(ApiUrl.changePassword, MyFormData).then(response => {\n          if (response.status === 200) {\n            toast.success('Login Successful', {\n              position: \"top-center\",\n              theme: \"colored\",\n              autoClose: 2000\n            });\n            this.setState({\n              userProfileRedirect: true\n            });\n            ChangePasswordForm.reset();\n          } else if (response.status === 400) {\n            toast.error('Phone Number or Password Not Match!', {\n              position: \"top-center\",\n              theme: \"colored\",\n              autoClose: 2000\n            });\n            changePassBtn.innerHTML = \"Login\";\n          } else if (response.status === 201) {\n            sessionStorage.setItem(\"UserIDForVerify\", response.data.data.user_id);\n            this.setState({\n              userOtpVerificationRedirect: true\n            });\n            ChangePasswordForm.reset();\n          } else {\n            toast.error('Login Fail ! Try Again', {\n              position: \"top-center\",\n              theme: \"colored\",\n              autoClose: 2000\n            });\n            changePassBtn.innerHTML = \"Login\";\n          }\n        }).catch(error => {\n          toast.error('Login Fail ! Try Again', {\n            position: \"top-center\",\n            theme: \"colored\",\n            autoClose: 2000\n          });\n          changePassBtn.innerHTML = \"Login\";\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.state = {\n      current_pass: \"\",\n      new_pass: \"\",\n      confirm_pass: \"\",\n      userProfileRedirect: false,\n      UserID: sessionStorage.getItem('UserID')\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"p-5 d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"LoginCard shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: 10,\n            lg: 10,\n            md: 10,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              id: \"ChangePasswordForm\",\n              onSubmit: this.onChangePasswordSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"LoginCardPorzotokImg mt-4\",\n                src: Porzotok,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.currentPasswordOnChange,\n                  type: \"text\",\n                  className: \"form-control placeholder-text\",\n                  placeholder: \"Enter Current Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.newPasswordOnChange,\n                  type: \"text\",\n                  className: \"form-control placeholder-text\",\n                  placeholder: \"Enter New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.Confirm_passwordOnChange,\n                  type: \"text\",\n                  className: \"form-control placeholder-text\",\n                  placeholder: \"Enter Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"changePassBtn\",\n                className: \"btn SendBtnColorText mb-5 btn-block\",\n                children: \"Change Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/src/component/login/ChangePassword.js"],"names":["React","Component","Fragment","Col","Container","Form","Row","Porzotok","toast","ToastContainer","axios","ApiUrl","ChangePassword","constructor","props","currentPasswordOnChange","event","current_pass","target","value","setState","newPasswordOnChange","new_pass","Confirm_passwordOnChange","confirm_pass","onChangePasswordSubmit","UserID","state","changePassBtn","document","getElementById","ChangePasswordForm","length","error","position","theme","autoClose","innerHTML","MyFormData","FormData","append","put","changePassword","then","response","status","success","userProfileRedirect","reset","sessionStorage","setItem","data","user_id","userOtpVerificationRedirect","catch","preventDefault","getItem","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport Porzotok from \"../../asset/images/Porzotok.png\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport ApiUrl from \"../../api/ApiURL\";\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            current_pass:\"\",\r\n            new_pass:\"\",\r\n            confirm_pass:\"\",\r\n            userProfileRedirect:false,\r\n            UserID: sessionStorage.getItem('UserID'),\r\n        };\r\n    }\r\n\r\n    currentPasswordOnChange=(event)=>{\r\n        let current_pass=event.target.value;\r\n        this.setState(({current_pass:current_pass}))\r\n    }\r\n\r\n    newPasswordOnChange=(event)=>{\r\n        let new_pass=event.target.value;\r\n        this.setState(({new_pass:new_pass}))\r\n    }\r\n\r\n    Confirm_passwordOnChange=(event)=>{\r\n        let confirm_pass=event.target.value;\r\n        this.setState(({confirm_pass:confirm_pass}))\r\n    }\r\n\r\n    onChangePasswordSubmit=(event)=>{\r\n        let UserID = this.state.UserID;\r\n        let current_pass=this.state.current_pass;\r\n        let new_pass=this.state.new_pass;\r\n        let confirm_pass=this.state.confirm_pass;\r\n\r\n        let changePassBtn=document.getElementById('changePassBtn');\r\n        let ChangePasswordForm=document.getElementById('ChangePasswordForm');\r\n\r\n        if(current_pass.length===0){\r\n            toast.error('Current Password is Required!', {\r\n                position: \"top-center\",\r\n                theme:\"colored\",\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else if(new_pass.length===0){\r\n            toast.error('New Password is Required!', {\r\n                position: \"top-center\",\r\n                theme:\"colored\",\r\n                autoClose: 3000,\r\n            });\r\n        }\r\n        else if(confirm_pass.length===0){\r\n            toast.error('Confirm Password is Required!', {\r\n                position: \"top-center\",\r\n                theme:\"colored\",\r\n                autoClose: 3000,\r\n            });\r\n        }\r\n        else if(new_pass!==confirm_pass){\r\n            toast.error('Confirm Password does not match!', {\r\n                position: \"top-center\",\r\n                theme:\"colored\",\r\n                autoClose: 3000,\r\n            });\r\n        }\r\n        else{\r\n            ChangePasswordForm.innerHTML=\"Sending...\";\r\n            let MyFormData=new FormData();\r\n            MyFormData.append(\"user_id\",UserID);\r\n            MyFormData.append(\"mobile\",current_pass);\r\n            MyFormData.append(\"password\",new_pass);\r\n\r\n            axios.put(ApiUrl.changePassword,MyFormData).then((response)=>{\r\n                if(response.status===200){\r\n                    toast.success('Login Successful', {\r\n                        position: \"top-center\",\r\n                        theme:\"colored\",\r\n                        autoClose: 2000,\r\n                    });\r\n                    this.setState({userProfileRedirect:true});\r\n                    ChangePasswordForm.reset();\r\n                }\r\n\r\n                else if(response.status===400){\r\n                    toast.error('Phone Number or Password Not Match!', {\r\n                        position: \"top-center\",\r\n                        theme:\"colored\",\r\n                        autoClose: 2000,\r\n                    });\r\n                    changePassBtn.innerHTML=\"Login\";\r\n                }\r\n                else if(response.status===201){\r\n                    sessionStorage.setItem(\"UserIDForVerify\",response.data.data.user_id);\r\n                    this.setState({userOtpVerificationRedirect:true});\r\n                    ChangePasswordForm.reset();\r\n                }\r\n\r\n                else{\r\n                    toast.error('Login Fail ! Try Again', {\r\n                        position: \"top-center\",\r\n                        theme:\"colored\",\r\n                        autoClose: 2000,\r\n                    });\r\n                    changePassBtn.innerHTML=\"Login\";\r\n                }\r\n            }).catch((error)=> {\r\n                toast.error('Login Fail ! Try Again', {\r\n                    position: \"top-center\",\r\n                    theme:\"colored\",\r\n                    autoClose: 2000,\r\n                });\r\n                changePassBtn.innerHTML=\"Login\";\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Container className=\"p-5 d-flex justify-content-center\">\r\n                    <Row className=\"LoginCard shadow-sm\">\r\n                        <Col xl={10} lg={10} md={10} sm={12} xs={12}>\r\n                            <Form id=\"ChangePasswordForm\" onSubmit={this.onChangePasswordSubmit}>\r\n                                <img className=\"LoginCardPorzotokImg mt-4\" src={Porzotok} alt=\"\"/>\r\n                                <div className=\"form-group\">\r\n                                    <input onChange={this.currentPasswordOnChange} type=\"text\" className=\"form-control placeholder-text\" placeholder=\"Enter Current Password\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input onChange={this.newPasswordOnChange} type=\"text\" className=\"form-control placeholder-text\" placeholder=\"Enter New Password\"/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input onChange={this.Confirm_passwordOnChange} type=\"text\" className=\"form-control placeholder-text\" placeholder=\"Enter Confirm Password\"/>\r\n                                </div>\r\n                                <button id=\"changePassBtn\" className=\"btn SendBtnColorText mb-5 btn-block\">Change Password</button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <ToastContainer/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}