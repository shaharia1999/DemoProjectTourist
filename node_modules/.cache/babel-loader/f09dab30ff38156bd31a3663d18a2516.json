{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Badge;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _container = _interopRequireDefault(require(\"./styled/container\"));\n\nvar _content = _interopRequireDefault(require(\"./content\"));\n/**\n * Badges are labels that hold small amounts of information.\n */\n\n\nfunction Badge(props) {\n  var className = props.className,\n      style = props.style,\n      label = props.label,\n      title = props.title,\n      children = props.children,\n      variant = props.variant,\n      size = props.size;\n\n  if (children === null && label === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_container[\"default\"], {\n    className: className,\n    style: style,\n    variant: variant,\n    title: title,\n    size: size\n  }, /*#__PURE__*/_react[\"default\"].createElement(_content[\"default\"], {\n    label: label\n  }, children));\n}\n\nBadge.propTypes = {\n  /** The text to be displayed inside the badge. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** The content of the badge. It is used to render icon or text elements within the badge.\n   * Children take precedence over label. */\n  children: _propTypes[\"default\"].node,\n\n  /** The variant changes the appearance of the badge. Accepted variants include default,\n   * inverse, lightest, brand, outline-brand, warning, success and error. This value takes the default variant by default. */\n  variant: _propTypes[\"default\"].oneOf(['default', 'inverse', 'lightest', 'outline-brand', 'brand', 'warning', 'success', 'error']),\n\n  /** The size of the badge. Valid values are small, and large.\n   * This value defaults to medium. */\n  size: _propTypes[\"default\"].oneOf(['small', 'medium', 'large']),\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nBadge.defaultProps = {\n  label: null,\n  title: undefined,\n  children: null,\n  variant: 'default',\n  size: 'medium',\n  className: undefined,\n  style: undefined\n};","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/Badge/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","Badge","_react","_propTypes","_container","_content","props","className","style","label","title","children","variant","size","createElement","propTypes","oneOfType","string","node","oneOf","object","defaultProps","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Badge;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _container = _interopRequireDefault(require(\"./styled/container\"));\n\nvar _content = _interopRequireDefault(require(\"./content\"));\n\n/**\n * Badges are labels that hold small amounts of information.\n */\nfunction Badge(props) {\n  var className = props.className,\n      style = props.style,\n      label = props.label,\n      title = props.title,\n      children = props.children,\n      variant = props.variant,\n      size = props.size;\n\n  if (children === null && label === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_container[\"default\"], {\n    className: className,\n    style: style,\n    variant: variant,\n    title: title,\n    size: size\n  }, /*#__PURE__*/_react[\"default\"].createElement(_content[\"default\"], {\n    label: label\n  }, children));\n}\n\nBadge.propTypes = {\n  /** The text to be displayed inside the badge. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** The content of the badge. It is used to render icon or text elements within the badge.\n   * Children take precedence over label. */\n  children: _propTypes[\"default\"].node,\n\n  /** The variant changes the appearance of the badge. Accepted variants include default,\n   * inverse, lightest, brand, outline-brand, warning, success and error. This value takes the default variant by default. */\n  variant: _propTypes[\"default\"].oneOf(['default', 'inverse', 'lightest', 'outline-brand', 'brand', 'warning', 'success', 'error']),\n\n  /** The size of the badge. Valid values are small, and large.\n   * This value defaults to medium. */\n  size: _propTypes[\"default\"].oneOf(['small', 'medium', 'large']),\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object\n};\nBadge.defaultProps = {\n  label: null,\n  title: undefined,\n  children: null,\n  variant: 'default',\n  size: 'medium',\n  className: undefined,\n  style: undefined\n};"]},"metadata":{},"sourceType":"script"}