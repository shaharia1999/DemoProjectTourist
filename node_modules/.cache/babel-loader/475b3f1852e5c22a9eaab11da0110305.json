{"ast":null,"code":"/*\r\nLanguage: Rust\r\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\r\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\r\nWebsite: https://www.rust-lang.org\r\nCategory: common, system\r\n*/\nfunction rust(hljs) {\n  const NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = 'abstract as async await become box break const continue crate do dyn ' + 'else enum extern false final fn for if impl in let loop macro match mod ' + 'move mut override priv pub ref return self Self static struct super ' + 'trait true try type typeof unsafe unsized use virtual where while yield';\n  const BUILTINS = // functions\n  'drop ' + // types\n  'i8 i16 i32 i64 i128 isize ' + 'u8 u16 u32 u64 u128 usize ' + 'f32 f64 ' + 'str char bool ' + 'Box Option Result String Vec ' + // traits\n  'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' + 'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' + 'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' + 'SliceConcatExt ToString ' + // macros\n  'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' + 'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' + 'include_bin! include_str! line! local_data_key! module_path! ' + 'option_env! print! println! select! stringify! try! unimplemented! ' + 'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n  return {\n    name: 'Rust',\n    aliases: ['rs'],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      keyword: KEYWORDS,\n      literal: 'true false Some None Ok Err',\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: ['self']\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      begin: /b?\"/,\n      illegal: null\n    }), {\n      className: 'string',\n      variants: [{\n        begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/\n      }, {\n        begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n      }]\n    }, {\n      className: 'symbol',\n      begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n    }, {\n      className: 'number',\n      variants: [{\n        begin: '\\\\b0b([01_]+)' + NUM_SUFFIX\n      }, {\n        begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX\n      }, {\n        begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX\n      }, {\n        begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' + NUM_SUFFIX\n      }],\n      relevance: 0\n    }, {\n      className: 'function',\n      beginKeywords: 'fn',\n      end: '(\\\\(|<)',\n      excludeEnd: true,\n      contains: [hljs.UNDERSCORE_TITLE_MODE]\n    }, {\n      className: 'meta',\n      begin: '#!?\\\\[',\n      end: '\\\\]',\n      contains: [{\n        className: 'meta-string',\n        begin: /\"/,\n        end: /\"/\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'type',\n      end: ';',\n      contains: [hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n        endsParent: true\n      })],\n      illegal: '\\\\S'\n    }, {\n      className: 'class',\n      beginKeywords: 'trait enum struct union',\n      end: /\\{/,\n      contains: [hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n        endsParent: true\n      })],\n      illegal: '[\\\\w\\\\d]'\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: {\n        built_in: BUILTINS\n      }\n    }, {\n      begin: '->'\n    }]\n  };\n}\n\nmodule.exports = rust;","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/highlight.js/lib/languages/rust.js"],"names":["rust","hljs","NUM_SUFFIX","KEYWORDS","BUILTINS","name","aliases","keywords","$pattern","IDENT_RE","keyword","literal","built_in","illegal","contains","C_LINE_COMMENT_MODE","COMMENT","inherit","QUOTE_STRING_MODE","begin","className","variants","relevance","beginKeywords","end","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent","module","exports"],"mappings":"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","sourcesContent":["/*\r\nLanguage: Rust\r\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\r\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\r\nWebsite: https://www.rust-lang.org\r\nCategory: common, system\r\n*/\r\n\r\nfunction rust(hljs) {\r\n  const NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\r\n  const KEYWORDS =\r\n    'abstract as async await become box break const continue crate do dyn ' +\r\n    'else enum extern false final fn for if impl in let loop macro match mod ' +\r\n    'move mut override priv pub ref return self Self static struct super ' +\r\n    'trait true try type typeof unsafe unsized use virtual where while yield';\r\n  const BUILTINS =\r\n    // functions\r\n    'drop ' +\r\n    // types\r\n    'i8 i16 i32 i64 i128 isize ' +\r\n    'u8 u16 u32 u64 u128 usize ' +\r\n    'f32 f64 ' +\r\n    'str char bool ' +\r\n    'Box Option Result String Vec ' +\r\n    // traits\r\n    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\r\n    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\r\n    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\r\n    'SliceConcatExt ToString ' +\r\n    // macros\r\n    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\r\n    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\r\n    'include_bin! include_str! line! local_data_key! module_path! ' +\r\n    'option_env! print! println! select! stringify! try! unimplemented! ' +\r\n    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\r\n  return {\r\n    name: 'Rust',\r\n    aliases: [ 'rs' ],\r\n    keywords: {\r\n      $pattern: hljs.IDENT_RE + '!?',\r\n      keyword:\r\n        KEYWORDS,\r\n      literal:\r\n        'true false Some None Ok Err',\r\n      built_in:\r\n        BUILTINS\r\n    },\r\n    illegal: '</',\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\r\n        contains: [ 'self' ]\r\n      }),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        begin: /b?\"/,\r\n        illegal: null\r\n      }),\r\n      {\r\n        className: 'string',\r\n        variants: [\r\n          {\r\n            begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/\r\n          },\r\n          {\r\n            begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'symbol',\r\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\r\n      },\r\n      {\r\n        className: 'number',\r\n        variants: [\r\n          {\r\n            begin: '\\\\b0b([01_]+)' + NUM_SUFFIX\r\n          },\r\n          {\r\n            begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX\r\n          },\r\n          {\r\n            begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX\r\n          },\r\n          {\r\n            begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\r\n                   NUM_SUFFIX\r\n          }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'fn',\r\n        end: '(\\\\(|<)',\r\n        excludeEnd: true,\r\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: '#!?\\\\[',\r\n        end: '\\\\]',\r\n        contains: [\r\n          {\r\n            className: 'meta-string',\r\n            begin: /\"/,\r\n            end: /\"/\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'type',\r\n        end: ';',\r\n        contains: [\r\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\r\n            endsParent: true\r\n          })\r\n        ],\r\n        illegal: '\\\\S'\r\n      },\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'trait enum struct union',\r\n        end: /\\{/,\r\n        contains: [\r\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\r\n            endsParent: true\r\n          })\r\n        ],\r\n        illegal: '[\\\\w\\\\d]'\r\n      },\r\n      {\r\n        begin: hljs.IDENT_RE + '::',\r\n        keywords: {\r\n          built_in: BUILTINS\r\n        }\r\n      },\r\n      {\r\n        begin: '->'\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = rust;\r\n"]},"metadata":{},"sourceType":"script"}