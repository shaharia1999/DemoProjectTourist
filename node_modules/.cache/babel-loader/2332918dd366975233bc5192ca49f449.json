{"ast":null,"code":"/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\n\n\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/**\r\n * Any of the passed expresssions may match\r\n *\r\n * Creates a huge this | this | that | that match\r\n * @param {(RegExp | string)[] } args\r\n * @returns {string}\r\n */\n\n\nfunction either(...args) {\n  const joined = '(' + args.map(x => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n/*\r\n Language: Apache Access Log\r\n Author: Oleg Efimov <efimovov@gmail.com>\r\n Description: Apache/Nginx Access Logs\r\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\r\n Audit: 2020\r\n */\n\n/** @type LanguageFn */\n\n\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"CONNECT\", \"OPTIONS\", \"PATCH\", \"TRACE\"];\n  return {\n    name: 'Apache Access Log',\n    contains: [// IP\n    {\n      className: 'number',\n      begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n      relevance: 5\n    }, // Other numbers\n    {\n      className: 'number',\n      begin: /\\b\\d+\\b/,\n      relevance: 0\n    }, // Requests\n    {\n      className: 'string',\n      begin: concat(/\"/, either(...HTTP_VERBS)),\n      end: /\"/,\n      keywords: HTTP_VERBS,\n      illegal: /\\n/,\n      relevance: 5,\n      contains: [{\n        begin: /HTTP\\/[12]\\.\\d'/,\n        relevance: 5\n      }]\n    }, // Dates\n    {\n      className: 'string',\n      // dates must have a certain length, this prevents matching\n      // simple array accesses a[123] and [] and other common patterns\n      // found in other languages\n      begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n      illegal: /\\n/,\n      relevance: 1\n    }, {\n      className: 'string',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: /\\n/,\n      relevance: 0\n    }, // User agent / relevance boost\n    {\n      className: 'string',\n      begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 3\n    }, // Strings\n    {\n      className: 'string',\n      begin: /\"/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = accesslog;","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/highlight.js/lib/languages/accesslog.js"],"names":["source","re","concat","args","joined","map","x","join","either","accesslog","_hljs","HTTP_VERBS","name","contains","className","begin","relevance","end","keywords","illegal","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/**\r\n * Any of the passed expresssions may match\r\n *\r\n * Creates a huge this | this | that | that match\r\n * @param {(RegExp | string)[] } args\r\n * @returns {string}\r\n */\r\nfunction either(...args) {\r\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\r\n  return joined;\r\n}\r\n\r\n/*\r\n Language: Apache Access Log\r\n Author: Oleg Efimov <efimovov@gmail.com>\r\n Description: Apache/Nginx Access Logs\r\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\r\n Audit: 2020\r\n */\r\n\r\n/** @type LanguageFn */\r\nfunction accesslog(_hljs) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\r\n  const HTTP_VERBS = [\r\n    \"GET\",\r\n    \"POST\",\r\n    \"HEAD\",\r\n    \"PUT\",\r\n    \"DELETE\",\r\n    \"CONNECT\",\r\n    \"OPTIONS\",\r\n    \"PATCH\",\r\n    \"TRACE\"\r\n  ];\r\n  return {\r\n    name: 'Apache Access Log',\r\n    contains: [\r\n      // IP\r\n      {\r\n        className: 'number',\r\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\r\n        relevance: 5\r\n      },\r\n      // Other numbers\r\n      {\r\n        className: 'number',\r\n        begin: /\\b\\d+\\b/,\r\n        relevance: 0\r\n      },\r\n      // Requests\r\n      {\r\n        className: 'string',\r\n        begin: concat(/\"/, either(...HTTP_VERBS)),\r\n        end: /\"/,\r\n        keywords: HTTP_VERBS,\r\n        illegal: /\\n/,\r\n        relevance: 5,\r\n        contains: [\r\n          {\r\n            begin: /HTTP\\/[12]\\.\\d'/,\r\n            relevance: 5\r\n          }\r\n        ]\r\n      },\r\n      // Dates\r\n      {\r\n        className: 'string',\r\n        // dates must have a certain length, this prevents matching\r\n        // simple array accesses a[123] and [] and other common patterns\r\n        // found in other languages\r\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\r\n        illegal: /\\n/,\r\n        relevance: 1\r\n      },\r\n      {\r\n        className: 'string',\r\n        begin: /\\[/,\r\n        end: /\\]/,\r\n        illegal: /\\n/,\r\n        relevance: 0\r\n      },\r\n      // User agent / relevance boost\r\n      {\r\n        className: 'string',\r\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\r\n        end: /\"/,\r\n        illegal: /\\n/,\r\n        relevance: 3\r\n      },\r\n      // Strings\r\n      {\r\n        className: 'string',\r\n        begin: /\"/,\r\n        end: /\"/,\r\n        illegal: /\\n/,\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = accesslog;\r\n"]},"metadata":{},"sourceType":"script"}