{"ast":null,"code":"/*\r\nLanguage: XL\r\nAuthor: Christophe de Dinechin <christophe@taodyne.com>\r\nDescription: An extensible programming language, based on parse tree rewriting\r\nWebsite: http://xlr.sf.net\r\n*/\nfunction xl(hljs) {\n  const BUILTIN_MODULES = 'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo ' + 'StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';\n  const XL_KEYWORDS = {\n    $pattern: /[a-zA-Z][a-zA-Z0-9_?]*/,\n    keyword: 'if then else do while until for loop import with is as where when by data constant ' + 'integer real text name boolean symbol infix prefix postfix block tree',\n    literal: 'true false nil',\n    built_in: 'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin ' + 'acos atan exp expm1 log log2 log10 log1p pi at text_length text_range ' + 'text_find text_replace contains page slide basic_slide title_slide ' + 'title subtitle fade_in fade_out fade_at clear_color color line_color ' + 'line_width texture_wrap texture_transform texture scale_?x scale_?y ' + 'scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y ' + 'rotate_?z? rectangle circle ellipse sphere path line_to move_to ' + 'quad_to curve_to theme background contents locally time mouse_?x ' + 'mouse_?y mouse_buttons ' + BUILTIN_MODULES\n  };\n  const DOUBLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    illegal: '\\\\n'\n  };\n  const SINGLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    illegal: '\\\\n'\n  };\n  const LONG_TEXT = {\n    className: 'string',\n    begin: '<<',\n    end: '>>'\n  };\n  const BASED_NUMBER = {\n    className: 'number',\n    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?'\n  };\n  const IMPORT = {\n    beginKeywords: 'import',\n    end: '$',\n    keywords: XL_KEYWORDS,\n    contains: [DOUBLE_QUOTE_TEXT]\n  };\n  const FUNCTION_DEFINITION = {\n    className: 'function',\n    begin: /[a-z][^\\n]*->/,\n    returnBegin: true,\n    end: /->/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      starts: {\n        endsWithParent: true,\n        keywords: XL_KEYWORDS\n      }\n    })]\n  };\n  return {\n    name: 'XL',\n    aliases: ['tao'],\n    keywords: XL_KEYWORDS,\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, DOUBLE_QUOTE_TEXT, SINGLE_QUOTE_TEXT, LONG_TEXT, FUNCTION_DEFINITION, IMPORT, BASED_NUMBER, hljs.NUMBER_MODE]\n  };\n}\n\nmodule.exports = xl;","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/highlight.js/lib/languages/xl.js"],"names":["xl","hljs","BUILTIN_MODULES","XL_KEYWORDS","$pattern","keyword","literal","built_in","DOUBLE_QUOTE_TEXT","className","begin","end","illegal","SINGLE_QUOTE_TEXT","LONG_TEXT","BASED_NUMBER","IMPORT","beginKeywords","keywords","contains","FUNCTION_DEFINITION","returnBegin","inherit","TITLE_MODE","starts","endsWithParent","name","aliases","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","NUMBER_MODE","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,EAAT,CAAYC,IAAZ,EAAkB;AAChB,QAAMC,eAAe,GACnB,wGACA,qGAFF;AAIA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE,wBADQ;AAElBC,IAAAA,OAAO,EACL,wFACA,uEAJgB;AAKlBC,IAAAA,OAAO,EACL,gBANgB;AAOlBC,IAAAA,QAAQ,EACN,yEACA,wEADA,GAEA,qEAFA,GAGA,uEAHA,GAIA,sEAJA,GAKA,wEALA,GAMA,kEANA,GAOA,mEAPA,GAQA,yBARA,GASAL;AAjBgB,GAApB;AAoBA,QAAMM,iBAAiB,GAAG;AACxBC,IAAAA,SAAS,EAAE,QADa;AAExBC,IAAAA,KAAK,EAAE,GAFiB;AAGxBC,IAAAA,GAAG,EAAE,GAHmB;AAIxBC,IAAAA,OAAO,EAAE;AAJe,GAA1B;AAMA,QAAMC,iBAAiB,GAAG;AACxBJ,IAAAA,SAAS,EAAE,QADa;AAExBC,IAAAA,KAAK,EAAE,IAFiB;AAGxBC,IAAAA,GAAG,EAAE,IAHmB;AAIxBC,IAAAA,OAAO,EAAE;AAJe,GAA1B;AAMA,QAAME,SAAS,GAAG;AAChBL,IAAAA,SAAS,EAAE,QADK;AAEhBC,IAAAA,KAAK,EAAE,IAFS;AAGhBC,IAAAA,GAAG,EAAE;AAHW,GAAlB;AAKA,QAAMI,YAAY,GAAG;AACnBN,IAAAA,SAAS,EAAE,QADQ;AAEnBC,IAAAA,KAAK,EAAE;AAFY,GAArB;AAIA,QAAMM,MAAM,GAAG;AACbC,IAAAA,aAAa,EAAE,QADF;AAEbN,IAAAA,GAAG,EAAE,GAFQ;AAGbO,IAAAA,QAAQ,EAAEf,WAHG;AAIbgB,IAAAA,QAAQ,EAAE,CAAEX,iBAAF;AAJG,GAAf;AAMA,QAAMY,mBAAmB,GAAG;AAC1BX,IAAAA,SAAS,EAAE,UADe;AAE1BC,IAAAA,KAAK,EAAE,eAFmB;AAG1BW,IAAAA,WAAW,EAAE,IAHa;AAI1BV,IAAAA,GAAG,EAAE,IAJqB;AAK1BQ,IAAAA,QAAQ,EAAE,CACRlB,IAAI,CAACqB,OAAL,CAAarB,IAAI,CAACsB,UAAlB,EAA8B;AAC5BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,cAAc,EAAE,IADV;AAENP,QAAAA,QAAQ,EAAEf;AAFJ;AADoB,KAA9B,CADQ;AALgB,GAA5B;AAcA,SAAO;AACLuB,IAAAA,IAAI,EAAE,IADD;AAELC,IAAAA,OAAO,EAAE,CAAE,KAAF,CAFJ;AAGLT,IAAAA,QAAQ,EAAEf,WAHL;AAILgB,IAAAA,QAAQ,EAAE,CACRlB,IAAI,CAAC2B,mBADG,EAER3B,IAAI,CAAC4B,oBAFG,EAGRrB,iBAHQ,EAIRK,iBAJQ,EAKRC,SALQ,EAMRM,mBANQ,EAORJ,MAPQ,EAQRD,YARQ,EASRd,IAAI,CAAC6B,WATG;AAJL,GAAP;AAgBD;;AAEDC,MAAM,CAACC,OAAP,GAAiBhC,EAAjB","sourcesContent":["/*\r\nLanguage: XL\r\nAuthor: Christophe de Dinechin <christophe@taodyne.com>\r\nDescription: An extensible programming language, based on parse tree rewriting\r\nWebsite: http://xlr.sf.net\r\n*/\r\n\r\nfunction xl(hljs) {\r\n  const BUILTIN_MODULES =\r\n    'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo ' +\r\n    'StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';\r\n\r\n  const XL_KEYWORDS = {\r\n    $pattern: /[a-zA-Z][a-zA-Z0-9_?]*/,\r\n    keyword:\r\n      'if then else do while until for loop import with is as where when by data constant ' +\r\n      'integer real text name boolean symbol infix prefix postfix block tree',\r\n    literal:\r\n      'true false nil',\r\n    built_in:\r\n      'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin ' +\r\n      'acos atan exp expm1 log log2 log10 log1p pi at text_length text_range ' +\r\n      'text_find text_replace contains page slide basic_slide title_slide ' +\r\n      'title subtitle fade_in fade_out fade_at clear_color color line_color ' +\r\n      'line_width texture_wrap texture_transform texture scale_?x scale_?y ' +\r\n      'scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y ' +\r\n      'rotate_?z? rectangle circle ellipse sphere path line_to move_to ' +\r\n      'quad_to curve_to theme background contents locally time mouse_?x ' +\r\n      'mouse_?y mouse_buttons ' +\r\n      BUILTIN_MODULES\r\n  };\r\n\r\n  const DOUBLE_QUOTE_TEXT = {\r\n    className: 'string',\r\n    begin: '\"',\r\n    end: '\"',\r\n    illegal: '\\\\n'\r\n  };\r\n  const SINGLE_QUOTE_TEXT = {\r\n    className: 'string',\r\n    begin: '\\'',\r\n    end: '\\'',\r\n    illegal: '\\\\n'\r\n  };\r\n  const LONG_TEXT = {\r\n    className: 'string',\r\n    begin: '<<',\r\n    end: '>>'\r\n  };\r\n  const BASED_NUMBER = {\r\n    className: 'number',\r\n    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?'\r\n  };\r\n  const IMPORT = {\r\n    beginKeywords: 'import',\r\n    end: '$',\r\n    keywords: XL_KEYWORDS,\r\n    contains: [ DOUBLE_QUOTE_TEXT ]\r\n  };\r\n  const FUNCTION_DEFINITION = {\r\n    className: 'function',\r\n    begin: /[a-z][^\\n]*->/,\r\n    returnBegin: true,\r\n    end: /->/,\r\n    contains: [\r\n      hljs.inherit(hljs.TITLE_MODE, {\r\n        starts: {\r\n          endsWithParent: true,\r\n          keywords: XL_KEYWORDS\r\n        }\r\n      })\r\n    ]\r\n  };\r\n  return {\r\n    name: 'XL',\r\n    aliases: [ 'tao' ],\r\n    keywords: XL_KEYWORDS,\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      DOUBLE_QUOTE_TEXT,\r\n      SINGLE_QUOTE_TEXT,\r\n      LONG_TEXT,\r\n      FUNCTION_DEFINITION,\r\n      IMPORT,\r\n      BASED_NUMBER,\r\n      hljs.NUMBER_MODE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = xl;\r\n"]},"metadata":{},"sourceType":"script"}