{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useHandleFocus;\n\nvar _react = require(\"react\");\n\nfunction useHandleFocus(_ref) {\n  var focusIndex = _ref.focusIndex,\n      onFocus = _ref.onFocus,\n      setFocusIndex = _ref.setFocusIndex,\n      value = _ref.value;\n  return (0, _react.useCallback)(function (event, index) {\n    if (index === 0 && focusIndex === 1 || index === focusIndex) {\n      return;\n    }\n\n    if (focusIndex === -1) {\n      onFocus(value);\n    }\n\n    setFocusIndex(index);\n  }, [focusIndex, onFocus, setFocusIndex, value]);\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/PhoneInput/hooks/useHandleFocus.js"],"names":["Object","defineProperty","exports","value","useHandleFocus","_react","require","_ref","focusIndex","onFocus","setFocusIndex","useCallback","event","index"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,cAArB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASF,cAAT,CAAwBG,IAAxB,EAA8B;AAC5B,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,MAEIC,aAAa,GAAGH,IAAI,CAACG,aAFzB;AAAA,MAGIP,KAAK,GAAGI,IAAI,CAACJ,KAHjB;AAIA,SAAO,CAAC,GAAGE,MAAM,CAACM,WAAX,EAAwB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACrD,QAAIA,KAAK,KAAK,CAAV,IAAeL,UAAU,KAAK,CAA9B,IAAmCK,KAAK,KAAKL,UAAjD,EAA6D;AAC3D;AACD;;AAED,QAAIA,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrBC,MAAAA,OAAO,CAACN,KAAD,CAAP;AACD;;AAEDO,IAAAA,aAAa,CAACG,KAAD,CAAb;AACD,GAVM,EAUJ,CAACL,UAAD,EAAaC,OAAb,EAAsBC,aAAtB,EAAqCP,KAArC,CAVI,CAAP;AAWD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = useHandleFocus;\r\n\r\nvar _react = require(\"react\");\r\n\r\nfunction useHandleFocus(_ref) {\r\n  var focusIndex = _ref.focusIndex,\r\n      onFocus = _ref.onFocus,\r\n      setFocusIndex = _ref.setFocusIndex,\r\n      value = _ref.value;\r\n  return (0, _react.useCallback)(function (event, index) {\r\n    if (index === 0 && focusIndex === 1 || index === focusIndex) {\r\n      return;\r\n    }\r\n\r\n    if (focusIndex === -1) {\r\n      onFocus(value);\r\n    }\r\n\r\n    setFocusIndex(index);\r\n  }, [focusIndex, onFocus, setFocusIndex, value]);\r\n}"]},"metadata":{},"sourceType":"script"}