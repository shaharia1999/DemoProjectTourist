{"ast":null,"code":"/*\r\nLanguage: Prolog\r\nDescription: Prolog is a general purpose logic programming language associated with artificial intelligence and computational linguistics.\r\nAuthor: Raivo Laanemets <raivo@infdot.com>\r\nWebsite: https://en.wikipedia.org/wiki/Prolog\r\n*/\nfunction prolog(hljs) {\n  const ATOM = {\n    begin: /[a-z][A-Za-z0-9_]*/,\n    relevance: 0\n  };\n  const VAR = {\n    className: 'symbol',\n    variants: [{\n      begin: /[A-Z][a-zA-Z0-9_]*/\n    }, {\n      begin: /_[A-Za-z0-9_]*/\n    }],\n    relevance: 0\n  };\n  const PARENTED = {\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0\n  };\n  const LIST = {\n    begin: /\\[/,\n    end: /\\]/\n  };\n  const LINE_COMMENT = {\n    className: 'comment',\n    begin: /%/,\n    end: /$/,\n    contains: [hljs.PHRASAL_WORDS_MODE]\n  };\n  const BACKTICK_STRING = {\n    className: 'string',\n    begin: /`/,\n    end: /`/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const CHAR_CODE = {\n    className: 'string',\n    // 0'a etc.\n    begin: /0'(\\\\'|.)/\n  };\n  const SPACE_CODE = {\n    className: 'string',\n    begin: /0'\\\\s/ // 0'\\s\n\n  };\n  const PRED_OP = {\n    // relevance booster\n    begin: /:-/\n  };\n  const inner = [ATOM, VAR, PARENTED, PRED_OP, LIST, LINE_COMMENT, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, BACKTICK_STRING, CHAR_CODE, SPACE_CODE, hljs.C_NUMBER_MODE];\n  PARENTED.contains = inner;\n  LIST.contains = inner;\n  return {\n    name: 'Prolog',\n    contains: inner.concat([{\n      // relevance booster\n      begin: /\\.$/\n    }])\n  };\n}\n\nmodule.exports = prolog;","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/highlight.js/lib/languages/prolog.js"],"names":["prolog","hljs","ATOM","begin","relevance","VAR","className","variants","PARENTED","end","LIST","LINE_COMMENT","contains","PHRASAL_WORDS_MODE","BACKTICK_STRING","BACKSLASH_ESCAPE","CHAR_CODE","SPACE_CODE","PRED_OP","inner","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","name","concat","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,QAAMC,IAAI,GAAG;AAEXC,IAAAA,KAAK,EAAE,oBAFI;AAGXC,IAAAA,SAAS,EAAE;AAHA,GAAb;AAMA,QAAMC,GAAG,GAAG;AAEVC,IAAAA,SAAS,EAAE,QAFD;AAGVC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,KAAK,EAAE;AADT,KADQ,EAIR;AACEA,MAAAA,KAAK,EAAE;AADT,KAJQ,CAHA;AAWVC,IAAAA,SAAS,EAAE;AAXD,GAAZ;AAcA,QAAMI,QAAQ,GAAG;AAEfL,IAAAA,KAAK,EAAE,IAFQ;AAGfM,IAAAA,GAAG,EAAE,IAHU;AAIfL,IAAAA,SAAS,EAAE;AAJI,GAAjB;AAOA,QAAMM,IAAI,GAAG;AAEXP,IAAAA,KAAK,EAAE,IAFI;AAGXM,IAAAA,GAAG,EAAE;AAHM,GAAb;AAMA,QAAME,YAAY,GAAG;AAEnBL,IAAAA,SAAS,EAAE,SAFQ;AAGnBH,IAAAA,KAAK,EAAE,GAHY;AAInBM,IAAAA,GAAG,EAAE,GAJc;AAKnBG,IAAAA,QAAQ,EAAE,CAAEX,IAAI,CAACY,kBAAP;AALS,GAArB;AAQA,QAAMC,eAAe,GAAG;AAEtBR,IAAAA,SAAS,EAAE,QAFW;AAGtBH,IAAAA,KAAK,EAAE,GAHe;AAItBM,IAAAA,GAAG,EAAE,GAJiB;AAKtBG,IAAAA,QAAQ,EAAE,CAAEX,IAAI,CAACc,gBAAP;AALY,GAAxB;AAQA,QAAMC,SAAS,GAAG;AAChBV,IAAAA,SAAS,EAAE,QADK;AACK;AACrBH,IAAAA,KAAK,EAAE;AAFS,GAAlB;AAKA,QAAMc,UAAU,GAAG;AACjBX,IAAAA,SAAS,EAAE,QADM;AAEjBH,IAAAA,KAAK,EAAE,OAFU,CAEF;;AAFE,GAAnB;AAKA,QAAMe,OAAO,GAAG;AAAE;AAChBf,IAAAA,KAAK,EAAE;AADO,GAAhB;AAIA,QAAMgB,KAAK,GAAG,CAEZjB,IAFY,EAGZG,GAHY,EAIZG,QAJY,EAKZU,OALY,EAMZR,IANY,EAOZC,YAPY,EAQZV,IAAI,CAACmB,oBARO,EASZnB,IAAI,CAACoB,iBATO,EAUZpB,IAAI,CAACqB,gBAVO,EAWZR,eAXY,EAYZE,SAZY,EAaZC,UAbY,EAcZhB,IAAI,CAACsB,aAdO,CAAd;AAiBAf,EAAAA,QAAQ,CAACI,QAAT,GAAoBO,KAApB;AACAT,EAAAA,IAAI,CAACE,QAAL,GAAgBO,KAAhB;AAEA,SAAO;AACLK,IAAAA,IAAI,EAAE,QADD;AAELZ,IAAAA,QAAQ,EAAEO,KAAK,CAACM,MAAN,CAAa,CACrB;AAAE;AACAtB,MAAAA,KAAK,EAAE;AADT,KADqB,CAAb;AAFL,GAAP;AAQD;;AAEDuB,MAAM,CAACC,OAAP,GAAiB3B,MAAjB","sourcesContent":["/*\r\nLanguage: Prolog\r\nDescription: Prolog is a general purpose logic programming language associated with artificial intelligence and computational linguistics.\r\nAuthor: Raivo Laanemets <raivo@infdot.com>\r\nWebsite: https://en.wikipedia.org/wiki/Prolog\r\n*/\r\n\r\nfunction prolog(hljs) {\r\n  const ATOM = {\r\n\r\n    begin: /[a-z][A-Za-z0-9_]*/,\r\n    relevance: 0\r\n  };\r\n\r\n  const VAR = {\r\n\r\n    className: 'symbol',\r\n    variants: [\r\n      {\r\n        begin: /[A-Z][a-zA-Z0-9_]*/\r\n      },\r\n      {\r\n        begin: /_[A-Za-z0-9_]*/\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const PARENTED = {\r\n\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    relevance: 0\r\n  };\r\n\r\n  const LIST = {\r\n\r\n    begin: /\\[/,\r\n    end: /\\]/\r\n  };\r\n\r\n  const LINE_COMMENT = {\r\n\r\n    className: 'comment',\r\n    begin: /%/,\r\n    end: /$/,\r\n    contains: [ hljs.PHRASAL_WORDS_MODE ]\r\n  };\r\n\r\n  const BACKTICK_STRING = {\r\n\r\n    className: 'string',\r\n    begin: /`/,\r\n    end: /`/,\r\n    contains: [ hljs.BACKSLASH_ESCAPE ]\r\n  };\r\n\r\n  const CHAR_CODE = {\r\n    className: 'string', // 0'a etc.\r\n    begin: /0'(\\\\'|.)/\r\n  };\r\n\r\n  const SPACE_CODE = {\r\n    className: 'string',\r\n    begin: /0'\\\\s/ // 0'\\s\r\n  };\r\n\r\n  const PRED_OP = { // relevance booster\r\n    begin: /:-/\r\n  };\r\n\r\n  const inner = [\r\n\r\n    ATOM,\r\n    VAR,\r\n    PARENTED,\r\n    PRED_OP,\r\n    LIST,\r\n    LINE_COMMENT,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    hljs.APOS_STRING_MODE,\r\n    BACKTICK_STRING,\r\n    CHAR_CODE,\r\n    SPACE_CODE,\r\n    hljs.C_NUMBER_MODE\r\n  ];\r\n\r\n  PARENTED.contains = inner;\r\n  LIST.contains = inner;\r\n\r\n  return {\r\n    name: 'Prolog',\r\n    contains: inner.concat([\r\n      { // relevance booster\r\n        begin: /\\.$/\r\n      }\r\n    ])\r\n  };\r\n}\r\n\r\nmodule.exports = prolog;\r\n"]},"metadata":{},"sourceType":"script"}