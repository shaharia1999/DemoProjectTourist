{"ast":null,"code":"import _classCallCheck from\"D:/PorzotokFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/PorzotokFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/PorzotokFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/PorzotokFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{Button,Col,Container,Form,Row}from\"react-bootstrap\";import Porzotok from\"../../asset/images/Porzotok.png\";import{Redirect}from\"react-router-dom\";import{toast,ToastContainer}from\"react-toastify\";import axios from\"axios\";import ApiURL from\"../../api/ApiURL\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForgotPasswordSet=/*#__PURE__*/function(_Component){_inherits(ForgotPasswordSet,_Component);var _super=_createSuper(ForgotPasswordSet);function ForgotPasswordSet(){var _this;_classCallCheck(this,ForgotPasswordSet);_this=_super.call(this);_this.NewPasswordOnChange=function(event){var NewPassword=event.target.value;_this.setState({NewPassword:NewPassword});};_this.NewConfirmPasswordOnChange=function(event){var NewConfirmPassword=event.target.value;_this.setState({NewConfirmPassword:NewConfirmPassword});};_this.onPasswordSetFromSubmit=function(event){var UserID=_this.state.UserID;var NewPassword=_this.state.NewPassword;var NewConfirmPassword=_this.state.NewConfirmPassword;var PasswordBtn=document.getElementById('PasswordBtn');var ConfirmPasswordForm=document.getElementById('ConfirmPasswordForm');if(NewPassword.length===0){toast.error('New Password is Required !',{position:\"top-center\",theme:\"colored\",autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});}else if(NewPassword!==NewConfirmPassword){toast.error('Confirm Password Not Match !',{position:\"top-center\",theme:\"colored\",autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});}else{PasswordBtn.innerHTML=\"Verifying...\";var MyFormData=new FormData();// MyFormData.append(\"user_id\", UserID);\nMyFormData.append(\"new_password\",NewPassword);axios.put(ApiURL.ResetConfirmPasswordSet+UserID+'/',MyFormData).then(function(response){if(response.data.error===false){toast.success('New Password Set Successfully',{position:\"top-center\",theme:\"colored\",hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,autoClose:3000});_this.setState({userRedirect:true});ConfirmPasswordForm.reset();}else{toast.success(response.data.message,{position:\"top-center\",theme:\"colored\",hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,autoClose:3000});PasswordBtn.innerHTML=\"SET PASSWORD\";_this.setState({userRedirect:false});}}).catch(function(error){toast.error('Verification not Successfully',{position:\"top-center\",theme:\"colored\",hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,autoClose:3000});PasswordBtn.innerHTML=\"SET PASSWORD\";_this.setState({userRedirect:false});});}event.preventDefault();};_this.state={UserID:sessionStorage.getItem('UserID'),userRedirect:false,NewPassword:\"\",NewConfirmPassword:\"\"};return _this;}_createClass(ForgotPasswordSet,[{key:\"onUserRedirect\",value:function onUserRedirect(){if(this.state.userRedirect===true){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(Container,{className:\"p-5 d-flex justify-content-center\",children:[/*#__PURE__*/_jsx(Row,{className:\"LoginCard shadow-sm\",children:/*#__PURE__*/_jsx(Col,{xl:10,lg:10,md:10,sm:12,xs:12,children:/*#__PURE__*/_jsxs(Form,{id:\"ConfirmPasswordForm\",onSubmit:this.onPasswordSetFromSubmit,children:[/*#__PURE__*/_jsx(\"img\",{className:\"LoginCardPorzotokImg mt-4\",src:Porzotok,alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{onChange:this.NewPasswordOnChange,type:\"Password\",className:\"form-control placeholder-text\",placeholder:\"Enter new Password\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{onChange:this.NewConfirmPasswordOnChange,type:\"Password\",className:\"form-control placeholder-text\",placeholder:\"Enter Confirm Password\"})}),/*#__PURE__*/_jsx(Button,{id:\"PasswordBtn\",type:\"submit\",className:\"btn SendBtnColorText mb-5 btn-block\",children:\"SET PASSWORD\"})]})})}),/*#__PURE__*/_jsx(ToastContainer,{})]}),this.onUserRedirect()]});}}]);return ForgotPasswordSet;}(Component);export default ForgotPasswordSet;","map":{"version":3,"sources":["D:/PorzotokFrontend/src/component/login/ForgotPasswordSet.js"],"names":["React","Component","Fragment","Button","Col","Container","Form","Row","Porzotok","Redirect","toast","ToastContainer","axios","ApiURL","ForgotPasswordSet","NewPasswordOnChange","event","NewPassword","target","value","setState","NewConfirmPasswordOnChange","NewConfirmPassword","onPasswordSetFromSubmit","UserID","state","PasswordBtn","document","getElementById","ConfirmPasswordForm","length","error","position","theme","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","innerHTML","MyFormData","FormData","append","put","ResetConfirmPasswordSet","then","response","data","success","userRedirect","reset","message","catch","preventDefault","sessionStorage","getItem","onUserRedirect"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\nimport Porzotok from \"../../asset/images/Porzotok.png\";\nimport {Redirect} from \"react-router-dom\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport axios from \"axios\";\nimport ApiURL from \"../../api/ApiURL\";\n\nclass ForgotPasswordSet extends Component {\n    constructor() {\n        super();\n        this.state={\n            UserID: sessionStorage.getItem('UserID'),\n            userRedirect:false,\n            NewPassword:\"\",\n            NewConfirmPassword:\"\",\n        }\n    }\n\n    onUserRedirect(){\n        if(this.state.userRedirect===true){\n            return(\n                <Redirect to=\"/\"/>\n            )\n        }\n    }\n\n    NewPasswordOnChange=(event)=>{\n        let NewPassword=event.target.value;\n        this.setState(({NewPassword:NewPassword}));\n    }\n\n    NewConfirmPasswordOnChange=(event)=>{\n        let NewConfirmPassword=event.target.value;\n        this.setState(({NewConfirmPassword:NewConfirmPassword}));\n    }\n\n    onPasswordSetFromSubmit=(event)=> {\n        let UserID = this.state.UserID;\n        let NewPassword = this.state.NewPassword;\n        let NewConfirmPassword = this.state.NewConfirmPassword;\n        let PasswordBtn = document.getElementById('PasswordBtn');\n        let ConfirmPasswordForm = document.getElementById('ConfirmPasswordForm');\n\n        if (NewPassword.length === 0) {\n            toast.error('New Password is Required !', {\n                position: \"top-center\",\n                theme: \"colored\",\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n        else if (NewPassword!==NewConfirmPassword) {\n            toast.error('Confirm Password Not Match !', {\n                position: \"top-center\",\n                theme: \"colored\",\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n        else {\n            PasswordBtn.innerHTML = \"Verifying...\";\n            let MyFormData = new FormData();\n            // MyFormData.append(\"user_id\", UserID);\n            MyFormData.append(\"new_password\", NewPassword);\n\n            axios.put(ApiURL.ResetConfirmPasswordSet+UserID+'/',MyFormData).then((response)=> {\n                if (response.data.error===false) {\n                    toast.success('New Password Set Successfully', {\n                        position: \"top-center\",\n                        theme: \"colored\",\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        autoClose: 3000,\n                    });\n                    this.setState({userRedirect:true});\n                    ConfirmPasswordForm.reset();\n                }\n                else{\n                    toast.success(response.data.message, {\n                        position: \"top-center\",\n                        theme: \"colored\",\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        autoClose: 3000,\n                    });\n                    PasswordBtn.innerHTML = \"SET PASSWORD\";\n                    this.setState({userRedirect:false});\n                }\n            }).catch((error)=> {\n                toast.error('Verification not Successfully', {\n                    position: \"top-center\",\n                    theme: \"colored\",\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    autoClose: 3000,\n                });\n                PasswordBtn.innerHTML = \"SET PASSWORD\";\n                this.setState({userRedirect:false});\n            })\n        }\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Container className=\"p-5 d-flex justify-content-center\">\n                    <Row className=\"LoginCard shadow-sm\">\n                        <Col xl={10} lg={10} md={10} sm={12} xs={12}>\n                            <Form id=\"ConfirmPasswordForm\" onSubmit={this.onPasswordSetFromSubmit}>\n                                <img className=\"LoginCardPorzotokImg mt-4\" src={Porzotok} alt=\"\"/>\n                                <div className=\"form-group\">\n                                    <input onChange={this.NewPasswordOnChange} type=\"Password\" className=\"form-control placeholder-text\" placeholder=\"Enter new Password\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input onChange={this.NewConfirmPasswordOnChange} type=\"Password\" className=\"form-control placeholder-text\" placeholder=\"Enter Confirm Password\"/>\n                                </div>\n                                <Button id=\"PasswordBtn\" type=\"submit\" className=\"btn SendBtnColorText mb-5 btn-block\">SET PASSWORD</Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <ToastContainer/>\n                </Container>\n                {this.onUserRedirect()}\n            </Fragment>\n        );\n    }\n}\n\nexport default ForgotPasswordSet;"]},"metadata":{},"sourceType":"module"}