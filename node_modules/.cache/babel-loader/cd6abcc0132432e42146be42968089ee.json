{"ast":null,"code":"'use strict';\n\nmodule.exports = interrupt;\n\nfunction interrupt(interruptors, tokenizers, ctx, parameters) {\n  var length = interruptors.length;\n  var index = -1;\n  var interruptor;\n  var config;\n\n  while (++index < length) {\n    interruptor = interruptors[index];\n    config = interruptor[1] || {};\n\n    if (config.pedantic !== undefined && config.pedantic !== ctx.options.pedantic) {\n      continue;\n    }\n\n    if (config.commonmark !== undefined && config.commonmark !== ctx.options.commonmark) {\n      continue;\n    }\n\n    if (tokenizers[interruptor[0]].apply(ctx, parameters)) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/remark-parse/lib/util/interrupt.js"],"names":["module","exports","interrupt","interruptors","tokenizers","ctx","parameters","length","index","interruptor","config","pedantic","undefined","options","commonmark","apply"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,SAASA,SAAT,CAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,GAA7C,EAAkDC,UAAlD,EAA8D;AAC5D,MAAIC,MAAM,GAAGJ,YAAY,CAACI,MAA1B;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,WAAJ;AACA,MAAIC,MAAJ;;AAEA,SAAO,EAAEF,KAAF,GAAUD,MAAjB,EAAyB;AACvBE,IAAAA,WAAW,GAAGN,YAAY,CAACK,KAAD,CAA1B;AACAE,IAAAA,MAAM,GAAGD,WAAW,CAAC,CAAD,CAAX,IAAkB,EAA3B;;AAEA,QACEC,MAAM,CAACC,QAAP,KAAoBC,SAApB,IACAF,MAAM,CAACC,QAAP,KAAoBN,GAAG,CAACQ,OAAJ,CAAYF,QAFlC,EAGE;AACA;AACD;;AAED,QACED,MAAM,CAACI,UAAP,KAAsBF,SAAtB,IACAF,MAAM,CAACI,UAAP,KAAsBT,GAAG,CAACQ,OAAJ,CAAYC,UAFpC,EAGE;AACA;AACD;;AAED,QAAIV,UAAU,CAACK,WAAW,CAAC,CAAD,CAAZ,CAAV,CAA2BM,KAA3B,CAAiCV,GAAjC,EAAsCC,UAAtC,CAAJ,EAAuD;AACrD,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = interrupt\r\n\r\nfunction interrupt(interruptors, tokenizers, ctx, parameters) {\r\n  var length = interruptors.length\r\n  var index = -1\r\n  var interruptor\r\n  var config\r\n\r\n  while (++index < length) {\r\n    interruptor = interruptors[index]\r\n    config = interruptor[1] || {}\r\n\r\n    if (\r\n      config.pedantic !== undefined &&\r\n      config.pedantic !== ctx.options.pedantic\r\n    ) {\r\n      continue\r\n    }\r\n\r\n    if (\r\n      config.commonmark !== undefined &&\r\n      config.commonmark !== ctx.options.commonmark\r\n    ) {\r\n      continue\r\n    }\r\n\r\n    if (tokenizers[interruptor[0]].apply(ctx, parameters)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n"]},"metadata":{},"sourceType":"script"}