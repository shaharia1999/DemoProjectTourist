{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = filterCountries;\n\nfunction filterCountries(query, countries, country) {\n  if (query === '' || query === '+') {\n    var _filteredCountries = countries.filter(function (value) {\n      return value.isoCode !== country.isoCode;\n    });\n\n    _filteredCountries.unshift(country);\n\n    return _filteredCountries;\n  }\n\n  var queryToLower = query.toLowerCase();\n  var isFilteredCountry = false;\n  var filteredCountries = countries.filter(function (value) {\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(query)) {\n      var index = value.countryCode.toString().indexOf(queryToLower);\n\n      if (index === 0 || index === 1) {\n        if (value.isoCode === country.isoCode) {\n          isFilteredCountry = true;\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    if (value.country.toLowerCase().indexOf(queryToLower) !== -1 || value.isoCode.indexOf(queryToLower) !== -1) {\n      if (value.isoCode === country.isoCode) {\n        isFilteredCountry = true;\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }) || [];\n\n  if (isFilteredCountry) {\n    filteredCountries.unshift(country);\n  }\n\n  return filteredCountries;\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/PhoneInput/countriesDropdown/helpers/filterCountries.js"],"names":["Object","defineProperty","exports","value","filterCountries","query","countries","country","_filteredCountries","filter","isoCode","unshift","queryToLower","toLowerCase","isFilteredCountry","filteredCountries","isNaN","index","countryCode","toString","indexOf"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,eAArB;;AAEA,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,SAAhC,EAA2CC,OAA3C,EAAoD;AAClD,MAAIF,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC;AACjC,QAAIG,kBAAkB,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAUN,KAAV,EAAiB;AACzD,aAAOA,KAAK,CAACO,OAAN,KAAkBH,OAAO,CAACG,OAAjC;AACD,KAFwB,CAAzB;;AAIAF,IAAAA,kBAAkB,CAACG,OAAnB,CAA2BJ,OAA3B;;AAEA,WAAOC,kBAAP;AACD;;AAED,MAAII,YAAY,GAAGP,KAAK,CAACQ,WAAN,EAAnB;AACA,MAAIC,iBAAiB,GAAG,KAAxB;AACA,MAAIC,iBAAiB,GAAGT,SAAS,CAACG,MAAV,CAAiB,UAAUN,KAAV,EAAiB;AACxD;AACA,QAAI,CAACa,KAAK,CAACX,KAAD,CAAV,EAAmB;AACjB,UAAIY,KAAK,GAAGd,KAAK,CAACe,WAAN,CAAkBC,QAAlB,GAA6BC,OAA7B,CAAqCR,YAArC,CAAZ;;AAEA,UAAIK,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAA7B,EAAgC;AAC9B,YAAId,KAAK,CAACO,OAAN,KAAkBH,OAAO,CAACG,OAA9B,EAAuC;AACrCI,UAAAA,iBAAiB,GAAG,IAApB;AACA,iBAAO,KAAP;AACD;;AAED,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;;AAED,QAAIX,KAAK,CAACI,OAAN,CAAcM,WAAd,GAA4BO,OAA5B,CAAoCR,YAApC,MAAsD,CAAC,CAAvD,IAA4DT,KAAK,CAACO,OAAN,CAAcU,OAAd,CAAsBR,YAAtB,MAAwC,CAAC,CAAzG,EAA4G;AAC1G,UAAIT,KAAK,CAACO,OAAN,KAAkBH,OAAO,CAACG,OAA9B,EAAuC;AACrCI,QAAAA,iBAAiB,GAAG,IAApB;AACA,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GA3BuB,KA2BlB,EA3BN;;AA6BA,MAAIA,iBAAJ,EAAuB;AACrBC,IAAAA,iBAAiB,CAACJ,OAAlB,CAA0BJ,OAA1B;AACD;;AAED,SAAOQ,iBAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = filterCountries;\n\nfunction filterCountries(query, countries, country) {\n  if (query === '' || query === '+') {\n    var _filteredCountries = countries.filter(function (value) {\n      return value.isoCode !== country.isoCode;\n    });\n\n    _filteredCountries.unshift(country);\n\n    return _filteredCountries;\n  }\n\n  var queryToLower = query.toLowerCase();\n  var isFilteredCountry = false;\n  var filteredCountries = countries.filter(function (value) {\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(query)) {\n      var index = value.countryCode.toString().indexOf(queryToLower);\n\n      if (index === 0 || index === 1) {\n        if (value.isoCode === country.isoCode) {\n          isFilteredCountry = true;\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    if (value.country.toLowerCase().indexOf(queryToLower) !== -1 || value.isoCode.indexOf(queryToLower) !== -1) {\n      if (value.isoCode === country.isoCode) {\n        isFilteredCountry = true;\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }) || [];\n\n  if (isFilteredCountry) {\n    filteredCountries.unshift(country);\n  }\n\n  return filteredCountries;\n}"]},"metadata":{},"sourceType":"script"}