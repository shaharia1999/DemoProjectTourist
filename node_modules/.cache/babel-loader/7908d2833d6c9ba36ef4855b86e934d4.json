{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getStartRowKey;\n\nvar _getLastRowSelection = _interopRequireDefault(require(\"./getLastRowSelection\"));\n\nfunction getStartRowKey(params) {\n  var isMultiple = params.isMultiple,\n      rowKeyValue = params.rowKeyValue,\n      indexes = params.indexes,\n      lastSelectedRowKey = params.lastSelectedRowKey;\n  var fromRowKey = rowKeyValue;\n\n  if (isMultiple) {\n    fromRowKey = (0, _getLastRowSelection[\"default\"])(indexes, lastSelectedRowKey) || rowKeyValue;\n  }\n\n  return fromRowKey;\n}","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/node_modules/react-rainbow-components/components/Table/helpers/selector/getStartRowKey.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getStartRowKey","_getLastRowSelection","params","isMultiple","rowKeyValue","indexes","lastSelectedRowKey","fromRowKey"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,cAArB;;AAEA,IAAIC,oBAAoB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAjD;;AAEA,SAASK,cAAT,CAAwBE,MAAxB,EAAgC;AAC9B,MAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB;AAAA,MACIC,WAAW,GAAGF,MAAM,CAACE,WADzB;AAAA,MAEIC,OAAO,GAAGH,MAAM,CAACG,OAFrB;AAAA,MAGIC,kBAAkB,GAAGJ,MAAM,CAACI,kBAHhC;AAIA,MAAIC,UAAU,GAAGH,WAAjB;;AAEA,MAAID,UAAJ,EAAgB;AACdI,IAAAA,UAAU,GAAG,CAAC,GAAGN,oBAAoB,CAAC,SAAD,CAAxB,EAAqCI,OAArC,EAA8CC,kBAA9C,KAAqEF,WAAlF;AACD;;AAED,SAAOG,UAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getStartRowKey;\n\nvar _getLastRowSelection = _interopRequireDefault(require(\"./getLastRowSelection\"));\n\nfunction getStartRowKey(params) {\n  var isMultiple = params.isMultiple,\n      rowKeyValue = params.rowKeyValue,\n      indexes = params.indexes,\n      lastSelectedRowKey = params.lastSelectedRowKey;\n  var fromRowKey = rowKeyValue;\n\n  if (isMultiple) {\n    fromRowKey = (0, _getLastRowSelection[\"default\"])(indexes, lastSelectedRowKey) || rowKeyValue;\n  }\n\n  return fromRowKey;\n}"]},"metadata":{},"sourceType":"script"}