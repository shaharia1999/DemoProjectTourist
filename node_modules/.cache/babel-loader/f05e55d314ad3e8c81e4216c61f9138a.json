{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = findExpandableNodesAtLevel;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nfunction findExpandableNodesAtLevel(nodes, level) {\n  return nodes.reduce(function (list, node) {\n    if (node.hasChildren && !node.isExpanded && node.level === level) {\n      return [].concat((0, _toConsumableArray2[\"default\"])(list), [node]);\n    }\n\n    return list;\n  }, []);\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/Tree/helpers/findExpandableNodesAtLevel.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","findExpandableNodesAtLevel","_toConsumableArray2","nodes","level","reduce","list","node","hasChildren","isExpanded","concat"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,0BAArB;;AAEA,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,SAASK,0BAAT,CAAoCE,KAApC,EAA2CC,KAA3C,EAAkD;AAChD,SAAOD,KAAK,CAACE,MAAN,CAAa,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACxC,QAAIA,IAAI,CAACC,WAAL,IAAoB,CAACD,IAAI,CAACE,UAA1B,IAAwCF,IAAI,CAACH,KAAL,KAAeA,KAA3D,EAAkE;AAChE,aAAO,GAAGM,MAAH,CAAU,CAAC,GAAGR,mBAAmB,CAAC,SAAD,CAAvB,EAAoCI,IAApC,CAAV,EAAqD,CAACC,IAAD,CAArD,CAAP;AACD;;AAED,WAAOD,IAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = findExpandableNodesAtLevel;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nfunction findExpandableNodesAtLevel(nodes, level) {\n  return nodes.reduce(function (list, node) {\n    if (node.hasChildren && !node.isExpanded && node.level === level) {\n      return [].concat((0, _toConsumableArray2[\"default\"])(list), [node]);\n    }\n\n    return list;\n  }, []);\n}"]},"metadata":{},"sourceType":"script"}