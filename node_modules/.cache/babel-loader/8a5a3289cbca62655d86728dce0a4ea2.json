{"ast":null,"code":"'use strict';\n\nmodule.exports = thematicBreak;\nvar tab = '\\t';\nvar lineFeed = '\\n';\nvar space = ' ';\nvar asterisk = '*';\nvar dash = '-';\nvar underscore = '_';\nvar maxCount = 3;\n\nfunction thematicBreak(eat, value, silent) {\n  var index = -1;\n  var length = value.length + 1;\n  var subvalue = '';\n  var character;\n  var marker;\n  var markerCount;\n  var queue;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== tab && character !== space) {\n      break;\n    }\n\n    subvalue += character;\n  }\n\n  if (character !== asterisk && character !== dash && character !== underscore) {\n    return;\n  }\n\n  marker = character;\n  subvalue += character;\n  markerCount = 1;\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === marker) {\n      markerCount++;\n      subvalue += queue + marker;\n      queue = '';\n    } else if (character === space) {\n      queue += character;\n    } else if (markerCount >= maxCount && (!character || character === lineFeed)) {\n      subvalue += queue;\n\n      if (silent) {\n        return true;\n      }\n\n      return eat(subvalue)({\n        type: 'thematicBreak'\n      });\n    } else {\n      return;\n    }\n  }\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/remark-parse/lib/tokenize/thematic-break.js"],"names":["module","exports","thematicBreak","tab","lineFeed","space","asterisk","dash","underscore","maxCount","eat","value","silent","index","length","subvalue","character","marker","markerCount","queue","charAt","type"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEA,IAAIC,GAAG,GAAG,IAAV;AACA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,IAAI,GAAG,GAAX;AACA,IAAIC,UAAU,GAAG,GAAjB;AAEA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,SAASP,aAAT,CAAuBQ,GAAvB,EAA4BC,KAA5B,EAAmCC,MAAnC,EAA2C;AACzC,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAM,GAAGH,KAAK,CAACG,MAAN,GAAe,CAA5B;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,SAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,KAAJ;;AAEA,SAAO,EAAEN,KAAF,GAAUC,MAAjB,EAAyB;AACvBE,IAAAA,SAAS,GAAGL,KAAK,CAACS,MAAN,CAAaP,KAAb,CAAZ;;AAEA,QAAIG,SAAS,KAAKb,GAAd,IAAqBa,SAAS,KAAKX,KAAvC,EAA8C;AAC5C;AACD;;AAEDU,IAAAA,QAAQ,IAAIC,SAAZ;AACD;;AAED,MACEA,SAAS,KAAKV,QAAd,IACAU,SAAS,KAAKT,IADd,IAEAS,SAAS,KAAKR,UAHhB,EAIE;AACA;AACD;;AAEDS,EAAAA,MAAM,GAAGD,SAAT;AACAD,EAAAA,QAAQ,IAAIC,SAAZ;AACAE,EAAAA,WAAW,GAAG,CAAd;AACAC,EAAAA,KAAK,GAAG,EAAR;;AAEA,SAAO,EAAEN,KAAF,GAAUC,MAAjB,EAAyB;AACvBE,IAAAA,SAAS,GAAGL,KAAK,CAACS,MAAN,CAAaP,KAAb,CAAZ;;AAEA,QAAIG,SAAS,KAAKC,MAAlB,EAA0B;AACxBC,MAAAA,WAAW;AACXH,MAAAA,QAAQ,IAAII,KAAK,GAAGF,MAApB;AACAE,MAAAA,KAAK,GAAG,EAAR;AACD,KAJD,MAIO,IAAIH,SAAS,KAAKX,KAAlB,EAAyB;AAC9Bc,MAAAA,KAAK,IAAIH,SAAT;AACD,KAFM,MAEA,IACLE,WAAW,IAAIT,QAAf,KACC,CAACO,SAAD,IAAcA,SAAS,KAAKZ,QAD7B,CADK,EAGL;AACAW,MAAAA,QAAQ,IAAII,KAAZ;;AAEA,UAAIP,MAAJ,EAAY;AACV,eAAO,IAAP;AACD;;AAED,aAAOF,GAAG,CAACK,QAAD,CAAH,CAAc;AAACM,QAAAA,IAAI,EAAE;AAAP,OAAd,CAAP;AACD,KAXM,MAWA;AACL;AACD;AACF;AACF","sourcesContent":["'use strict'\n\nmodule.exports = thematicBreak\n\nvar tab = '\\t'\nvar lineFeed = '\\n'\nvar space = ' '\nvar asterisk = '*'\nvar dash = '-'\nvar underscore = '_'\n\nvar maxCount = 3\n\nfunction thematicBreak(eat, value, silent) {\n  var index = -1\n  var length = value.length + 1\n  var subvalue = ''\n  var character\n  var marker\n  var markerCount\n  var queue\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character !== tab && character !== space) {\n      break\n    }\n\n    subvalue += character\n  }\n\n  if (\n    character !== asterisk &&\n    character !== dash &&\n    character !== underscore\n  ) {\n    return\n  }\n\n  marker = character\n  subvalue += character\n  markerCount = 1\n  queue = ''\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character === marker) {\n      markerCount++\n      subvalue += queue + marker\n      queue = ''\n    } else if (character === space) {\n      queue += character\n    } else if (\n      markerCount >= maxCount &&\n      (!character || character === lineFeed)\n    ) {\n      subvalue += queue\n\n      if (silent) {\n        return true\n      }\n\n      return eat(subvalue)({type: 'thematicBreak'})\n    } else {\n      return\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}