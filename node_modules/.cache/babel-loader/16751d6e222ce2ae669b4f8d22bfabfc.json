{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = ButtonOption;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\n\nvar _context = require(\"../ButtonGroupPicker/context\");\n\nvar _hiddenElement = _interopRequireDefault(require(\"../Structural/hiddenElement\"));\n\nvar _styled = require(\"./styled\");\n\nvar _isOptionSelected = _interopRequireDefault(require(\"./helpers/isOptionSelected\"));\n\nvar _hooks = require(\"../../libs/hooks\");\n/**\r\n * @category Form\r\n */\n\n\nfunction ButtonOption(props) {\n  var inputId = (0, _hooks.useUniqueIdentifier)('button-option');\n  var className = props.className,\n      style = props.style,\n      name = props.name,\n      label = props.label,\n      disabled = props.disabled,\n      onClick = props.onClick;\n\n  var _useContext = (0, _react.useContext)(_context.ButtonGroupPickerContext),\n      type = _useContext.type,\n      values = _useContext.values,\n      contextName = _useContext.name,\n      onChange = _useContext.onChange,\n      ariaDescribedBy = _useContext.ariaDescribedBy,\n      size = _useContext.size,\n      variant = _useContext.variant;\n\n  var checked = (0, _isOptionSelected[\"default\"])(values, name);\n\n  var handleClick = function handleClick() {\n    return onClick({\n      isSelected: checked\n    });\n  };\n\n  var isShaded = variant === 'shaded';\n  return /*#__PURE__*/_react[\"default\"].createElement(_styled.StyledLabel, {\n    className: className,\n    style: style,\n    onClick: handleClick,\n    checked: checked,\n    htmlFor: inputId,\n    variant: variant\n  }, /*#__PURE__*/_react[\"default\"].createElement(_hiddenElement[\"default\"], {\n    id: inputId,\n    as: \"input\",\n    type: type,\n    name: contextName,\n    value: name,\n    \"aria-describedby\": ariaDescribedBy,\n    checked: checked,\n    onChange: onChange,\n    disabled: disabled\n  }), /*#__PURE__*/_react[\"default\"].createElement(_styled.StyledText, {\n    size: size,\n    disabled: disabled,\n    checked: checked,\n    variant: variant\n  }, label), /*#__PURE__*/_react[\"default\"].createElement(_RenderIf[\"default\"], {\n    isTrue: isShaded\n  }, /*#__PURE__*/_react[\"default\"].createElement(_styled.StyledDivider, null)));\n}\n\nButtonOption.propTypes = {\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with a custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** It is a unique value that identifies the picker option. */\n  name: _propTypes[\"default\"].string,\n\n  /** The content to be displayed inside the ButtonOption */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies whether this button should be displayed in a disabled state. Disabled buttons can't be clicked. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func\n};\nButtonOption.defaultProps = {\n  className: undefined,\n  style: undefined,\n  name: undefined,\n  label: undefined,\n  disabled: false,\n  onClick: function onClick() {}\n};","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/react-rainbow-components/components/ButtonOption/index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","ButtonOption","_react","_propTypes","_RenderIf","_context","_hiddenElement","_styled","_isOptionSelected","_hooks","props","inputId","useUniqueIdentifier","className","style","name","label","disabled","onClick","_useContext","useContext","ButtonGroupPickerContext","type","values","contextName","onChange","ariaDescribedBy","size","variant","checked","handleClick","isSelected","isShaded","createElement","StyledLabel","htmlFor","id","as","StyledText","isTrue","StyledDivider","propTypes","string","object","oneOfType","node","bool","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = ButtonOption;\r\n\r\nvar _react = _interopRequireWildcard(require(\"react\"));\r\n\r\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\r\n\r\nvar _RenderIf = _interopRequireDefault(require(\"../RenderIf\"));\r\n\r\nvar _context = require(\"../ButtonGroupPicker/context\");\r\n\r\nvar _hiddenElement = _interopRequireDefault(require(\"../Structural/hiddenElement\"));\r\n\r\nvar _styled = require(\"./styled\");\r\n\r\nvar _isOptionSelected = _interopRequireDefault(require(\"./helpers/isOptionSelected\"));\r\n\r\nvar _hooks = require(\"../../libs/hooks\");\r\n\r\n/**\r\n * @category Form\r\n */\r\nfunction ButtonOption(props) {\r\n  var inputId = (0, _hooks.useUniqueIdentifier)('button-option');\r\n  var className = props.className,\r\n      style = props.style,\r\n      name = props.name,\r\n      label = props.label,\r\n      disabled = props.disabled,\r\n      onClick = props.onClick;\r\n\r\n  var _useContext = (0, _react.useContext)(_context.ButtonGroupPickerContext),\r\n      type = _useContext.type,\r\n      values = _useContext.values,\r\n      contextName = _useContext.name,\r\n      onChange = _useContext.onChange,\r\n      ariaDescribedBy = _useContext.ariaDescribedBy,\r\n      size = _useContext.size,\r\n      variant = _useContext.variant;\r\n\r\n  var checked = (0, _isOptionSelected[\"default\"])(values, name);\r\n\r\n  var handleClick = function handleClick() {\r\n    return onClick({\r\n      isSelected: checked\r\n    });\r\n  };\r\n\r\n  var isShaded = variant === 'shaded';\r\n  return /*#__PURE__*/_react[\"default\"].createElement(_styled.StyledLabel, {\r\n    className: className,\r\n    style: style,\r\n    onClick: handleClick,\r\n    checked: checked,\r\n    htmlFor: inputId,\r\n    variant: variant\r\n  }, /*#__PURE__*/_react[\"default\"].createElement(_hiddenElement[\"default\"], {\r\n    id: inputId,\r\n    as: \"input\",\r\n    type: type,\r\n    name: contextName,\r\n    value: name,\r\n    \"aria-describedby\": ariaDescribedBy,\r\n    checked: checked,\r\n    onChange: onChange,\r\n    disabled: disabled\r\n  }), /*#__PURE__*/_react[\"default\"].createElement(_styled.StyledText, {\r\n    size: size,\r\n    disabled: disabled,\r\n    checked: checked,\r\n    variant: variant\r\n  }, label), /*#__PURE__*/_react[\"default\"].createElement(_RenderIf[\"default\"], {\r\n    isTrue: isShaded\r\n  }, /*#__PURE__*/_react[\"default\"].createElement(_styled.StyledDivider, null)));\r\n}\r\n\r\nButtonOption.propTypes = {\r\n  /** A CSS class for the outer element, in addition to the component's base classes. */\r\n  className: _propTypes[\"default\"].string,\r\n\r\n  /** An object with a custom style applied to the outer element. */\r\n  style: _propTypes[\"default\"].object,\r\n\r\n  /** It is a unique value that identifies the picker option. */\r\n  name: _propTypes[\"default\"].string,\r\n\r\n  /** The content to be displayed inside the ButtonOption */\r\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\r\n\r\n  /** Specifies whether this button should be displayed in a disabled state. Disabled buttons can't be clicked. */\r\n  disabled: _propTypes[\"default\"].bool,\r\n\r\n  /** The action triggered when the element is clicked. */\r\n  onClick: _propTypes[\"default\"].func\r\n};\r\nButtonOption.defaultProps = {\r\n  className: undefined,\r\n  style: undefined,\r\n  name: undefined,\r\n  label: undefined,\r\n  disabled: false,\r\n  onClick: function onClick() {}\r\n};"]},"metadata":{},"sourceType":"script"}