{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.placeDetailsShape = exports.predictionShape = exports.searchOptionsShape = exports.mapViewportCoordinates = exports.mapCoordinates = exports.aspectsRating = void 0;\n\nvar _propTypes = require(\"prop-types\");\n/* eslint-disable id-length */\n\n/* eslint-disable import/prefer-default-export */\n\n\nvar aspectsRating = _propTypes.PropTypes.shape({\n  /**\n   * The rating of this aspect. For individual reviews this is an\n   * integer from 0 to 3. For aggregated ratings of a place this\n   * is an integer from 0 to 30.\n   */\n  rating: _propTypes.PropTypes.number,\n\n  /**\n   * The aspect type, e.g. 'food', 'decor', 'service', 'overall'.\n   */\n  type: _propTypes.PropTypes.string\n});\n\nexports.aspectsRating = aspectsRating;\n\nvar mapCoordinates = _propTypes.PropTypes.shape({\n  lat: _propTypes.PropTypes.number.isRequired,\n  lng: _propTypes.PropTypes.number.isRequired\n});\n\nexports.mapCoordinates = mapCoordinates;\n\nvar mapViewportCoordinates = _propTypes.PropTypes.shape({\n  south: _propTypes.PropTypes.number.isRequired,\n  west: _propTypes.PropTypes.number.isRequired,\n  north: _propTypes.PropTypes.number.isRequired,\n  east: _propTypes.PropTypes.number.isRequired\n});\n\nexports.mapViewportCoordinates = mapViewportCoordinates;\n\nvar searchOptionsShape = _propTypes.PropTypes.shape({\n  /**\n   * Bounds for prediction biasing. Predictions will be\n   * biased towards, but not restricted to, the given bounds.\n   * Both location and radius will be ignored if bounds is set.\n   */\n  bounds: _propTypes.PropTypes.shape({\n    sw: _propTypes.PropTypes.shape({\n      latitude: _propTypes.PropTypes.number.isRequired,\n      longitude: _propTypes.PropTypes.number.isRequired\n    }),\n    ne: _propTypes.PropTypes.shape({\n      latitude: _propTypes.PropTypes.number.isRequired,\n      longitude: _propTypes.PropTypes.number.isRequired\n    })\n  }),\n\n  /**\n   * The country restrictions in ISO 3166-1 Alpha-2 country code (case insensitive).\n   * Up to five countries\n   * E.g.\n   *      ['us', 'ca'] to search places within United States and Canada only\n   *      'us' to search places within United States only\n   */\n  country: _propTypes.PropTypes.oneOfType([_propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string), _propTypes.PropTypes.string]),\n\n  /**\n   * Location for prediction biasing. Predictions will be biased\n   * towards the given location and radius. Alternatively, bounds\n   * can be used.\n   */\n  location: _propTypes.PropTypes.shape({\n    latitude: _propTypes.PropTypes.number.isRequired,\n    longitude: _propTypes.PropTypes.number.isRequired\n  }),\n\n  /**\n   * The radius of the area used for prediction biasing. The radius is\n   * specified in meters, and must always be accompanied by a location\n   * property. Alternatively, bounds can be used.\n   */\n  radius: _propTypes.PropTypes.number,\n\n  /**\n   * The types of predictions to be returned. Four types are supported:\n   * 'establishment' for businesses, 'geocode' for addresses, '(regions)'\n   * for administrative regions and '(cities)' for localities. If nothing\n   * is specified, all types are returned.\n   */\n  types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string)\n});\n\nexports.searchOptionsShape = searchOptionsShape;\n\nvar predictionShape = _propTypes.PropTypes.shape({\n  /**\n   * This is the unformatted version of the query suggested by Google Places service.\n   */\n  description: _propTypes.PropTypes.string,\n\n  /**\n   * A set of substrings in the place's description that match elements in the user's\n   * input, suitable for use in highlighting those substrings. Each substring is\n   * identified by an offset and a length, expressed in unicode characters.\n   */\n  matched_substrings: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    length: _propTypes.PropTypes.number,\n    offset: _propTypes.PropTypes.number\n  })),\n\n  /**\n   * A place ID that can be used to retrieve details about this place using the place\n   * details service.\n   */\n  place_id: _propTypes.PropTypes.string,\n  structured_formatting: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * Contains the main text of a prediction, usually the name of the place.\n     */\n    main_text: _propTypes.PropTypes.string,\n\n    /**\n     * Contains an array with offset value and length. These describe the\n     * location of the entered term in the prediction result text, so that\n     * the term can be highlighted if desired.\n     */\n    main_text_matched_substrings: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n      length: _propTypes.PropTypes.number,\n      offset: _propTypes.PropTypes.number\n    })),\n\n    /**\n     * Contains the secondary text of a prediction, usually the location of the place.\n     */\n    secondary_text: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * Information about individual terms in the above description,\n   * from most to least specific.\n   * For example, \"Taco Bell\", \"Willitis\", and \"CA\".\n   */\n  terms: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    offset: _propTypes.PropTypes.number,\n    value: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * An array of types that the prediction belongs to,\n   * for example 'establishment' or 'geocode'.\n   */\n  types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string)\n});\n\nexports.predictionShape = predictionShape;\n\nvar placeDetailsShape = _propTypes.PropTypes.shape({\n  /**\n   * The collection of address components for this Place's location.\n   */\n  address_components: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * The full text of the address component\n     */\n    long_name: _propTypes.PropTypes.string,\n\n    /**\n     * The abbreviated, short text of the given address component\n     */\n    short_name: _propTypes.PropTypes.string,\n\n    /**\n     * An array of strings denoting the type of this\n     * address component. A list of valid types can be found here\n     */\n    types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string)\n  })),\n\n  /**\n   * The rated aspects of this Place, based on Google and Zagat user\n   * reviews. The ratings are on a scale of 0 to 30.\n   */\n  aspects: _propTypes.PropTypes.arrayOf(aspectsRating),\n\n  /**\n   * The Place's full address.\n   */\n  formatted_address: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's phone number, formatted according to the\n   * number's regional convention.\n   */\n  formatted_phone_number: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's geometry-related information.\n   */\n  geometry: _propTypes.PropTypes.shape({\n    /**\n     * The Place's position.\n     */\n    location: mapCoordinates,\n\n    /**\n     * The preferred viewport when displaying this Place on a map.\n     * This property will be null if the preferred viewport for the\n     * Place is not known.\n     */\n    viewport: mapViewportCoordinates\n  }),\n\n  /**\n   * Attribution text to be displayed for this Place result.\n   */\n  html_attributions: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string),\n\n  /**\n   * URL to an image resource that can be used to represent this\n   * Place's category.\n   */\n  icon: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's phone number in international format.\n   * International format includes the country code, and\n   * is prefixed with the plus (+) sign.\n   */\n  international_phone_number: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's name. Note: In the case of user entered Places,\n   * this is the raw text, as typed by the user. Please exercise\n   * caution when using this data, as malicious users may try to\n   * use it as a vector for code injection attacks\n   * (See http://en.wikipedia.org/wiki/Code_injection).\n   */\n  name: _propTypes.PropTypes.string,\n\n  /**\n   * A flag indicating whether the Place is permanently closed.\n   * If the place is not permanently closed, the flag is not present\n   * in search or details responses.\n   */\n  permanently_closed: _propTypes.PropTypes.bool,\n\n  /**\n   * Photos of this Place. The collection will contain up to ten\n   * photos.\n   */\n  photos: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * The height of the photo in pixels.\n     */\n    height: _propTypes.PropTypes.number,\n\n    /**\n     * The width of the photo in pixels.\n     */\n    width: _propTypes.PropTypes.number,\n\n    /**\n     * Contains any required attributions. This field will always\n     * be present, but may be empty.\n     */\n    html_attributions: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string),\n\n    /**\n     * A string used to identify the photo when you perform a Photo request.\n     */\n    photo_reference: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * A unique identifier for a place.\n   * */\n  place_id: _propTypes.PropTypes.string,\n\n  /**\n   * The price level of the Place, on a scale of 0 to 4. Price levels\n   * are interpreted as follows:\n   * 0 - Free\n   * 1 - Inexpensive\n   * 2 - Moderate\n   * 3 - Expensive\n   * 4 - Very Expensive\n   */\n  price_level: _propTypes.PropTypes.number,\n\n  /**\n   * A rating, between 1.0 to 5.0, based on user reviews of this Place.\n   */\n  rating: _propTypes.PropTypes.number,\n\n  /**\n   * A list of reviews of this Place.\n   */\n  reviews: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * The aspects rated by the review. The ratings on a\n     * scale of 0 to 3.\n     */\n    aspects: _propTypes.PropTypes.arrayOf(aspectsRating),\n\n    /**\n     * The name of the reviewer.\n     */\n    author_name: _propTypes.PropTypes.string,\n\n    /**\n     * A link to the reviewer's profile. This will be undefined\n     * when the reviewer's profile is unavailable.\n     */\n    author_url: _propTypes.PropTypes.string,\n\n    /**\n     * An IETF language code indicating the language in which\n     * this review is written. Note that this code includes\n     * only the main language tag without any secondary tag\n     * indicating country or region. For example, all the English\n     * reviews are tagged as 'en' rather than 'en-AU' or 'en-UK'.\n     */\n    language: _propTypes.PropTypes.string,\n\n    /**\n     * The text of a review.\n     */\n    text: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * An array of types for this Place\n   * (e.g., [\"political\",  \"locality\"] or [\"restaurant\", \"establishment\"]).\n   */\n  types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string),\n\n  /**\n   * URL of the official Google page for this place. This will be the\n   * establishment's Google+ page if the Google+ page exists, otherwise\n   * it will be the Google-owned page that contains the best available\n   * information about the place.\n   */\n  url: _propTypes.PropTypes.string,\n\n  /**\n   * A fragment of the Place's address for disambiguation\n   * (usually street name and locality).\n   */\n  vicinity: _propTypes.PropTypes.string,\n\n  /**\n   * The authoritative website for this Place, such as a business' homepage.\n   */\n  website: _propTypes.PropTypes.string,\n\n  /**\n   * Place prediction info\n   */\n  predictionInfo: predictionShape\n});\n\nexports.placeDetailsShape = placeDetailsShape;","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/GoogleAddressLookup/proptypes.js"],"names":["Object","defineProperty","exports","value","placeDetailsShape","predictionShape","searchOptionsShape","mapViewportCoordinates","mapCoordinates","aspectsRating","_propTypes","require","PropTypes","shape","rating","number","type","string","lat","isRequired","lng","south","west","north","east","bounds","sw","latitude","longitude","ne","country","oneOfType","arrayOf","location","radius","types","description","matched_substrings","length","offset","place_id","structured_formatting","main_text","main_text_matched_substrings","secondary_text","terms","address_components","long_name","short_name","aspects","formatted_address","formatted_phone_number","geometry","viewport","html_attributions","icon","international_phone_number","name","permanently_closed","bool","photos","height","width","photo_reference","price_level","reviews","author_name","author_url","language","text","url","vicinity","website","predictionInfo"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.placeDetailsShape = exports.predictionShape = exports.searchOptionsShape = exports.mapViewportCoordinates = exports.mapCoordinates = exports.aspectsRating = void 0;\n\nvar _propTypes = require(\"prop-types\");\n\n/* eslint-disable id-length */\n\n/* eslint-disable import/prefer-default-export */\nvar aspectsRating = _propTypes.PropTypes.shape({\n  /**\n   * The rating of this aspect. For individual reviews this is an\n   * integer from 0 to 3. For aggregated ratings of a place this\n   * is an integer from 0 to 30.\n   */\n  rating: _propTypes.PropTypes.number,\n\n  /**\n   * The aspect type, e.g. 'food', 'decor', 'service', 'overall'.\n   */\n  type: _propTypes.PropTypes.string\n});\n\nexports.aspectsRating = aspectsRating;\n\nvar mapCoordinates = _propTypes.PropTypes.shape({\n  lat: _propTypes.PropTypes.number.isRequired,\n  lng: _propTypes.PropTypes.number.isRequired\n});\n\nexports.mapCoordinates = mapCoordinates;\n\nvar mapViewportCoordinates = _propTypes.PropTypes.shape({\n  south: _propTypes.PropTypes.number.isRequired,\n  west: _propTypes.PropTypes.number.isRequired,\n  north: _propTypes.PropTypes.number.isRequired,\n  east: _propTypes.PropTypes.number.isRequired\n});\n\nexports.mapViewportCoordinates = mapViewportCoordinates;\n\nvar searchOptionsShape = _propTypes.PropTypes.shape({\n  /**\n   * Bounds for prediction biasing. Predictions will be\n   * biased towards, but not restricted to, the given bounds.\n   * Both location and radius will be ignored if bounds is set.\n   */\n  bounds: _propTypes.PropTypes.shape({\n    sw: _propTypes.PropTypes.shape({\n      latitude: _propTypes.PropTypes.number.isRequired,\n      longitude: _propTypes.PropTypes.number.isRequired\n    }),\n    ne: _propTypes.PropTypes.shape({\n      latitude: _propTypes.PropTypes.number.isRequired,\n      longitude: _propTypes.PropTypes.number.isRequired\n    })\n  }),\n\n  /**\n   * The country restrictions in ISO 3166-1 Alpha-2 country code (case insensitive).\n   * Up to five countries\n   * E.g.\n   *      ['us', 'ca'] to search places within United States and Canada only\n   *      'us' to search places within United States only\n   */\n  country: _propTypes.PropTypes.oneOfType([_propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string), _propTypes.PropTypes.string]),\n\n  /**\n   * Location for prediction biasing. Predictions will be biased\n   * towards the given location and radius. Alternatively, bounds\n   * can be used.\n   */\n  location: _propTypes.PropTypes.shape({\n    latitude: _propTypes.PropTypes.number.isRequired,\n    longitude: _propTypes.PropTypes.number.isRequired\n  }),\n\n  /**\n   * The radius of the area used for prediction biasing. The radius is\n   * specified in meters, and must always be accompanied by a location\n   * property. Alternatively, bounds can be used.\n   */\n  radius: _propTypes.PropTypes.number,\n\n  /**\n   * The types of predictions to be returned. Four types are supported:\n   * 'establishment' for businesses, 'geocode' for addresses, '(regions)'\n   * for administrative regions and '(cities)' for localities. If nothing\n   * is specified, all types are returned.\n   */\n  types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string)\n});\n\nexports.searchOptionsShape = searchOptionsShape;\n\nvar predictionShape = _propTypes.PropTypes.shape({\n  /**\n   * This is the unformatted version of the query suggested by Google Places service.\n   */\n  description: _propTypes.PropTypes.string,\n\n  /**\n   * A set of substrings in the place's description that match elements in the user's\n   * input, suitable for use in highlighting those substrings. Each substring is\n   * identified by an offset and a length, expressed in unicode characters.\n   */\n  matched_substrings: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    length: _propTypes.PropTypes.number,\n    offset: _propTypes.PropTypes.number\n  })),\n\n  /**\n   * A place ID that can be used to retrieve details about this place using the place\n   * details service.\n   */\n  place_id: _propTypes.PropTypes.string,\n  structured_formatting: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * Contains the main text of a prediction, usually the name of the place.\n     */\n    main_text: _propTypes.PropTypes.string,\n\n    /**\n     * Contains an array with offset value and length. These describe the\n     * location of the entered term in the prediction result text, so that\n     * the term can be highlighted if desired.\n     */\n    main_text_matched_substrings: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n      length: _propTypes.PropTypes.number,\n      offset: _propTypes.PropTypes.number\n    })),\n\n    /**\n     * Contains the secondary text of a prediction, usually the location of the place.\n     */\n    secondary_text: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * Information about individual terms in the above description,\n   * from most to least specific.\n   * For example, \"Taco Bell\", \"Willitis\", and \"CA\".\n   */\n  terms: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    offset: _propTypes.PropTypes.number,\n    value: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * An array of types that the prediction belongs to,\n   * for example 'establishment' or 'geocode'.\n   */\n  types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string)\n});\n\nexports.predictionShape = predictionShape;\n\nvar placeDetailsShape = _propTypes.PropTypes.shape({\n  /**\n   * The collection of address components for this Place's location.\n   */\n  address_components: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * The full text of the address component\n     */\n    long_name: _propTypes.PropTypes.string,\n\n    /**\n     * The abbreviated, short text of the given address component\n     */\n    short_name: _propTypes.PropTypes.string,\n\n    /**\n     * An array of strings denoting the type of this\n     * address component. A list of valid types can be found here\n     */\n    types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string)\n  })),\n\n  /**\n   * The rated aspects of this Place, based on Google and Zagat user\n   * reviews. The ratings are on a scale of 0 to 30.\n   */\n  aspects: _propTypes.PropTypes.arrayOf(aspectsRating),\n\n  /**\n   * The Place's full address.\n   */\n  formatted_address: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's phone number, formatted according to the\n   * number's regional convention.\n   */\n  formatted_phone_number: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's geometry-related information.\n   */\n  geometry: _propTypes.PropTypes.shape({\n    /**\n     * The Place's position.\n     */\n    location: mapCoordinates,\n\n    /**\n     * The preferred viewport when displaying this Place on a map.\n     * This property will be null if the preferred viewport for the\n     * Place is not known.\n     */\n    viewport: mapViewportCoordinates\n  }),\n\n  /**\n   * Attribution text to be displayed for this Place result.\n   */\n  html_attributions: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string),\n\n  /**\n   * URL to an image resource that can be used to represent this\n   * Place's category.\n   */\n  icon: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's phone number in international format.\n   * International format includes the country code, and\n   * is prefixed with the plus (+) sign.\n   */\n  international_phone_number: _propTypes.PropTypes.string,\n\n  /**\n   * The Place's name. Note: In the case of user entered Places,\n   * this is the raw text, as typed by the user. Please exercise\n   * caution when using this data, as malicious users may try to\n   * use it as a vector for code injection attacks\n   * (See http://en.wikipedia.org/wiki/Code_injection).\n   */\n  name: _propTypes.PropTypes.string,\n\n  /**\n   * A flag indicating whether the Place is permanently closed.\n   * If the place is not permanently closed, the flag is not present\n   * in search or details responses.\n   */\n  permanently_closed: _propTypes.PropTypes.bool,\n\n  /**\n   * Photos of this Place. The collection will contain up to ten\n   * photos.\n   */\n  photos: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * The height of the photo in pixels.\n     */\n    height: _propTypes.PropTypes.number,\n\n    /**\n     * The width of the photo in pixels.\n     */\n    width: _propTypes.PropTypes.number,\n\n    /**\n     * Contains any required attributions. This field will always\n     * be present, but may be empty.\n     */\n    html_attributions: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string),\n\n    /**\n     * A string used to identify the photo when you perform a Photo request.\n     */\n    photo_reference: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * A unique identifier for a place.\n   * */\n  place_id: _propTypes.PropTypes.string,\n\n  /**\n   * The price level of the Place, on a scale of 0 to 4. Price levels\n   * are interpreted as follows:\n   * 0 - Free\n   * 1 - Inexpensive\n   * 2 - Moderate\n   * 3 - Expensive\n   * 4 - Very Expensive\n   */\n  price_level: _propTypes.PropTypes.number,\n\n  /**\n   * A rating, between 1.0 to 5.0, based on user reviews of this Place.\n   */\n  rating: _propTypes.PropTypes.number,\n\n  /**\n   * A list of reviews of this Place.\n   */\n  reviews: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.shape({\n    /**\n     * The aspects rated by the review. The ratings on a\n     * scale of 0 to 3.\n     */\n    aspects: _propTypes.PropTypes.arrayOf(aspectsRating),\n\n    /**\n     * The name of the reviewer.\n     */\n    author_name: _propTypes.PropTypes.string,\n\n    /**\n     * A link to the reviewer's profile. This will be undefined\n     * when the reviewer's profile is unavailable.\n     */\n    author_url: _propTypes.PropTypes.string,\n\n    /**\n     * An IETF language code indicating the language in which\n     * this review is written. Note that this code includes\n     * only the main language tag without any secondary tag\n     * indicating country or region. For example, all the English\n     * reviews are tagged as 'en' rather than 'en-AU' or 'en-UK'.\n     */\n    language: _propTypes.PropTypes.string,\n\n    /**\n     * The text of a review.\n     */\n    text: _propTypes.PropTypes.string\n  })),\n\n  /**\n   * An array of types for this Place\n   * (e.g., [\"political\",  \"locality\"] or [\"restaurant\", \"establishment\"]).\n   */\n  types: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.string),\n\n  /**\n   * URL of the official Google page for this place. This will be the\n   * establishment's Google+ page if the Google+ page exists, otherwise\n   * it will be the Google-owned page that contains the best available\n   * information about the place.\n   */\n  url: _propTypes.PropTypes.string,\n\n  /**\n   * A fragment of the Place's address for disambiguation\n   * (usually street name and locality).\n   */\n  vicinity: _propTypes.PropTypes.string,\n\n  /**\n   * The authoritative website for this Place, such as a business' homepage.\n   */\n  website: _propTypes.PropTypes.string,\n\n  /**\n   * Place prediction info\n   */\n  predictionInfo: predictionShape\n});\n\nexports.placeDetailsShape = placeDetailsShape;"]},"metadata":{},"sourceType":"script"}