{"ast":null,"code":"'use strict';\n\nmodule.exports = factory;\nvar backslash = '\\\\'; // Factory to de-escape a value, based on a list at `key` in `ctx`.\n\nfunction factory(ctx, key) {\n  return unescape; // De-escape a string using the expression at `key` in `ctx`.\n\n  function unescape(value) {\n    var previous = 0;\n    var index = value.indexOf(backslash);\n    var escape = ctx[key];\n    var queue = [];\n    var character;\n\n    while (index !== -1) {\n      queue.push(value.slice(previous, index));\n      previous = index + 1;\n      character = value.charAt(previous); // If the following character is not a valid escape, add the slash.\n\n      if (!character || escape.indexOf(character) === -1) {\n        queue.push(backslash);\n      }\n\n      index = value.indexOf(backslash, previous + 1);\n    }\n\n    queue.push(value.slice(previous));\n    return queue.join('');\n  }\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/remark-parse/lib/unescape.js"],"names":["module","exports","factory","backslash","ctx","key","unescape","value","previous","index","indexOf","escape","queue","character","push","slice","charAt","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA,IAAIC,SAAS,GAAG,IAAhB,C,CAEA;;AACA,SAASD,OAAT,CAAiBE,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,SAAOC,QAAP,CADyB,CAGzB;;AACA,WAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAcP,SAAd,CAAZ;AACA,QAAIQ,MAAM,GAAGP,GAAG,CAACC,GAAD,CAAhB;AACA,QAAIO,KAAK,GAAG,EAAZ;AACA,QAAIC,SAAJ;;AAEA,WAAOJ,KAAK,KAAK,CAAC,CAAlB,EAAqB;AACnBG,MAAAA,KAAK,CAACE,IAAN,CAAWP,KAAK,CAACQ,KAAN,CAAYP,QAAZ,EAAsBC,KAAtB,CAAX;AACAD,MAAAA,QAAQ,GAAGC,KAAK,GAAG,CAAnB;AACAI,MAAAA,SAAS,GAAGN,KAAK,CAACS,MAAN,CAAaR,QAAb,CAAZ,CAHmB,CAKnB;;AACA,UAAI,CAACK,SAAD,IAAcF,MAAM,CAACD,OAAP,CAAeG,SAAf,MAA8B,CAAC,CAAjD,EAAoD;AAClDD,QAAAA,KAAK,CAACE,IAAN,CAAWX,SAAX;AACD;;AAEDM,MAAAA,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAcP,SAAd,EAAyBK,QAAQ,GAAG,CAApC,CAAR;AACD;;AAEDI,IAAAA,KAAK,CAACE,IAAN,CAAWP,KAAK,CAACQ,KAAN,CAAYP,QAAZ,CAAX;AAEA,WAAOI,KAAK,CAACK,IAAN,CAAW,EAAX,CAAP;AACD;AACF","sourcesContent":["'use strict'\r\n\r\nmodule.exports = factory\r\n\r\nvar backslash = '\\\\'\r\n\r\n// Factory to de-escape a value, based on a list at `key` in `ctx`.\r\nfunction factory(ctx, key) {\r\n  return unescape\r\n\r\n  // De-escape a string using the expression at `key` in `ctx`.\r\n  function unescape(value) {\r\n    var previous = 0\r\n    var index = value.indexOf(backslash)\r\n    var escape = ctx[key]\r\n    var queue = []\r\n    var character\r\n\r\n    while (index !== -1) {\r\n      queue.push(value.slice(previous, index))\r\n      previous = index + 1\r\n      character = value.charAt(previous)\r\n\r\n      // If the following character is not a valid escape, add the slash.\r\n      if (!character || escape.indexOf(character) === -1) {\r\n        queue.push(backslash)\r\n      }\r\n\r\n      index = value.indexOf(backslash, previous + 1)\r\n    }\r\n\r\n    queue.push(value.slice(previous))\r\n\r\n    return queue.join('')\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}