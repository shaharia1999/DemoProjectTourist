{"ast":null,"code":"var _jsxFileName = \"E:\\\\Monirul AWS\\\\PorzotokFrontend\\\\src\\\\component\\\\login\\\\UserVerification.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\nimport Porzotok from \"../../asset/images/Porzotok.png\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport SessionHelper from \"../../SessionHelper/SessionHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserVerification extends Component {\n  constructor() {\n    super();\n\n    this.userIDOnChange = event => {\n      let email = event.target.value;\n      this.setState({\n        email: email\n      });\n    };\n\n    this.OtpOnChange = event => {\n      let OtpCode = event.target.value;\n      this.setState({\n        OtpCode: OtpCode\n      });\n    };\n\n    this.onLoginFromSubmit = event => {\n      let UserID = this.state.user_id;\n      let password = this.state.password;\n      let sendBtn = document.getElementById('sendBtn');\n      let LoginForm = document.getElementById('LoginForm');\n      /*validation Check*/\n\n      if (email.length === 0) {\n        toast.error('Email is Required !', {\n          position: \"bottom-center\",\n          theme: \"colored\",\n          autoClose: false,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } else if (password.length === 0) {\n        toast.error('Password is Required !', {\n          position: \"bottom-center\",\n          theme: \"colored\",\n          autoClose: false,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } else {\n        sendBtn.innerHTML = \"Sending...\";\n        /*\r\n        //for Api Form-data\r\n        let MyFormData = new FormData();\r\n        MyFormData.append(\"email\", email);\r\n        MyFormData.append(\"password\", password);*/\n\n        let config = {\n          headers: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        axios.post(ApiURL.SendLogin, MyFormDataJson).then(response => {\n          if (response.status === 200 && response.data.login === 1) {\n            sendBtn.innerHTML = \"Login\";\n            SessionHelper.SetUserEmail(email);\n            sessionStorage.setItem(\"Fullname\", response.data.Fullname);\n            toast.success('successfully login', {\n              position: \"bottom-center\",\n              theme: \"colored\",\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              autoClose: 3000\n            });\n            this.setState({\n              userRedirect: true\n            });\n            LoginForm.reset();\n          }\n        }).catch(error => {\n          toast.error('Request Fail ! Try Again', {\n            position: \"bottom-center\",\n            theme: \"colored\",\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            autoClose: 3000\n          });\n          sendBtn.innerHTML = \"Login\";\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.state = {\n      user_id: SessionHelper.GetUserID('UserID'),\n      OtpCode: \"\",\n      userRedirect: false\n    };\n    this.onUserRedirect = this.onUserRedirect.bind(this);\n  }\n\n  onUserRedirect() {\n    if (this.state.userRedirect === true) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"p-5 d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"LoginCard shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xl: 1,\n            lg: 1,\n            md: 1,\n            sm: 12,\n            xs: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: 10,\n            lg: 10,\n            md: 10,\n            sm: 12,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"LoginCardPorzotokImg mt-4\",\n                src: Porzotok,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  onChange: this.OtpOnChange,\n                  className: \"form-control placeholder-text\",\n                  placeholder: \"Enter Your OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/userLogin\",\n                  type: \"submit\",\n                  id: \"OtpBtn\",\n                  className: \"btn SendBtnColorText mb-5 btn-block\",\n                  children: \"OTP VERIFICATION\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 38\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"forgotText text-center mb-5 mt-3\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"signUpText\",\n                children: \"Resend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 79\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: 1,\n            lg: 1,\n            md: 1,\n            sm: 12,\n            xs: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserVerification;","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/src/component/login/UserVerification.js"],"names":["React","Component","Fragment","Col","Container","Form","Row","Porzotok","Link","Redirect","SessionHelper","UserVerification","constructor","userIDOnChange","event","email","target","value","setState","OtpOnChange","OtpCode","onLoginFromSubmit","UserID","state","user_id","password","sendBtn","document","getElementById","LoginForm","length","toast","error","position","theme","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","innerHTML","config","headers","axios","post","ApiURL","SendLogin","MyFormDataJson","then","response","status","data","login","SetUserEmail","sessionStorage","setItem","Fullname","success","userRedirect","reset","catch","preventDefault","GetUserID","onUserRedirect","bind","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport Porzotok from \"../../asset/images/Porzotok.png\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport SessionHelper from \"../../SessionHelper/SessionHelper\";\r\nclass UserVerification extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            user_id: SessionHelper.GetUserID('UserID'),\r\n            OtpCode:\"\",\r\n            userRedirect:false,\r\n        }\r\n        this.onUserRedirect=this.onUserRedirect.bind(this);\r\n    }\r\n\r\n    userIDOnChange=(event)=>{\r\n        let email=event.target.value;\r\n        this.setState(({email:email}));\r\n    }\r\n\r\n    OtpOnChange=(event)=>{\r\n        let OtpCode=event.target.value;\r\n        this.setState(({OtpCode:OtpCode}));\r\n    }\r\n\r\n    onUserRedirect(){\r\n        if(this.state.userRedirect===true){\r\n            return(\r\n                <Redirect to=\"/\"/>\r\n            )\r\n        }\r\n    }\r\n\r\n    onLoginFromSubmit = (event) => {\r\n        let UserID = this.state.user_id;\r\n        let password = this.state.password;\r\n\r\n        let sendBtn = document.getElementById('sendBtn');\r\n        let LoginForm = document.getElementById('LoginForm');\r\n\r\n        /*validation Check*/\r\n        if (email.length === 0) {\r\n            toast.error('Email is Required !', {\r\n                position: \"bottom-center\",\r\n                theme: \"colored\",\r\n                autoClose: false,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } else if (password.length === 0) {\r\n            toast.error('Password is Required !', {\r\n                position: \"bottom-center\",\r\n                theme: \"colored\",\r\n                autoClose: false,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            sendBtn.innerHTML = \"Sending...\";\r\n\r\n            /*\r\n            //for Api Form-data\r\n            let MyFormData = new FormData();\r\n            MyFormData.append(\"email\", email);\r\n            MyFormData.append(\"password\", password);*/\r\n\r\n            let config = {\r\n                headers: {'content-type': 'multipart/form-data'}\r\n            }\r\n\r\n            axios.post(ApiURL.SendLogin,MyFormDataJson).then((response)=> {\r\n                if (response.status === 200 && response.data.login===1) {\r\n                    sendBtn.innerHTML = \"Login\";\r\n                    SessionHelper.SetUserEmail(email);\r\n\r\n                    sessionStorage.setItem(\"Fullname\",response.data.Fullname);\r\n\r\n                    toast.success('successfully login', {\r\n                        position: \"bottom-center\",\r\n                        theme: \"colored\",\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        autoClose: 3000,\r\n                    });\r\n                    this.setState({userRedirect:true});\r\n                    LoginForm.reset();\r\n                }\r\n            }).catch((error)=> {\r\n                toast.error('Request Fail ! Try Again', {\r\n                    position: \"bottom-center\",\r\n                    theme: \"colored\",\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    autoClose: 3000,\r\n                });\r\n                sendBtn.innerHTML = \"Login\";\r\n            })\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Container className=\"p-5 d-flex justify-content-center\">\r\n                    <Row className=\"LoginCard shadow-sm\">\r\n                        <Col xl={1} lg={1} md={1} sm={12} xs={12}>\r\n\r\n                        </Col>\r\n                        <Col xl={10} lg={10} md={10} sm={12} xs={12}>\r\n                            <Form>\r\n                                <img className=\"LoginCardPorzotokImg mt-4\" src={Porzotok} alt=\"\"/>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={this.OtpOnChange} className=\"form-control placeholder-text\" placeholder=\"Enter Your OTP\"/>\r\n                                </div>\r\n                                <h1> <Link to=\"/userLogin\" type=\"submit\" id=\"OtpBtn\" className=\"btn SendBtnColorText mb-5 btn-block\">OTP VERIFICATION</Link> </h1>\r\n                            </Form>\r\n                            <h1 className=\"forgotText text-center mb-5 mt-3\"> <p className=\"signUpText\">Resend</p> </h1>\r\n                        </Col>\r\n                        <Col xl={1} lg={1} md={1} sm={12} xs={12}>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserVerification;"]},"metadata":{},"sourceType":"module"}