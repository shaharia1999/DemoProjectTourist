{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getFormattedEventTimeRange;\n\nvar _getFormattedEventTime = _interopRequireDefault(require(\"./getFormattedEventTime\"));\n\nvar formatter = function formatter(locale) {\n  return new Intl.DateTimeFormat(locale, {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n};\n\nfunction getFormattedEventTimeRange(startDate, endDate, locale) {\n  var startDateParts = formatter(locale).formatToParts(startDate);\n  var endDateParts = formatter(locale).formatToParts(endDate);\n  var formattedStartDate = (0, _getFormattedEventTime[\"default\"])(startDateParts.filter(function (_ref, index, arr) {\n    var type = _ref.type,\n        value = _ref.value;\n\n    if (type.toLowerCase() === 'dayperiod' && value === endDateParts[index].value) {\n      return false;\n    }\n\n    var next = arr[index + 1];\n\n    if (next && next.type.toLowerCase() === 'dayperiod' && next.value === endDateParts[index + 1].value) {\n      return false;\n    }\n\n    return true;\n  }));\n  var formattedEndDate = (0, _getFormattedEventTime[\"default\"])(endDateParts);\n  return \"\".concat(formattedStartDate, \" - \").concat(formattedEndDate);\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/WeeklyCalendar/week/helpers/getFormattedEventTimeRange.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getFormattedEventTimeRange","_getFormattedEventTime","formatter","locale","Intl","DateTimeFormat","hour","minute","hour12","startDate","endDate","startDateParts","formatToParts","endDateParts","formattedStartDate","filter","_ref","index","arr","type","toLowerCase","next","formattedEndDate","concat"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,0BAArB;;AAEA,IAAIC,sBAAsB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnD;;AAEA,IAAIO,SAAS,GAAG,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AACzC,SAAO,IAAIC,IAAI,CAACC,cAAT,CAAwBF,MAAxB,EAAgC;AACrCG,IAAAA,IAAI,EAAE,SAD+B;AAErCC,IAAAA,MAAM,EAAE,SAF6B;AAGrCC,IAAAA,MAAM,EAAE;AAH6B,GAAhC,CAAP;AAKD,CAND;;AAQA,SAASR,0BAAT,CAAoCS,SAApC,EAA+CC,OAA/C,EAAwDP,MAAxD,EAAgE;AAC9D,MAAIQ,cAAc,GAAGT,SAAS,CAACC,MAAD,CAAT,CAAkBS,aAAlB,CAAgCH,SAAhC,CAArB;AACA,MAAII,YAAY,GAAGX,SAAS,CAACC,MAAD,CAAT,CAAkBS,aAAlB,CAAgCF,OAAhC,CAAnB;AACA,MAAII,kBAAkB,GAAG,CAAC,GAAGb,sBAAsB,CAAC,SAAD,CAA1B,EAAuCU,cAAc,CAACI,MAAf,CAAsB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AAChH,QAAIC,IAAI,GAAGH,IAAI,CAACG,IAAhB;AAAA,QACIpB,KAAK,GAAGiB,IAAI,CAACjB,KADjB;;AAGA,QAAIoB,IAAI,CAACC,WAAL,OAAuB,WAAvB,IAAsCrB,KAAK,KAAKc,YAAY,CAACI,KAAD,CAAZ,CAAoBlB,KAAxE,EAA+E;AAC7E,aAAO,KAAP;AACD;;AAED,QAAIsB,IAAI,GAAGH,GAAG,CAACD,KAAK,GAAG,CAAT,CAAd;;AAEA,QAAII,IAAI,IAAIA,IAAI,CAACF,IAAL,CAAUC,WAAV,OAA4B,WAApC,IAAmDC,IAAI,CAACtB,KAAL,KAAec,YAAY,CAACI,KAAK,GAAG,CAAT,CAAZ,CAAwBlB,KAA9F,EAAqG;AACnG,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GAf+D,CAAvC,CAAzB;AAgBA,MAAIuB,gBAAgB,GAAG,CAAC,GAAGrB,sBAAsB,CAAC,SAAD,CAA1B,EAAuCY,YAAvC,CAAvB;AACA,SAAO,GAAGU,MAAH,CAAUT,kBAAV,EAA8B,KAA9B,EAAqCS,MAArC,CAA4CD,gBAA5C,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getFormattedEventTimeRange;\n\nvar _getFormattedEventTime = _interopRequireDefault(require(\"./getFormattedEventTime\"));\n\nvar formatter = function formatter(locale) {\n  return new Intl.DateTimeFormat(locale, {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n};\n\nfunction getFormattedEventTimeRange(startDate, endDate, locale) {\n  var startDateParts = formatter(locale).formatToParts(startDate);\n  var endDateParts = formatter(locale).formatToParts(endDate);\n  var formattedStartDate = (0, _getFormattedEventTime[\"default\"])(startDateParts.filter(function (_ref, index, arr) {\n    var type = _ref.type,\n        value = _ref.value;\n\n    if (type.toLowerCase() === 'dayperiod' && value === endDateParts[index].value) {\n      return false;\n    }\n\n    var next = arr[index + 1];\n\n    if (next && next.type.toLowerCase() === 'dayperiod' && next.value === endDateParts[index + 1].value) {\n      return false;\n    }\n\n    return true;\n  }));\n  var formattedEndDate = (0, _getFormattedEventTime[\"default\"])(endDateParts);\n  return \"\".concat(formattedStartDate, \" - \").concat(formattedEndDate);\n}"]},"metadata":{},"sourceType":"script"}