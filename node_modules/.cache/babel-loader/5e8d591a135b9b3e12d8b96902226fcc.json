{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getFormattedEventStartDate;\n\nvar _getFormattedEventTime = _interopRequireDefault(require(\"./getFormattedEventTime\"));\n\nfunction getFormattedEventStartDate(startDate, locale) {\n  var startDateParts = new Intl.DateTimeFormat(locale, {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  }).formatToParts(startDate);\n  return (0, _getFormattedEventTime[\"default\"])(startDateParts);\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/WeeklyCalendar/week/helpers/getFormattedEventStartDate.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getFormattedEventStartDate","_getFormattedEventTime","startDate","locale","startDateParts","Intl","DateTimeFormat","hour","minute","hour12","formatToParts"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,0BAArB;;AAEA,IAAIC,sBAAsB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnD;;AAEA,SAASK,0BAAT,CAAoCE,SAApC,EAA+CC,MAA/C,EAAuD;AACrD,MAAIC,cAAc,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwBH,MAAxB,EAAgC;AACnDI,IAAAA,IAAI,EAAE,SAD6C;AAEnDC,IAAAA,MAAM,EAAE,SAF2C;AAGnDC,IAAAA,MAAM,EAAE;AAH2C,GAAhC,EAIlBC,aAJkB,CAIJR,SAJI,CAArB;AAKA,SAAO,CAAC,GAAGD,sBAAsB,CAAC,SAAD,CAA1B,EAAuCG,cAAvC,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getFormattedEventStartDate;\n\nvar _getFormattedEventTime = _interopRequireDefault(require(\"./getFormattedEventTime\"));\n\nfunction getFormattedEventStartDate(startDate, locale) {\n  var startDateParts = new Intl.DateTimeFormat(locale, {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  }).formatToParts(startDate);\n  return (0, _getFormattedEventTime[\"default\"])(startDateParts);\n}"]},"metadata":{},"sourceType":"script"}