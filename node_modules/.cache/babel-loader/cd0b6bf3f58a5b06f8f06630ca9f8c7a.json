{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = formatDate;\n/* eslint-disable no-console */\n\nvar FORMATS = {\n  small: {\n    year: '2-digit',\n    month: 'numeric',\n    day: 'numeric'\n  },\n  medium: {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  },\n  large: {\n    weekday: 'long',\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }\n};\n\nfunction formatDate(date) {\n  var formatStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'medium';\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'en-US';\n\n  if (date) {\n    try {\n      var options = FORMATS[formatStyle] || FORMATS.medium;\n      var value = typeof date === 'string' ? new Date(date) : date;\n      return new Intl.DateTimeFormat(locale, options).format(value);\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  return '';\n}","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/node_modules/react-rainbow-components/components/DatePicker/helpers/formatDate.js"],"names":["Object","defineProperty","exports","value","formatDate","FORMATS","small","year","month","day","medium","large","weekday","date","formatStyle","arguments","length","undefined","locale","options","Date","Intl","DateTimeFormat","format","error","console"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,UAArB;AAEA;;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,GAAG,EAAE;AAHA,GADK;AAMZC,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAE,SADA;AAENC,IAAAA,KAAK,EAAE,SAFD;AAGNC,IAAAA,GAAG,EAAE;AAHC,GANI;AAWZE,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELL,IAAAA,IAAI,EAAE,SAFD;AAGLC,IAAAA,KAAK,EAAE,SAHF;AAILC,IAAAA,GAAG,EAAE;AAJA;AAXK,CAAd;;AAmBA,SAASL,UAAT,CAAoBS,IAApB,EAA0B;AACxB,MAAIC,WAAW,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,QAAtF;AACA,MAAIG,MAAM,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,OAAjF;;AAEA,MAAIF,IAAJ,EAAU;AACR,QAAI;AACF,UAAIM,OAAO,GAAGd,OAAO,CAACS,WAAD,CAAP,IAAwBT,OAAO,CAACK,MAA9C;AACA,UAAIP,KAAK,GAAG,OAAOU,IAAP,KAAgB,QAAhB,GAA2B,IAAIO,IAAJ,CAASP,IAAT,CAA3B,GAA4CA,IAAxD;AACA,aAAO,IAAIQ,IAAI,CAACC,cAAT,CAAwBJ,MAAxB,EAAgCC,OAAhC,EAAyCI,MAAzC,CAAgDpB,KAAhD,CAAP;AACD,KAJD,CAIE,OAAOqB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAO,EAAP;AACD;AACF;;AAED,SAAO,EAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = formatDate;\n\n/* eslint-disable no-console */\nvar FORMATS = {\n  small: {\n    year: '2-digit',\n    month: 'numeric',\n    day: 'numeric'\n  },\n  medium: {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  },\n  large: {\n    weekday: 'long',\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }\n};\n\nfunction formatDate(date) {\n  var formatStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'medium';\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'en-US';\n\n  if (date) {\n    try {\n      var options = FORMATS[formatStyle] || FORMATS.medium;\n      var value = typeof date === 'string' ? new Date(date) : date;\n      return new Intl.DateTimeFormat(locale, options).format(value);\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  return '';\n}"]},"metadata":{},"sourceType":"script"}