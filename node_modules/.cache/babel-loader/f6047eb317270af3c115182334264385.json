{"ast":null,"code":"'use strict';\n\nmodule.exports = list;\n\nvar wrap = require('../wrap');\n\nvar all = require('../all');\n\nfunction list(h, node) {\n  var props = {};\n  var name = node.ordered ? 'ol' : 'ul';\n  var items;\n  var index = -1;\n  var length;\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start;\n  }\n\n  items = all(h, node);\n  length = items.length; // Like GitHub, add a class for custom styling.\n\n  while (++index < length) {\n    if (items[index].properties.className && items[index].properties.className.indexOf('task-list-item') !== -1) {\n      props.className = ['contains-task-list'];\n      break;\n    }\n  }\n\n  return h(node, name, props, wrap(items, true));\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/mdast-util-to-hast/lib/handlers/list.js"],"names":["module","exports","list","wrap","require","all","h","node","props","name","ordered","items","index","length","start","properties","className","indexOf"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAjB;;AAEA,SAASF,IAAT,CAAcI,CAAd,EAAiBC,IAAjB,EAAuB;AACrB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAI,GAAGF,IAAI,CAACG,OAAL,GAAe,IAAf,GAAsB,IAAjC;AACA,MAAIC,KAAJ;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAJ;;AAEA,MAAI,OAAON,IAAI,CAACO,KAAZ,KAAsB,QAAtB,IAAkCP,IAAI,CAACO,KAAL,KAAe,CAArD,EAAwD;AACtDN,IAAAA,KAAK,CAACM,KAAN,GAAcP,IAAI,CAACO,KAAnB;AACD;;AAEDH,EAAAA,KAAK,GAAGN,GAAG,CAACC,CAAD,EAAIC,IAAJ,CAAX;AACAM,EAAAA,MAAM,GAAGF,KAAK,CAACE,MAAf,CAZqB,CAcrB;;AACA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QACEF,KAAK,CAACC,KAAD,CAAL,CAAaG,UAAb,CAAwBC,SAAxB,IACAL,KAAK,CAACC,KAAD,CAAL,CAAaG,UAAb,CAAwBC,SAAxB,CAAkCC,OAAlC,CAA0C,gBAA1C,MAAgE,CAAC,CAFnE,EAGE;AACAT,MAAAA,KAAK,CAACQ,SAAN,GAAkB,CAAC,oBAAD,CAAlB;AACA;AACD;AACF;;AAED,SAAOV,CAAC,CAACC,IAAD,EAAOE,IAAP,EAAaD,KAAb,EAAoBL,IAAI,CAACQ,KAAD,EAAQ,IAAR,CAAxB,CAAR;AACD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = list\r\n\r\nvar wrap = require('../wrap')\r\nvar all = require('../all')\r\n\r\nfunction list(h, node) {\r\n  var props = {}\r\n  var name = node.ordered ? 'ol' : 'ul'\r\n  var items\r\n  var index = -1\r\n  var length\r\n\r\n  if (typeof node.start === 'number' && node.start !== 1) {\r\n    props.start = node.start\r\n  }\r\n\r\n  items = all(h, node)\r\n  length = items.length\r\n\r\n  // Like GitHub, add a class for custom styling.\r\n  while (++index < length) {\r\n    if (\r\n      items[index].properties.className &&\r\n      items[index].properties.className.indexOf('task-list-item') !== -1\r\n    ) {\r\n      props.className = ['contains-task-list']\r\n      break\r\n    }\r\n  }\r\n\r\n  return h(node, name, props, wrap(items, true))\r\n}\r\n"]},"metadata":{},"sourceType":"script"}