{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = findTabbableElements;\n\nvar _isContentHidden = _interopRequireDefault(require(\"./isContentHidden\"));\n\nvar tabbableNode = /input|select|textarea|button|object/;\n\nfunction isVisible(element) {\n  var parentElement = element;\n\n  while (parentElement) {\n    if (parentElement === document.body) break;\n    if ((0, _isContentHidden[\"default\"])(parentElement)) return false;\n    parentElement = parentElement.parentNode;\n  }\n\n  return true;\n}\n\nfunction isFocusable(element, isTabIndexNotNaN) {\n  var nodeName = element.nodeName.toLowerCase();\n  var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === 'a' ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);\n  return res && isVisible(element);\n}\n\nfunction tabbable(element) {\n  var tabIndex = element.getAttribute('tabindex');\n  if (tabIndex === null) tabIndex = undefined; // eslint-disable-next-line no-restricted-globals\n\n  var isTabIndexNaN = isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && isFocusable(element, !isTabIndexNaN);\n}\n\nfunction findTabbableElements(element) {\n  return [].slice.call(element.querySelectorAll('*'), 0).filter(tabbable);\n}","map":{"version":3,"sources":["E:/Monirul AWS/PorzotokFrontend/node_modules/react-rainbow-components/libs/manageTab/findTabbableElements.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","findTabbableElements","_isContentHidden","tabbableNode","isVisible","element","parentElement","document","body","parentNode","isFocusable","isTabIndexNotNaN","nodeName","toLowerCase","res","test","disabled","href","tabbable","tabIndex","getAttribute","undefined","isTabIndexNaN","isNaN","slice","call","querySelectorAll","filter"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,oBAArB;;AAEA,IAAIC,gBAAgB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA7C;;AAEA,IAAIO,YAAY,GAAG,qCAAnB;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,MAAIC,aAAa,GAAGD,OAApB;;AAEA,SAAOC,aAAP,EAAsB;AACpB,QAAIA,aAAa,KAAKC,QAAQ,CAACC,IAA/B,EAAqC;AACrC,QAAI,CAAC,GAAGN,gBAAgB,CAAC,SAAD,CAApB,EAAiCI,aAAjC,CAAJ,EAAqD,OAAO,KAAP;AACrDA,IAAAA,aAAa,GAAGA,aAAa,CAACG,UAA9B;AACD;;AAED,SAAO,IAAP;AACD;;AAED,SAASC,WAAT,CAAqBL,OAArB,EAA8BM,gBAA9B,EAAgD;AAC9C,MAAIC,QAAQ,GAAGP,OAAO,CAACO,QAAR,CAAiBC,WAAjB,EAAf;AACA,MAAIC,GAAG,GAAGX,YAAY,CAACY,IAAb,CAAkBH,QAAlB,KAA+B,CAACP,OAAO,CAACW,QAAxC,KAAqDJ,QAAQ,KAAK,GAAb,GAAmBP,OAAO,CAACY,IAAR,IAAgBN,gBAAnC,GAAsDA,gBAA3G,CAAV;AACA,SAAOG,GAAG,IAAIV,SAAS,CAACC,OAAD,CAAvB;AACD;;AAED,SAASa,QAAT,CAAkBb,OAAlB,EAA2B;AACzB,MAAIc,QAAQ,GAAGd,OAAO,CAACe,YAAR,CAAqB,UAArB,CAAf;AACA,MAAID,QAAQ,KAAK,IAAjB,EAAuBA,QAAQ,GAAGE,SAAX,CAFE,CAEoB;;AAE7C,MAAIC,aAAa,GAAGC,KAAK,CAACJ,QAAD,CAAzB;AACA,SAAO,CAACG,aAAa,IAAIH,QAAQ,IAAI,CAA9B,KAAoCT,WAAW,CAACL,OAAD,EAAU,CAACiB,aAAX,CAAtD;AACD;;AAED,SAASrB,oBAAT,CAA8BI,OAA9B,EAAuC;AACrC,SAAO,GAAGmB,KAAH,CAASC,IAAT,CAAcpB,OAAO,CAACqB,gBAAR,CAAyB,GAAzB,CAAd,EAA6C,CAA7C,EAAgDC,MAAhD,CAAuDT,QAAvD,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = findTabbableElements;\n\nvar _isContentHidden = _interopRequireDefault(require(\"./isContentHidden\"));\n\nvar tabbableNode = /input|select|textarea|button|object/;\n\nfunction isVisible(element) {\n  var parentElement = element;\n\n  while (parentElement) {\n    if (parentElement === document.body) break;\n    if ((0, _isContentHidden[\"default\"])(parentElement)) return false;\n    parentElement = parentElement.parentNode;\n  }\n\n  return true;\n}\n\nfunction isFocusable(element, isTabIndexNotNaN) {\n  var nodeName = element.nodeName.toLowerCase();\n  var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === 'a' ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);\n  return res && isVisible(element);\n}\n\nfunction tabbable(element) {\n  var tabIndex = element.getAttribute('tabindex');\n  if (tabIndex === null) tabIndex = undefined; // eslint-disable-next-line no-restricted-globals\n\n  var isTabIndexNaN = isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && isFocusable(element, !isTabIndexNaN);\n}\n\nfunction findTabbableElements(element) {\n  return [].slice.call(element.querySelectorAll('*'), 0).filter(tabbable);\n}"]},"metadata":{},"sourceType":"script"}