{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getUpdatedRowsWhenSelect;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _getStartRowKey = _interopRequireDefault(require(\"./getStartRowKey\"));\n\nvar _getCurrentSelectionLength = _interopRequireDefault(require(\"./getCurrentSelectionLength\"));\n\nvar _getRowIntervalIndexes = _interopRequireDefault(require(\"./getRowIntervalIndexes\"));\n\nvar _isSelectedRow = _interopRequireDefault(require(\"./isSelectedRow\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getUpdatedRowsWhenSelect() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var maxRowSelection = params.maxRowSelection,\n      _params$rows = params.rows,\n      rows = _params$rows === void 0 ? [] : _params$rows,\n      _params$indexes = params.indexes,\n      indexes = _params$indexes === void 0 ? {} : _params$indexes,\n      isMultiple = params.isMultiple,\n      rowKeyValue = params.rowKeyValue,\n      lastSelectedRowKey = params.lastSelectedRowKey,\n      _params$selectedRowsK = params.selectedRowsKeys,\n      selectedRowsKeys = _params$selectedRowsK === void 0 ? {} : _params$selectedRowsK;\n\n  if (maxRowSelection > 1) {\n    var startRowKey = (0, _getStartRowKey[\"default\"])({\n      isMultiple: isMultiple,\n      rowKeyValue: rowKeyValue,\n      indexes: indexes,\n      lastSelectedRowKey: lastSelectedRowKey\n    });\n\n    var _getRowIntervalIndexe = (0, _getRowIntervalIndexes[\"default\"])({\n      indexes: indexes,\n      startRowKey: startRowKey,\n      endRowKey: rowKeyValue\n    }),\n        start = _getRowIntervalIndexe.start,\n        end = _getRowIntervalIndexe.end;\n\n    var rowsWithSelection = rows.map(function (row, index) {\n      var currentSelectionLength = (0, _getCurrentSelectionLength[\"default\"])(selectedRowsKeys);\n      var maxSelectionReached = currentSelectionLength >= maxRowSelection;\n\n      if (index >= start && index <= end && !maxSelectionReached) {\n        selectedRowsKeys[row.key] = true;\n        return _objectSpread(_objectSpread({}, row), {}, {\n          isSelected: true\n        });\n      }\n\n      return row;\n    });\n    return rowsWithSelection.map(function (row) {\n      var maxSelectionReached = (0, _getCurrentSelectionLength[\"default\"])(selectedRowsKeys) === maxRowSelection;\n\n      if (maxSelectionReached && !(0, _isSelectedRow[\"default\"])(selectedRowsKeys, row.key)) {\n        return _objectSpread(_objectSpread({}, row), {}, {\n          isDisabled: true\n        });\n      }\n\n      return row;\n    });\n  }\n\n  return rows.map(function (row) {\n    if (selectedRowsKeys[row.key]) {\n      return _objectSpread(_objectSpread({}, row), {}, {\n        isSelected: true\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, row), {}, {\n      isSelected: false\n    });\n  });\n}","map":{"version":3,"sources":["D:/PorzotokFrontend/node_modules/react-rainbow-components/components/Table/helpers/selector/getUpdatedRowsWhenSelect.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getUpdatedRowsWhenSelect","_defineProperty2","_getStartRowKey","_getCurrentSelectionLength","_getRowIntervalIndexes","_isSelectedRow","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","params","undefined","maxRowSelection","_params$rows","rows","_params$indexes","indexes","isMultiple","rowKeyValue","lastSelectedRowKey","_params$selectedRowsK","selectedRowsKeys","startRowKey","_getRowIntervalIndexe","endRowKey","start","end","rowsWithSelection","map","row","index","currentSelectionLength","maxSelectionReached","isSelected","isDisabled"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,wBAArB;;AAEA,IAAIC,gBAAgB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIQ,0BAA0B,GAAGT,sBAAsB,CAACC,OAAO,CAAC,6BAAD,CAAR,CAAvD;;AAEA,IAAIS,sBAAsB,GAAGV,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnD;;AAEA,IAAIU,cAAc,GAAGX,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAA3C;;AAEA,SAASW,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGb,MAAM,CAACa,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIX,MAAM,CAACc,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGf,MAAM,CAACc,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOjB,MAAM,CAACkB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,IAAAA,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEd,MAAAA,OAAO,CAACV,MAAM,CAAC2B,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAE,SAAC,GAAGxB,gBAAgB,CAAC,SAAD,CAApB,EAAiCkB,MAAjC,EAAyCM,GAAzC,EAA8CF,MAAM,CAACE,GAAD,CAApD;AAA6D,OAApH;AAAwH,KAArI,MAA2I,IAAI7B,MAAM,CAAC8B,yBAAX,EAAsC;AAAE9B,MAAAA,MAAM,CAAC+B,gBAAP,CAAwBR,MAAxB,EAAgCvB,MAAM,CAAC8B,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEjB,MAAAA,OAAO,CAACV,MAAM,CAAC2B,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAE7B,QAAAA,MAAM,CAACC,cAAP,CAAsBsB,MAAtB,EAA8BM,GAA9B,EAAmC7B,MAAM,CAACkB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEviB,SAASnB,wBAAT,GAAoC;AAClC,MAAI4B,MAAM,GAAGP,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBQ,SAAzC,GAAqDR,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;AACA,MAAIS,eAAe,GAAGF,MAAM,CAACE,eAA7B;AAAA,MACIC,YAAY,GAAGH,MAAM,CAACI,IAD1B;AAAA,MAEIA,IAAI,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,EAA1B,GAA+BA,YAF1C;AAAA,MAGIE,eAAe,GAAGL,MAAM,CAACM,OAH7B;AAAA,MAIIA,OAAO,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,EAA7B,GAAkCA,eAJhD;AAAA,MAKIE,UAAU,GAAGP,MAAM,CAACO,UALxB;AAAA,MAMIC,WAAW,GAAGR,MAAM,CAACQ,WANzB;AAAA,MAOIC,kBAAkB,GAAGT,MAAM,CAACS,kBAPhC;AAAA,MAQIC,qBAAqB,GAAGV,MAAM,CAACW,gBARnC;AAAA,MASIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAT/D;;AAWA,MAAIR,eAAe,GAAG,CAAtB,EAAyB;AACvB,QAAIU,WAAW,GAAG,CAAC,GAAGtC,eAAe,CAAC,SAAD,CAAnB,EAAgC;AAChDiC,MAAAA,UAAU,EAAEA,UADoC;AAEhDC,MAAAA,WAAW,EAAEA,WAFmC;AAGhDF,MAAAA,OAAO,EAAEA,OAHuC;AAIhDG,MAAAA,kBAAkB,EAAEA;AAJ4B,KAAhC,CAAlB;;AAOA,QAAII,qBAAqB,GAAG,CAAC,GAAGrC,sBAAsB,CAAC,SAAD,CAA1B,EAAuC;AACjE8B,MAAAA,OAAO,EAAEA,OADwD;AAEjEM,MAAAA,WAAW,EAAEA,WAFoD;AAGjEE,MAAAA,SAAS,EAAEN;AAHsD,KAAvC,CAA5B;AAAA,QAKIO,KAAK,GAAGF,qBAAqB,CAACE,KALlC;AAAA,QAMIC,GAAG,GAAGH,qBAAqB,CAACG,GANhC;;AAQA,QAAIC,iBAAiB,GAAGb,IAAI,CAACc,GAAL,CAAS,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACrD,UAAIC,sBAAsB,GAAG,CAAC,GAAG9C,0BAA0B,CAAC,SAAD,CAA9B,EAA2CoC,gBAA3C,CAA7B;AACA,UAAIW,mBAAmB,GAAGD,sBAAsB,IAAInB,eAApD;;AAEA,UAAIkB,KAAK,IAAIL,KAAT,IAAkBK,KAAK,IAAIJ,GAA3B,IAAkC,CAACM,mBAAvC,EAA4D;AAC1DX,QAAAA,gBAAgB,CAACQ,GAAG,CAACtB,GAAL,CAAhB,GAA4B,IAA5B;AACA,eAAOP,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK6B,GAAL,CAAd,EAAyB,EAAzB,EAA6B;AAC/CI,UAAAA,UAAU,EAAE;AADmC,SAA7B,CAApB;AAGD;;AAED,aAAOJ,GAAP;AACD,KAZuB,CAAxB;AAaA,WAAOF,iBAAiB,CAACC,GAAlB,CAAsB,UAAUC,GAAV,EAAe;AAC1C,UAAIG,mBAAmB,GAAG,CAAC,GAAG/C,0BAA0B,CAAC,SAAD,CAA9B,EAA2CoC,gBAA3C,MAAiET,eAA3F;;AAEA,UAAIoB,mBAAmB,IAAI,CAAC,CAAC,GAAG7C,cAAc,CAAC,SAAD,CAAlB,EAA+BkC,gBAA/B,EAAiDQ,GAAG,CAACtB,GAArD,CAA5B,EAAuF;AACrF,eAAOP,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK6B,GAAL,CAAd,EAAyB,EAAzB,EAA6B;AAC/CK,UAAAA,UAAU,EAAE;AADmC,SAA7B,CAApB;AAGD;;AAED,aAAOL,GAAP;AACD,KAVM,CAAP;AAWD;;AAED,SAAOf,IAAI,CAACc,GAAL,CAAS,UAAUC,GAAV,EAAe;AAC7B,QAAIR,gBAAgB,CAACQ,GAAG,CAACtB,GAAL,CAApB,EAA+B;AAC7B,aAAOP,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK6B,GAAL,CAAd,EAAyB,EAAzB,EAA6B;AAC/CI,QAAAA,UAAU,EAAE;AADmC,OAA7B,CAApB;AAGD;;AAED,WAAOjC,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK6B,GAAL,CAAd,EAAyB,EAAzB,EAA6B;AAC/CI,MAAAA,UAAU,EAAE;AADmC,KAA7B,CAApB;AAGD,GAVM,CAAP;AAWD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getUpdatedRowsWhenSelect;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _getStartRowKey = _interopRequireDefault(require(\"./getStartRowKey\"));\n\nvar _getCurrentSelectionLength = _interopRequireDefault(require(\"./getCurrentSelectionLength\"));\n\nvar _getRowIntervalIndexes = _interopRequireDefault(require(\"./getRowIntervalIndexes\"));\n\nvar _isSelectedRow = _interopRequireDefault(require(\"./isSelectedRow\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction getUpdatedRowsWhenSelect() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var maxRowSelection = params.maxRowSelection,\n      _params$rows = params.rows,\n      rows = _params$rows === void 0 ? [] : _params$rows,\n      _params$indexes = params.indexes,\n      indexes = _params$indexes === void 0 ? {} : _params$indexes,\n      isMultiple = params.isMultiple,\n      rowKeyValue = params.rowKeyValue,\n      lastSelectedRowKey = params.lastSelectedRowKey,\n      _params$selectedRowsK = params.selectedRowsKeys,\n      selectedRowsKeys = _params$selectedRowsK === void 0 ? {} : _params$selectedRowsK;\n\n  if (maxRowSelection > 1) {\n    var startRowKey = (0, _getStartRowKey[\"default\"])({\n      isMultiple: isMultiple,\n      rowKeyValue: rowKeyValue,\n      indexes: indexes,\n      lastSelectedRowKey: lastSelectedRowKey\n    });\n\n    var _getRowIntervalIndexe = (0, _getRowIntervalIndexes[\"default\"])({\n      indexes: indexes,\n      startRowKey: startRowKey,\n      endRowKey: rowKeyValue\n    }),\n        start = _getRowIntervalIndexe.start,\n        end = _getRowIntervalIndexe.end;\n\n    var rowsWithSelection = rows.map(function (row, index) {\n      var currentSelectionLength = (0, _getCurrentSelectionLength[\"default\"])(selectedRowsKeys);\n      var maxSelectionReached = currentSelectionLength >= maxRowSelection;\n\n      if (index >= start && index <= end && !maxSelectionReached) {\n        selectedRowsKeys[row.key] = true;\n        return _objectSpread(_objectSpread({}, row), {}, {\n          isSelected: true\n        });\n      }\n\n      return row;\n    });\n    return rowsWithSelection.map(function (row) {\n      var maxSelectionReached = (0, _getCurrentSelectionLength[\"default\"])(selectedRowsKeys) === maxRowSelection;\n\n      if (maxSelectionReached && !(0, _isSelectedRow[\"default\"])(selectedRowsKeys, row.key)) {\n        return _objectSpread(_objectSpread({}, row), {}, {\n          isDisabled: true\n        });\n      }\n\n      return row;\n    });\n  }\n\n  return rows.map(function (row) {\n    if (selectedRowsKeys[row.key]) {\n      return _objectSpread(_objectSpread({}, row), {}, {\n        isSelected: true\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, row), {}, {\n      isSelected: false\n    });\n  });\n}"]},"metadata":{},"sourceType":"script"}