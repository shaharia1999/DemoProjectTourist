{"ast":null,"code":"/*!\r\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\r\n *\r\n * Copyright (c) 2014-2015, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\n'use strict';\n/**\r\n * Results cache\r\n */\n\nvar res = '';\nvar cache;\n/**\r\n * Expose `repeat`\r\n */\n\nmodule.exports = repeat;\n/**\r\n * Repeat the given `string` the specified `number`\r\n * of times.\r\n *\r\n * **Example:**\r\n *\r\n * ```js\r\n * var repeat = require('repeat-string');\r\n * repeat('A', 5);\r\n * //=> AAAAA\r\n * ```\r\n *\r\n * @param {String} `string` The string to repeat\r\n * @param {Number} `number` The number of times to repeat the string\r\n * @return {String} Repeated string\r\n * @api public\r\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  } // cover common, quick use cases\n\n\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n  var max = str.length * num;\n\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}","map":{"version":3,"sources":["F:/PorzotokFrontend/node_modules/repeat-string/index.js"],"names":["res","cache","module","exports","repeat","str","num","TypeError","max","length","substr"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,IAAIA,GAAG,GAAG,EAAV;AACA,IAAIC,KAAJ;AAEA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIE,SAAJ,CAAc,mBAAd,CAAN;AACD,GAHuB,CAKxB;;;AACA,MAAID,GAAG,KAAK,CAAZ,EAAe,OAAOD,GAAP;AACf,MAAIC,GAAG,KAAK,CAAZ,EAAe,OAAOD,GAAG,GAAGA,GAAb;AAEf,MAAIG,GAAG,GAAGH,GAAG,CAACI,MAAJ,GAAaH,GAAvB;;AACA,MAAIL,KAAK,KAAKI,GAAV,IAAiB,OAAOJ,KAAP,KAAiB,WAAtC,EAAmD;AACjDA,IAAAA,KAAK,GAAGI,GAAR;AACAL,IAAAA,GAAG,GAAG,EAAN;AACD,GAHD,MAGO,IAAIA,GAAG,CAACS,MAAJ,IAAcD,GAAlB,EAAuB;AAC5B,WAAOR,GAAG,CAACU,MAAJ,CAAW,CAAX,EAAcF,GAAd,CAAP;AACD;;AAED,SAAOA,GAAG,GAAGR,GAAG,CAACS,MAAV,IAAoBH,GAAG,GAAG,CAAjC,EAAoC;AAClC,QAAIA,GAAG,GAAG,CAAV,EAAa;AACXN,MAAAA,GAAG,IAAIK,GAAP;AACD;;AAEDC,IAAAA,GAAG,KAAK,CAAR;AACAD,IAAAA,GAAG,IAAIA,GAAP;AACD;;AAEDL,EAAAA,GAAG,IAAIK,GAAP;AACAL,EAAAA,GAAG,GAAGA,GAAG,CAACU,MAAJ,CAAW,CAAX,EAAcF,GAAd,CAAN;AACA,SAAOR,GAAP;AACD","sourcesContent":["/*!\r\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\r\n *\r\n * Copyright (c) 2014-2015, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Results cache\r\n */\r\n\r\nvar res = '';\r\nvar cache;\r\n\r\n/**\r\n * Expose `repeat`\r\n */\r\n\r\nmodule.exports = repeat;\r\n\r\n/**\r\n * Repeat the given `string` the specified `number`\r\n * of times.\r\n *\r\n * **Example:**\r\n *\r\n * ```js\r\n * var repeat = require('repeat-string');\r\n * repeat('A', 5);\r\n * //=> AAAAA\r\n * ```\r\n *\r\n * @param {String} `string` The string to repeat\r\n * @param {Number} `number` The number of times to repeat the string\r\n * @return {String} Repeated string\r\n * @api public\r\n */\r\n\r\nfunction repeat(str, num) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError('expected a string');\r\n  }\r\n\r\n  // cover common, quick use cases\r\n  if (num === 1) return str;\r\n  if (num === 2) return str + str;\r\n\r\n  var max = str.length * num;\r\n  if (cache !== str || typeof cache === 'undefined') {\r\n    cache = str;\r\n    res = '';\r\n  } else if (res.length >= max) {\r\n    return res.substr(0, max);\r\n  }\r\n\r\n  while (max > res.length && num > 1) {\r\n    if (num & 1) {\r\n      res += str;\r\n    }\r\n\r\n    num >>= 1;\r\n    str += str;\r\n  }\r\n\r\n  res += str;\r\n  res = res.substr(0, max);\r\n  return res;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}