"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ActivityTimeline;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _accordionTimeline = _interopRequireDefault(require("./accordionTimeline"));

var _basicTimeline = _interopRequireDefault(require("./basicTimeline"));

/**
 * The ActivityTimeline displays each of any item's upcoming, current, and past activities in chronological order (ascending or descending).
 * Notice that ActivityTimeline and TimelineMarker components are related and should be implemented together.
 * @category Layout
 */
function ActivityTimeline(props) {
  var variant = props.variant,
      rest = (0, _objectWithoutProperties2["default"])(props, ["variant"]);

  if (variant === 'accordion') {
    // eslint-disable-next-line react/jsx-props-no-spreading
    return /*#__PURE__*/_react["default"].createElement(_accordionTimeline["default"], rest);
  } // eslint-disable-next-line react/jsx-props-no-spreading


  return /*#__PURE__*/_react["default"].createElement(_basicTimeline["default"], rest);
}

ActivityTimeline.propTypes = {
  /** The id of the outer element. */
  id: _propTypes["default"].string,

  /**
   * This prop that should not be visible in the documentation.
   * @ignore
   */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].object]),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /** If true, expands multiples TimelineMarkers.
   * This value defaults to false.
   * Important: this prop is only to use when variant is `accordion`. */
  multiple: _propTypes["default"].bool,

  /** The variant changes the appearance of the timeline. Accepted variants include
   * default and accordion. */
  variant: _propTypes["default"].oneOf(['default', 'accordion']),

  /** It contain the name of the TimelineMarker that is expanded.
   * It is an array of string when multiple is true,
   * or a string when when multiple is false.
   * It must match the name of the TimelineMarker.
   * Important: this prop is only to use when variant is `accordion`. */
  activeSectionNames: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].string), _propTypes["default"].string]),

  /** Action fired when a TimelineMarker is selected.
   * The event params include the `activeSectionNames` and `toggledSection`.
   * Important: this prop is only to use when variant is `accordion`. */
  onToggleSection: _propTypes["default"].func
};
ActivityTimeline.defaultProps = {
  id: undefined,
  children: null,
  className: undefined,
  style: undefined,
  variant: 'default',
  multiple: false,
  onToggleSection: undefined,
  activeSectionNames: undefined
};