"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = TimelineMarker;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _context = require("../ActivityTimeline/context");

var _calendarIcon = _interopRequireDefault(require("./calendarIcon"));

var _accordionMarker = _interopRequireDefault(require("./accordionMarker"));

var _basicMarker = _interopRequireDefault(require("./basicMarker"));

/**
 * The TimelineMarker displays one event of an item's timeline. It's generally used to compose the ActivityTimeline component.
 * @category Layout
 */
function TimelineMarker(props) {
  var context = (0, _react.useContext)(_context.ActivityTimelineContext);

  if (context) {
    // eslint-disable-next-line react/jsx-props-no-spreading
    return /*#__PURE__*/_react["default"].createElement(_accordionMarker["default"], props);
  } // eslint-disable-next-line react/jsx-props-no-spreading


  return /*#__PURE__*/_react["default"].createElement(_basicMarker["default"], props);
}

TimelineMarker.propTypes = {
  /** The text to be displayed as the TimelineMarker's label. */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The text to be displayed as the TimelineMarker's description. */
  description: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The text with the formatted datetime of the event. */
  datetime: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The icon to show at the left of the TimelineMarker.
   * If not passed by default a calendar icon will be showed.  */
  icon: _propTypes["default"].node,

  /**
   * This prop that should not be visible in the documentation.
   * @ignore
   */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].object]),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /** The name is used to determine which TimelineMarker was clicked.
   * If `name` is not passed it will be generated. */
  name: _propTypes["default"].string,

  /** Set to true to show a loading symbol. Defaults to false */
  isLoading: _propTypes["default"].bool
};
TimelineMarker.defaultProps = {
  label: null,
  description: null,
  datetime: null,
  icon: /*#__PURE__*/_react["default"].createElement(_calendarIcon["default"], null),
  children: null,
  className: undefined,
  style: undefined,
  name: undefined,
  isLoading: false
};